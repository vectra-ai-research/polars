var searchIndex = new Map(JSON.parse('[["polars",{"t":"SQCCQCHCCCEECCCEHIFGPPPPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPKKPFFPNNNMMMMMMNMCNNNNNNNMMNNNNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMNNNNNNNNNNNNNNNOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPPIFPPIFPPPPIFPPPPIFTTPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNHNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCPPPPPPFPPPPPPGIGPPPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHNQQQQHHNNNNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPPGPPPPPPIPGPPKFFPPPPPGFKPPKPPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPTTTPPPFPPPFFGKFGFPPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPPGFPPPPPPPPPPPKGFFFFFPPPPPPJJFKKPPPGRPPPPPPIKPFPPPFIPKFPPPPPPIFPKPPPPPPGPPPFPPPPPFIKFIFTPPPPPPPPGPPPGKFPPPPPPTTJJFFPPPIFIFIPIGPPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKPRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPPPPSJPPTPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPPPGPKKKKKKPGFFFFFFFPPKPPPKPPPRPPPRRPRPPFFGKFPGGPPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPPIPPPPKPPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTSPPPPKKPPPPPRPPPPPGPKPFGPPPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPPGFPPPRPRPFFRJTTGGFFFFFPRIIIIIIFPKGKKKKKIKKKRKPGPPFPPKGPGTPPPPPPPGFKPKPPPPPPPGPPPPPPPPPFPPFFFFKFPPPPKIPTTPPTPFRPFFFFPPKIGPPPGPKKFFPKKKKKKKKPPPPPPPPPPPPKFPPPPPPFFFPPPFPGPKFPPPPPPPFPIIPGKKPFPPPPPPFPPPFIPPGFPFPPPPPPPTPKPGKPFPPPPPPPIKPFGIPPPKPPPPPPPPPPRRPFPPPPPPIFPPPPIFPPPPIFPPPPIFSKPPPFPGPPGFFPPFPPPPRRPPKKPPPFPFPPGGPPPPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNCHNNNNNNNNNHNMNNNNMNNNCNHNNHNNONNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHNOCNMNNNNMNNCNMMNNNNNMNNNNNMNNNNMMNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONOOOMNHMMNNHMNNNNNMMMNCNNNNNONNNMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNOONNHNNOHHNHNNNNNNNNNNNNHNOONONNNCOONHNHNNHHHHNNNNNNNNNHHNNNNNHHNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNNOOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNNOHHOHNNNNONNHHHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNHHHNNNNMCNNNNNNNNNNNNNNNNNOONNCNNNMMMNNNNNNMMMMNNNNNNNNNNNNNNNNMNNNNHNNNCNOOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNMNNNNMNNNONNNMMNNNNMNNCMNNNNMMNOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNHNNNNMNNMNNMNNMNNNNNNNHMMNNNNONMNNHHNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHMNNOMONONOHHHNHNOOOONONNOOHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNHHOCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMMNNNMNNNNHNHHNNNNNNNNHNNNNHNNHNNNNNNNHMNHMNNNNOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNONHMNNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOOHHNNNNNHNNNNNNMNOONNHNOOOMONMOHNNNNNNOOONNOOMNNOMOOCNNNNONNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNNNNNNNNNNNNNNNNNHNNMMHCNNOMNNOOOOONOOOOMNOONONNNNNNNONNHOOONMMNOONNOMNNOONNNQQQQNONNHONNNONNNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNNHMNNNHHNHNNNNNNHHNHNNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOMNNOOOOOONNNNOMNNNNMMMNNNNNNOOOOCNONCMNNOMONNNNOOOCMNNNNNNNNNNNNNMMNNNNMNNNNNNMNNNNNNNOOOOMNNNNNOMNMNNNNNCMNNNNNNMNNNMNNNNHNHNNONNONNNNNNMNNNNHNNNNNONONCHNHNHNHNHNNNMNNNNMNNNONHNNNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNOONNNNNMMMMNNNNNONNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCNMNNNNNNNNNNNNNNNNNMMNOOCNONNNNNNOONNNNNNNNNNMNOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMMMMMMMMMMMMMMMMMMNNNHNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNHNHNNNNKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNPPFGPPPPOHCSSSSSPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHNMCNNNNHMOMNNNMNNNMMNMNNHHHOMMMNNMNNNNNNNMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNHHHGPPHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNHNNNNHHNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKHCCCMMHHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNNHNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPGKPKGRPPFFIKPNNNNNNNNCNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNNMNNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNMNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","","","gt_eq","","","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","","","lt_eq","","","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","encode_hex","encode_hex_upper","eq","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","hash_impl","hour","hours","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","physical","","precision","register_value","remainder","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_data_type","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","check_schema","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","data_type","","","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","","get_any_value","","get_any_value_unchecked","","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_names","","","get_names_and_dtypes","","","get_names_owned","","","get_names_str","","","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","index_of","","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","insert_at_index","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_data","into_inner","","into_iter","","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_thrift","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_compressed","is_constant_duration","is_empty","","","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","","","limit","","line_terminator","list","lit","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_value","","maybe_decompress_bytes","mean","","","","","","median","","","","","","","median_reduce","","memory_map","","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_empty","new_from_index","","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","paths","","","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","","remove_bom","rename","","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_batch_size","","","with_cache","with_capacity","","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_column","","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","","","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","output_schema","paths","payload","predicate","","right_on","scan_type","schema","slice","sort_options","version","by","","data_type","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","data_type","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","PartitionedColumnChunkMD","borrow","borrow_mut","deref","deref_mut","drop","from","get_partitions","init","into","new","read_this_row_group","set_partitions","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","","gt_eq","","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","","lt_eq","","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[854,"polars::chunked_array::arithmetic"],[882,"polars::chunked_array::builder"],[1143,"polars::chunked_array::builder::list"],[1160,"polars::chunked_array::cast"],[1189,"polars::chunked_array::collect"],[1203,"polars::chunked_array::float"],[1205,"polars::chunked_array::from_iterator_par"],[1209,"polars::chunked_array::iterator"],[1264,"polars::chunked_array::iterator::par"],[1266,"polars::chunked_array::metadata"],[1549,"polars::chunked_array::object"],[1626,"polars::chunked_array::object::builder"],[1649,"polars::chunked_array::object::registry"],[1677,"polars::chunked_array::ops"],[1882,"polars::chunked_array::ops::arity"],[1918,"polars::chunked_array::ops::float_sorted_arg_max"],[1920,"polars::chunked_array::ops::gather"],[1923,"polars::chunked_array::ops::search_sorted"],[1953,"polars::chunked_array::ops::sort"],[1960,"polars::chunked_array::ops::sort::arg_bottom_k"],[1961,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1969,"polars::chunked_array::ops::sort::options"],[1982,"polars::chunked_array::temporal"],[1990,"polars::chunked_array::temporal::conversion"],[1993,"polars::datatypes"],[3441,"polars::datatypes::categorical"],[3458,"polars::datatypes::categorical::revmap"],[3464,"polars::datatypes::categorical::string_cache"],[3483,"polars::docs"],[3485,"polars::error"],[3577,"polars::error::PolarsError"],[3581,"polars::error::constants"],[3584,"polars::frame"],[3852,"polars::frame::explode"],[3881,"polars::frame::group_by"],[4120,"polars::frame::group_by::GroupByMethod"],[4121,"polars::frame::group_by::GroupsProxy"],[4123,"polars::frame::group_by::aggregations"],[4136,"polars::frame::group_by::expr"],[4139,"polars::frame::row"],[4249,"polars::functions"],[4251,"polars::prelude"],[9574,"polars::prelude::AggExpr"],[9581,"polars::prelude::BooleanFunction"],[9584,"polars::prelude::DslPlan"],[9638,"polars::prelude::Expr"],[9673,"polars::prelude::FunctionExpr"],[9695,"polars::prelude::GroupByMethod"],[9696,"polars::prelude::GroupsProxy"],[9698,"polars::prelude::LiteralValue"],[9701,"polars::prelude::PolarsError"],[9705,"polars::prelude::StringFunction"],[9719,"polars::prelude::TemporalFunction"],[9721,"polars::prelude::_internal"],[9739,"polars::prelude::aggregations"],[9752,"polars::prelude::arity"],[9788,"polars::prelude::array"],[9807,"polars::prelude::binary"],[9824,"polars::prelude::buffer"],[9898,"polars::prelude::buffer::Buffer"],[9901,"polars::prelude::cat"],[9902,"polars::prelude::chunkedarray"],[9968,"polars::prelude::chunkedarray::string"],[10007,"polars::prelude::chunkedarray::string::infer"],[10038,"polars::prelude::cloud"],[10088,"polars::prelude::cloud::options"],[10097,"polars::prelude::compression"],[10099,"polars::prelude::compression::magic"],[10104,"polars::prelude::datatypes"],[10377,"polars::prelude::datatypes::categorical"],[10394,"polars::prelude::datatypes::categorical::revmap"],[10400,"polars::prelude::datatypes::categorical::string_cache"],[10404,"polars::prelude::datetime"],[10407,"polars::prelude::default_arrays"],[10413,"polars::prelude::dt"],[10465,"polars::prelude::expr"],[10468,"polars::prelude::fixed_size_list"],[10488,"polars::prelude::float_sorted_arg_max"],[10490,"polars::prelude::function_expr"],[10663,"polars::prelude::function_expr::BooleanFunction"],[10666,"polars::prelude::function_expr::FunctionExpr"],[10688,"polars::prelude::function_expr::StringFunction"],[10702,"polars::prelude::function_expr::TemporalFunction"],[10704,"polars::prelude::function_expr::cat"],[10706,"polars::prelude::function_expr::pow"],[10710,"polars::prelude::function_expr::rolling"],[10741,"polars::prelude::function_expr::rolling_by"],[10772,"polars::prelude::gather"],[10775,"polars::prelude::interpolate"],[10779,"polars::prelude::interpolate_by"],[10780,"polars::prelude::mode"],[10781,"polars::prelude::nan_propagating_aggregate"],[10786,"polars::prelude::null"],[10817,"polars::prelude::schema_inference"],[10844,"polars::prelude::search_sorted"],[10850,"polars::prelude::series"],[10872,"polars::prelude::sort"],[10879,"polars::prelude::sort::arg_bottom_k"],[10880,"polars::prelude::sort::arg_sort_multiple"],[10888,"polars::prelude::sort::options"],[10901,"polars::prelude::strings"],[10955,"polars::prelude::udf"],[10961,"polars::prelude::utf8"],[10965,"polars::series"],[11401,"polars::series::amortized_iter"],[11425,"polars::series::arithmetic"],[11446,"polars::series::arithmetic::checked"],[11452,"polars::series::ops"],[11479,"dyn_clone::sealed"],[11480,"polars_core::datatypes"],[11481,"polars_core::chunked_array"],[11482,"polars_error"],[11483,"core::result"],[11484,"polars_core::series"],[11485,"core::ops::function"],[11486,"num_traits"],[11487,"num_traits::cast"],[11488,"polars_core::series::arithmetic::borrowed"],[11489,"polars_core::frame::group_by::proxy"],[11490,"polars_core::chunked_array::object"],[11491,"core::option"],[11492,"polars_arrow::array"],[11493,"alloc::boxed"],[11494,"core::iter::traits::iterator"],[11495,"polars_core::chunked_array::list::iterator"],[11496,"polars_utils::pl_str"],[11497,"core::marker"],[11498,"alloc::borrow"],[11499,"polars_core::series::amortized_iter"],[11500,"alloc::string"],[11501,"polars_core::datatypes::dtype"],[11502,"polars_arrow::array::binview::view"],[11503,"polars_core::chunked_array::ops::sort::options"],[11504,"polars_core::chunked_array::cast"],[11505,"polars_core::series::arithmetic::borrowed::checked"],[11506,"core::slice::iter"],[11507,"core::iter::adapters::map"],[11508,"alloc::vec"],[11509,"compact_str"],[11510,"polars_core::chunked_array::metadata"],[11511,"core::iter::traits::double_ended"],[11512,"polars_arrow::offset"],[11513,"core::fmt"],[11514,"core::iter::traits::collect"],[11515,"polars_core::chunked_array::from_iterator"],[11516,"polars_arrow::bitmap::immutable"],[11517,"core::convert"],[11518,"core::borrow"],[11519,"polars_arrow::pushable"],[11520,"rayon::iter"],[11521,"polars_arrow::trusted_len"],[11522,"polars_core::datatypes::any_value"],[11523,"polars_arrow::array::binary"],[11524,"std::sync::rwlock"],[11525,"polars_core::chunked_array::logical"],[11526,"polars_core::datatypes::time_unit"],[11527,"core::iter::traits::exact_size"],[11528,"polars_core::series::series_trait"],[11529,"polars_core::chunked_array::iterator"],[11530,"polars_core::scalar"],[11531,"polars_core::chunked_array::metadata::guard"],[11532,"polars_core::chunked_array::metadata::interior_mutable"],[11533,"alloc::sync"],[11534,"polars_core::chunked_array::metadata::md_trait"],[11535,"core::ops::range"],[11536,"polars_core::datatypes::field"],[11537,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11538,"polars_core::chunked_array::ops::rolling_window"],[11539,"polars_ops::chunked_array::scatter"],[11540,"polars_utils::index"],[11541,"ahash::random_state"],[11542,"polars_utils::hashing"],[11543,"ndarray"],[11544,"ndarray::dimension::dim"],[11545,"ndarray::data_repr"],[11546,"either"],[11547,"core::any"],[11548,"polars_core::frame"],[11549,"polars_core::chunked_array::arithmetic::numeric"],[11550,"polars_core::chunked_array::builder::list::anonymous"],[11551,"polars_core::chunked_array::builder::list::boolean"],[11552,"polars_core::chunked_array::builder::list::primitive"],[11553,"polars_core::chunked_array::builder::list"],[11554,"polars_core::chunked_array::builder"],[11555,"polars_core::chunked_array::builder::list::binary"],[11556,"polars_core::chunked_array::builder::list::null"],[11557,"polars_core::chunked_array::builder::string"],[11558,"polars_arrow::array::binview"],[11559,"polars_core::chunked_array::builder::boolean"],[11560,"polars_core::chunked_array::builder::null"],[11561,"polars_core::chunked_array::builder::primitive"],[11562,"core::clone"],[11563,"polars_core::series::implementations::null"],[11564,"core::hash"],[11565,"polars_core::chunked_array::collect"],[11566,"polars_core::chunked_array::float"],[11567,"polars_core::chunked_array::from_iterator_par"],[11568,"polars_arrow::array::boolean"],[11569,"polars_arrow::array::fixed_size_list"],[11570,"polars_core::chunked_array::metadata::env"],[11571,"polars_core::chunked_array::metadata::collect"],[11572,"bitflags::iter"],[11573,"std::fs"],[11574,"std::sync::mutex"],[11575,"polars_arrow::datatypes"],[11576,"polars_arrow::bitmap::utils::iterator"],[11577,"polars_arrow::bitmap::utils::zip_validity"],[11578,"polars_core::chunked_array::object::builder"],[11579,"polars_core::chunked_array::object::registry"],[11580,"polars_core::chunked_array::ops"],[11581,"polars_arrow::legacy::array::slice"],[11582,"polars_core::chunked_array::ops::arity"],[11583,"polars_arrow::array::static_array"],[11584,"core::error"],[11585,"polars_arrow::array::primitive"],[11586,"polars_core::chunked_array::ops::search_sorted"],[11587,"polars_core::utils"],[11588,"polars_row::row"],[11589,"chrono::naive::datetime"],[11590,"chrono_tz::timezones"],[11591,"chrono::naive::time"],[11592,"polars_core::chunked_array::logical::categorical"],[11593,"polars_core::chunked_array::logical::categorical::builder"],[11594,"polars_arrow::array::static_array_collect"],[11595,"std::path"],[11596,"std::ffi::os_str"],[11597,"bytemuck::zeroable"],[11598,"polars_core::chunked_array::logical::categorical::revmap"],[11599,"polars_core::chunked_array::logical::categorical::merge"],[11600,"core::cmp"],[11601,"polars_arrow::datatypes::physical_type"],[11602,"polars_arrow::types"],[11603,"chrono::time_delta"],[11604,"chrono::naive::date"],[11605,"polars_core::datatypes::into_scalar"],[11606,"polars_plan::dsl::expr"],[11607,"polars_core::chunked_array::logical::categorical::string_cache"],[11608,"polars_error::warning"],[11609,"polars_parquet::parquet::error"],[11610,"planus::errors"],[11611,"simdutf8::basic"],[11612,"regex::error"],[11613,"std::io::error"],[11614,"alloc::collections"],[11615,"polars_core::schema"],[11616,"polars_core::series::from"],[11617,"hashbrown::set"],[11618,"polars_arrow::datatypes::schema"],[11619,"polars_core::frame::row"],[11620,"polars_core::frame::group_by"],[11621,"polars_time::group_by::dynamic"],[11622,"polars_lazy::frame"],[11623,"polars_core::chunked_array::ndarray"],[11624,"polars_arrow::record_batch"],[11625,"polars_arrow::array::struct_"],[11626,"polars_time::windows::duration"],[11627,"polars_core::frame::explode"],[11628,"polars_utils::idx_vec"],[11629,"rayon::iter::plumbing"],[11630,"polars_plan::plans::aexpr"],[11631,"polars_core::frame::group_by::into_groups"],[11632,"core::iter::adapters::copied"],[11633,"core::iter::adapters::zip"],[11634,"polars_utils::float"],[11635,"polars_arrow::types::native"],[11636,"polars_core::frame::group_by::aggregations::agg_list"],[11637,"polars_core::frame::group_by::aggregations"],[11638,"polars_core::frame::group_by::expr"],[11639,"polars_core::frame::row::av_buffer"],[11640,"polars_utils::arena"],[11641,"polars_plan::plans::ir"],[11642,"polars_ops::frame::join::hash_join"],[11643,"polars_ops::frame::join::args"],[11644,"polars_plan::dsl::struct_"],[11645,"polars_ops::chunked_array::gather::chunked"],[11646,"polars_ops::frame"],[11647,"polars_io::csv::read::reader"],[11648,"polars_io::predicates"],[11649,"polars_io::mmap"],[11650,"polars_plan::dsl::selector"],[11651,"polars_plan::frame::opt_state"],[11652,"core::alloc"],[11653,"polars_plan::plans::anonymous_scan"],[11654,"polars_lazy::scan::anonymous_scan"],[11655,"polars_plan::dsl::expr_dyn_fn"],[11656,"polars_plan::plans::visitor"],[11657,"polars_plan::dsl::function_expr"],[11658,"polars_ops::series::ops::arg_min_max"],[11659,"polars_plan::dsl::array"],[11660,"polars_plan::dsl::list"],[11661,"polars_plan::dsl::function_expr::schema"],[11662,"polars_io::ipc::ipc_stream"],[11663,"std::io"],[11664,"polars_ops::chunked_array::binary"],[11665,"polars_time::chunkedarray::string"],[11666,"std::os::fd::owned"],[11667,"polars_ops::chunked_array::list"],[11668,"std::os::fd::raw"],[11669,"polars_ops::series::ops"],[11670,"polars_ops::chunked_array::strings"],[11671,"core::mem::maybe_uninit"],[11672,"polars_ops::chunked_array::strings::namespace"],[11673,"polars_io::csv::read::read_impl::batched"],[11674,"polars_io::csv::write::writer"],[11675,"polars_io::ipc::write"],[11676,"polars_io::parquet::read::reader"],[11677,"polars_io::parquet::read::read_impl"],[11678,"polars_io::parquet::write::writer"],[11679,"polars_io::parquet::write::batched_writer"],[11680,"polars_plan::dsl::binary"],[11681,"polars_plan::dsl::udf"],[11682,"polars_lazy::frame::exitable"],[11683,"hashbrown::map"],[11684,"polars_plan::dsl::cat"],[11685,"polars_ops::series::ops::round"],[11686,"polars_time::series"],[11687,"polars_lazy::scan::csv"],[11688,"polars_lazy::scan::ipc"],[11689,"polars_lazy::scan::ndjson"],[11690,"polars_lazy::scan::parquet"],[11691,"polars_time::chunkedarray::rolling_window"],[11692,"polars_time::windows::bounds"],[11693,"polars_time::windows::group_by"],[11694,"polars_time::windows::window"],[11695,"polars_io::csv::read::options"],[11696,"polars_io::csv::write::options"],[11697,"polars_ops::frame::join::asof"],[11698,"polars_io::ipc::ipc_file"],[11699,"polars_ops::series::ops::interpolation::interpolate"],[11700,"polars_io::json"],[11701,"polars_ops::series::ops::is_between"],[11702,"polars_ops::series::ops::rank"],[11703,"polars_io::parquet::read::options"],[11704,"polars_io::parquet::write::options"],[11705,"polars_plan::plans"],[11706,"polars_plan::dsl::arity"],[11707,"polars_plan::dsl::function_expr::boolean"],[11708,"polars_plan::dsl::function_expr::cat"],[11709,"polars_plan::dsl::function_expr::datetime"],[11710,"polars_plan::dsl::function_expr::pow"],[11711,"polars_plan::dsl::function_expr::strings"],[11712,"polars_plan::dsl::function_expr::struct_"],[11713,"polars_plan::dsl::functions::temporal"],[11714,"polars_parquet::arrow::write"],[11715,"polars_plan::dsl::options"],[11716,"polars_parquet::parquet::metadata::file_metadata"],[11717,"polars_plan::plans::lit"],[11718,"polars_plan::plans::options"],[11719,"polars_arrow::legacy::kernels::rolling"],[11720,"polars_arrow::legacy::kernels::time"],[11721,"polars_lazy::scan::file_list_reader"],[11722,"polars_io::cloud::options"],[11723,"polars_parquet::parquet::metadata::column_order"],[11724,"polars_ops::chunked_array::binary::namespace"],[11725,"polars_io::ndjson::core"],[11726,"polars_ops::frame::join::cross_join"],[11727,"polars_lazy::dsl::eval"],[11728,"polars_time::chunkedarray::date"],[11729,"polars_time::chunkedarray::datetime"],[11730,"polars_time::chunkedarray::duration"],[11731,"core::ffi::c_str"],[11732,"core::default"],[11733,"polars_parquet::parquet::metadata::column_chunk_metadata"],[11734,"polars_core::series::ops"],[11735,"polars_plan::dsl::dt"],[11736,"polars_ops::series::ops::various"],[11737,"polars_arrow::scalar"],[11738,"polars_lazy::dsl::list"],[11739,"crossterm::command"],[11740,"polars_io::shared"],[11741,"polars_plan::plans::apply"],[11742,"polars_plan::dsl::function_expr::list"],[11743,"polars_plan::dsl::function_expr::range"],[11744,"polars_plan::dsl::function_expr::binary"],[11745,"polars_plan::dsl::function_expr::array"],[11746,"polars_parquet::arrow::read::statistics"],[11747,"alloc::ffi::c_str"],[11748,"polars_arrow::array::struct_::mutable"],[11749,"polars_arrow::array::growable::structure"],[11750,"polars_arrow::legacy::array::default_arrays"],[11751,"polars_arrow::buffer::immutable"],[11752,"polars_arrow::array::list"],[11753,"polars_core::named_from"],[11754,"polars_ops::frame::join"],[11755,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11756,"polars_time::chunkedarray::time"],[11757,"core::num::nonzero"],[11758,"parquet_format_safe::parquet_format"],[11759,"polars_arrow::array::struct_::iterator"],[11760,"polars_ops::frame::join::asof::groups"],[11761,"polars_ops::chunked_array::list::namespace"],[11762,"polars_plan::dsl::name"],[11763,"polars_core::utils::supertype"],[11764,"polars_io::options"],[11765,"polars_core::chunked_array::ops::aggregate"],[11766,"polars_core::chunked_array::ops::aggregate::quantile"],[11767,"polars_arrow::legacy::index"],[11768,"polars_ops::chunked_array::strings::split"],[11769,"core::pin"],[11770,"core::io::borrowed_buf"],[11771,"parquet_format_safe::thrift::varint::decode"],[11772,"polars_time::chunkedarray::rolling_window::dispatch"],[11773,"polars_time::round"],[11774,"polars_parquet::parquet::metadata::schema_descriptor"],[11775,"polars_core::chunked_array::ops::aggregate::var"],[11776,"polars_plan::dsl::string"],[11777,"polars_ops::series::ops::to_dummies"],[11778,"polars_time::truncate"],[11779,"polars_io::csv::read::schema_inference"],[11780,"polars_time::upsample"],[11781,"polars_core::hashing::vector_hasher"],[11782,"alloc::collections::btree::map"],[11783,"polars_io::parquet::read::metadata"],[11784,"polars_parquet::parquet::metadata::row_metadata"],[11785,"polars_utils::mmap::private"],[11786,"polars_parquet::arrow::read::deserialize::utils::filter"],[11787,"polars_ops::chunked_array::array::namespace"],[11788,"polars_ops::chunked_array::array"],[11789,"polars_io::csv::read::buffer"],[11790,"polars_time::chunkedarray::string::patterns"],[11791,"polars_time::chunkedarray::string::infer"],[11792,"polars_arrow::legacy::array::fixed_size_list"],[11793,"polars_plan::dsl::function_expr::rolling"],[11794,"polars_plan::dsl::function_expr::rolling_by"],[11795,"polars_arrow::legacy::array::null"],[11796,"polars_arrow::bitmap::mutable"],[11797,"polars_arrow::array::utf8"],[11798,"polars_core::series::iterator"],[11799,"alloc::rc"],[11800,"polars_core"],[11801,"polars_core::chunked_array::struct_"],[11802,"polars_core::chunked_array::iterator::par"],[11803,"polars_core::chunked_array::object::extension"],[11804,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11805,"polars_core::chunked_array::ops::gather"],[11806,"polars_core::chunked_array::ops::sort"],[11807,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11808,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11809,"polars_core::chunked_array::temporal"],[11810,"polars_core::chunked_array::temporal::conversion"],[11811,"polars_core::chunked_array::temporal::time"],[11812,"polars_core::chunked_array::logical::date"],[11813,"polars_core::chunked_array::logical::datetime"],[11814,"polars_core::chunked_array::logical::decimal"],[11815,"polars_core::chunked_array::logical::duration"],[11816,"polars_core::datatypes::aliases"],[11817,"polars_utils::aliases"],[11818,"polars_core::chunked_array::logical::time"],[11819,"polars_error::constants"],[11820,"polars_core::functions"],[11821,"polars_core::frame::horizontal"],[11822,"polars_io::utils::other"],[11823,"polars_io::parquet::metadata"],[11824,"polars_arrow::legacy::prelude"],[11825,"polars_arrow::legacy::array"],[11826,"polars_io::path_utils"],[11827,"polars_ops::series::ops::rolling"],[11828,"polars_parquet::parquet::write"],[11829,"polars_io::utils"],[11830,"polars_ops::frame::join::general"],[11831,"polars_io::parquet::read"],[11832,"polars_ops::series::ops::abs"],[11833,"polars_plan::dsl::functions::selectors"],[11834,"polars_plan::dsl::functions::horizontal"],[11835,"polars_plan::dsl::functions::arity"],[11836,"polars_plan::dsl"],[11837,"polars_plan::dsl::functions::range"],[11838,"polars_plan::dsl::functions::index"],[11839,"polars_ops::chunked_array"],[11840,"polars_plan::dsl::functions::coerce"],[11841,"polars_plan::dsl::functions::syntactic_sugar"],[11842,"polars_time::base_utc_offset"],[11843,"polars_io::csv::read"],[11844,"polars_time"],[11845,"polars_ops::series::ops::clip"],[11846,"polars_io"],[11847,"polars_ops::series::ops::horizontal"],[11848,"polars_lazy::dsl::functions"],[11849,"polars_plan::dsl::functions::concat"],[11850,"polars_ops::series::ops::index"],[11851,"polars_io::csv::read::parser"],[11852,"polars_ops::series::ops::cum_agg"],[11853,"polars_ops::series::ops::diff"],[11854,"polars_time::dst_offset"],[11855,"polars_ops::series::ops::floor_divide"],[11856,"polars_ops::chunked_array::strings::concat"],[11857,"polars_ops::series::ops::duration"],[11858,"polars_ops::chunked_array::datetime::replace_time_zone"],[11859,"polars_time::date_range"],[11860,"polars_ops::series::ops::interpolation"],[11861,"polars_ops::series::ops::interpolation::interpolate_by"],[11862,"polars_io::utils::compression"],[11863,"polars_ops::series::ops::is_first_distinct"],[11864,"polars_ops::series::ops::is_in"],[11865,"polars_ops::series::ops::is_last_distinct"],[11866,"polars_io::parquet::read::utils"],[11867,"polars_ops::series::ops::negate"],[11868,"polars_ops::series::ops::not"],[11869,"polars_ops::series::ops::int_range"],[11870,"polars_plan::dsl::functions::repeat"],[11871,"polars_ops::chunked_array::repeat_by"],[11872,"polars_ops::series::ops::replace"],[11873,"polars_ops::chunked_array::strings::strip"],[11874,"polars_io::partition"],[11875,"polars_io::parquet::read::predicates"],[11876,"polars_io::parquet::read::mmap"],[11877,"polars_time::chunkedarray"],[11878,"polars_io::cloud"],[11879,"polars_io::utils::compression::magic"],[11880,"polars_ops::chunked_array::mode"],[11881,"polars_ops::chunked_array::nan_propagating_aggregate"],[11882,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Ln000`l00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000101``000000000000000000000000000`0`00000001010000000100000000000000000000000000000000000`000000000000100000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABf00000000000000000000000000````````````````ACjACnAD`ADbABh0ABjABlABn0AC`ACb54ACdACf5ACh5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADh000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fh000000000000000000000000000``ADlADn1000101000`AE```AEbAEd````AEhAElAEn21021021021021021021021021210210`210210210210210``AFlJnGh0Jd`3Mf22````````42110Mh4AF`4343434343434433434321560432156043150431504315043AFb54542654332671543267154541Ml777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AG`00000Jf1111`11111111001111111111111111111``111111101111111110Cb22222222222`AGl000000000000000000000````AGn00AH`0000000```00`0`10000AHn```````````````````````````0AHd``AI`22222DJl3``0``3EnFd54AHf055AHh0AHj`438438AHl00549549549545495495454954977555444AIb0`AIdAIf`87<8877<`AIhAIj`AIl0==;:?;:?;:?AInAJ`??=<AJb0AJd11?>;?>AJfAI`0EnFd=4AJh0AJjAJlAJn0`0AK`AKbAKd0`AHh0AKf>AKhAKjAKl=<AHn>=0>=0>=0AHj5?>1?>?>?>>?>>?>`AKn`ALhALdAL``````````````````````````````````````ALl00`0`000000000000000000`00000`````<<````````````EnFd101010>>```````````AOl`J`EjDj```````21AGb`2``3`0320```32`````````3200``32``3200``0320``Db0431```11`51431``431```AOb`3DJnDK```````8``764``764``764``764``4`555444AOh875``3``5B@bKj1010An;:8`;:`;``939```````````BA``3`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALb0;09Kf69AMhAOjJ`AOlEjAOnOf;NfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bAMhJ`01Kf1CdKnNfNhF`NlNnN`KbKhEfEdAjAlBdAMjAMh110AMl0AMn0J`Kf0Db000EjOfANdALb4544:BB`6DKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbAMjBB`KfDKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bEjAOb`AOfJ`3Kf0200000AMh`KnNfNhF`NlNnN`KbKhEfEdDb=AOhAOb>AOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbKfAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbKfAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbOfB@f0002Ej00`2Kf4B@hAOhAObJ`AOl6;99AMjBB`77DKbDhAhjCdKnBn=<;AMhAOj<;EjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbAMjBB`Kf0DKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bKfCdKnNfNhF`NlNnN`KbKhEfEdAMjDb1BB`?DKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bAOfKf0000AMhJ`OfDb00AOh3AOlEj0AOn5Kj<;7888888555777333222111666000<<<;;;9AObAOdAMjB@h9983AOj<<8776;55AGbB@b<<<<<4BB`Kf00DKbDhAhjCdKnBn<AOhAObAMh>J`00000AOlEj000AOnOf00Kj0NfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGb00B@bEjAMhKf01Db00000001111110002ALb00030AOb33333AOf544444051DjAhjCdKnBnNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AObAMhEjJ`BAlALb444444Db3AOl5OfKjAGbB@b8Kf0:6AMjBB`2DKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bEj2DbAMjBB`KfDKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bBB`BAnKf0000AMhJ`DbEj00200033020AOb3111011931313111131111319ALb502153555555``2AOl6`B@h887888CdKnNfNhF`NlNnN`KbKhEfEdAMh0Of0Kf0DJnDK`AMj33333333B@h54AOnBB`8888888166DbJ`Kj9;96CdKnNfNhF`NlNnN`KbKhEfEdKf0AOb111Of2222BB`AMh0444J`5CdKnNfNhF`NlNnN`KbKhEfEdKf00>EjOfKj20AMh00AGbDb6AOhAOb4AOjJ`AOl:AOn:9NfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bEj2KfDb111J`3Kj133AMl0AMn0B@f00045AMjBB`8DKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDbAMjBB`KfDKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bJ`EjDb21Kj1AMjBB`KfDKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@b1AMh0ALb10Ej1DbAMjBB`KfDKbDhAhjCdKnBnB@hAOhAObAMhAOjJ`AOlEjAOnOfKjNfNhF`NlNnN`KbKhEfEdKdLfAjAlFbBdL`KlLbB@`AGbB@bDJnDK`ALbDb00J``````AOb`AOh10``AOd`````2121``BBl0000`00`0000000`0``BC`n000DKd`112101```11111112BBn302302`223002302302`300223002222222`302302`0``````02302302023023022DKfDKh10```BDf`0BDd11``0``01AAj0000000000000BElBEn3421034222342342342224210342103421034222222222242224442`222222342210342222222222222222`2222422222222222221034221034210222222222222222222221022222222222222`222222222222222221022222222222222222342222221034222221034221034222222222210342222222`BG`000000000000000000000000000`BGf0``0``````BGnC``2`22222222210`222BGb1BDn40`1023BHhBGjBGh453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BHb4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DKjDKl0``````````BHnBI`0`BIb0BIdBIf``1011110101010101010`10011010101010BDl211210210210210210`02102102100000022110`2102102121021```210210210210210``BLhBKbBBb`BNf1CGdCCh01`CDd`C@h5```3ALlAOlBDf6```::`CI`J`EjDj``>``````````CCl```?```CElCEf`CDjAHnBLhCGlCGh``CIf;:AGb``BBb5`<``=``152=<1`````CBhCEd``CF``BFhBKh00CFh69`;J`Ej```````CGj><```````````````````````````````````>``>CCj:nCEl<?``1BLhCGl003CGhBNfBGf3CCl```````555553`````<CBjCBl`CLl6CIf?>AGb0``1`8J`Ej``:``:31022``CEf`3=CFhC@h??`CGbBBbn`CGh:879``````BKhD@fCGl;:77DKd6`BKb7CHn```;BLhAGb55577````:CGn0`````2``2>;6BNfBGfBDf44`CIfAOl61J`Ej8``3108``9C@hBFhCDjAHn=CBl```CClAHdBBb``0BLhCGj`CGf`AOb``CFh`BGf``````CHn>>CF``33DjDJnDK`CGl0OlCGh``n:CLlBGnC``````BNf=`BBb`````CCl`CIfAOl``1J`EjAGb``4210``4210``4210``BKbBLh0`2``````=````````CGd0`000`0?0Dj11100CGhAI`CFhCHn`````CCj``DGfCGn``1```2BBbCDn`=`=``=BNfBGfBDfD@f`````DKnCBhCBjCClCEdALl`;CGl0AOh`CE`OlCI`J`EjAGb````BLh````````BBb`AOb`C@h0`CCd94<11CF`0CD`07CFhCEfBNfAHnBGf1;210;20CGhB@bKjOl332176545?<3?<CBl4CCfCGn?BKh`:8CGbCCh``::987AnCDjCE`9CDdBLh`1`n``2CBhDJlCEdCElDL`BDfCGdC@h0BBb`CIfD@fJ`EjAGbCJ`BLh``````43`4`DKdAHnCD`0``;CEfCGhABfnBK`CHl``Dj`BKh0```````AOh2```````C@h```````````BA``>`CElCGn`BNfBGf``=`7D@fCJ`CEfBLh0CIf1```BBb`82CGl33CGh4`14DKnCBhCBjCClCEdALlCHl`;;``````BKb8<<``CElBKh0n01CBl`ABfCFh````33```>B@b1`BBb````CIf````````BLh7000CCf553CGlBGnC```CF`DJlDL`;99```555`CGj`6``BNfBGfAOl<<J`Ej`n``>```2`<<<<<<`21AGb``?1``3`BKbBBbCGn98BLhCBlBKhCGl`3``5`2CGhCIf<;99``1```922`2511111111ABfBA`C@h`473?><``3?><``3?><``3?><````CF`CFh>`:`Ej?```;8`CCdAGb0=ALb0BNfBGf``?<<`BBb`0CBl``CGn?;?CDnAHnDj8=`CA`BF`BKfBL`CAlCAnCB`CBbCBdBE`BFbCBfBFnCBhCBjCBlCBnAAlA@dCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhBFlMbBD`BAbBDjOlCIlCInCJ``BF`BJ`0``BJd;BJf000BJh4BJj`BBbBK`1BKbBFn0BKd1BKf5`5`5BKh`MjBKlCHjBKn00CH`;BF`<`<AC`ACb1010AHd:?`?AHf0BBb0`22`BFlBLjBLlBLn42104AHh5BM``1AHj71`BMbCHj`9AMl990AMn0::`BMdBKn7BMh=8=MbBMjBMl000MjBNb11BNf2ANdBNhBM`ALbBNj`877`BBbBNn0`CCnBJjBObBOhBOlC@`4`7`BKbBKh<00<00010<0CAdBLlALnBKlC@dBO`<CA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMj0CIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`CAdBLlALnBKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`BF`9`ABn1CAnCBbCHhC@jC@l`BMhC@n2CA``BM`:AHlBBbAOf=2201`1Mj2CAf3OnCAhBFlBOlCAj:0:CC``;;`9`9`9<BF`BKfBL`CAlCAnCB`CBbCBdBE`BFbCBfBFnCBhCBjCBlCBnAAlA@dCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhBFlMbBD`BAbBDjOlCIlCInCJ`BM`CA`BF`BKfBL`CAlCAnCB`CBbCBdBE`BFbCBfBFnCBhCBjCBlCBnAAlA@dCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhBFlMbBD`BAbBDjOlCIlCInCJ`CA`BF`BKfBL`CAlCAnCB`CBbCBdBE`BFbCBfBFnCBhCBjCBlCBnAAlA@dCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhBFlMbBD`BAbBDjOlCIlCInCJ`CBdBE`BFb`CJbCAlCB`CAnCBbBFnMj`BKlCCjBJb``BF``B@f000ADlADn100033`CId0CC`BJhCCb<;BKh`CDlCEnCFh`BNn`CJbCAl````BLlCJj4BLn9BD`266``BF`CJlBBb99``BJ`CId4CK`0`3``3`3`3``3CKb?BFlBAb0`CDb```0`````CKdCKfCAhCH`CKhBFnCHd1CHfCIlCCbMj0BF`BL`CAnCBbCKjBE`BFbCBlCC`:CCdBJbCCjCCnCD`CDbCDdCDfCDjCDlCDnCEbCEdCEhCElCEnCF`CFhBBbBLd00CH`CHbCHdCHhCHjCHlCHnCIbBKhMj000CIhCIjOnBFhBD`BAbBDjOl``CAdBLlALn0BKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLd0CGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMj0CIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`CAdBLlALn0BKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`CEhEnFdCFhBF`0001Mj`BDn`CIj`BLnBBbBKh7CLdCHbBK`4BKd5999CAdBLlALnBKlC@dBO`BJjCA`0BF`0BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMj0CIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`BBbBF`01BM```2AOf1;Of``CC``CHbBKhMj0CCbCJj0```CLn2CBdBE`BFbBFnCBhCBjCBlAAl>:CCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfBNfBBb0CGbC@hBLd0CGdCGfCGhCGjCGlCGnBLhCLdCHbCHfCHhCHjCHlCHnCI`CIbBKbCIfMj00CIhCIjOnBFhBFl0BD`BAbBDjOlCJ`BBbAI`0BE`00BFb00BFn00CBh00CBj00CBl00AAl00CC`00CCb00CCd00CCf00BJb00CCh00CCj00CCl00CCn00CD`00CDb00CDd00CDf00CDj00CDl00CDn00CE`00CEb00CEd00CEj00CEl00CEn00CF`00CFb00CFd00CFf00BBb00CGb00C@h00CGd00CGf00CGh00CGj00CGl00CGn00CHb00CHf00CHh00CHj00CHl00CHn00CI`00CIb00BKb00Mj00CIh00CIj00BFh00BD`00BAb00BDj00Ol00CJ`00CMdBE`CHhBBb0<```BF`0AIb20`BKh3BNnA@d111AC`CA`601BM`BJd00BFlBDjCC`;<`;<<AIdAIf6=>3:::CMhCMjACbAOdBKlBJjCJbCAlCB`BObCMlBMdCMnBOhCN`CNbCJlBOlC@`AC`=<;9BOn`BF`BLnBBb`0CDb0`BLdCAf33`MjBMhC@nC@jCBdBE`BFbCBfBFn0CBhCBjCBlAAlA@dBKnCC`CCbCNdCCdCCfBJbCChCCjCCl0CCnCD`0CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfBBb0CGbC@h0BLdCGd0CGf0CGh0CGj0CGl0CGn0BLh0CLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKh0000CIdCIfMj00CIhCIjOnBFhBFlBD`BAbBDjOlCIlCInCJ``;CBd:`BKlCHjCHh`BBbCAdBLlALn6C@dBO`BJjCA`BF`00BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAl0A@dC@`DDjCC`CCbCCdCCf0BJb0CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBb0000000000000CGbC@hBLd0000000000CGdCGfCGhCGjCGlCGnBLh0000CLd0CH`CHbCHdCHfCHhCHjCHl0CHnCI`CIbBKb0000C@lBKhCIdCIfMj00000000000000000CIhCIjOnBFhD@fBFl00MbBD`000000BAbBDj0OlCIlCInCJ`BKh000COlD@`D@bALn04Mj<DLb00ADh13310732CIjCJl4422D@f66BLdD@hALb0`AIh1CHbBF`D@jAIj5BFlC@l`BBb`00MjBM`BLlBLn<4BD`AIlAOf1022CAd=CIfDjCBn00CKlBLb8?BMb9`BOl=>>DAb;BDjCLl=12=12=1BM`0BMh9CC``CNdBAlALb5CJbCAlCBbBF`DAj11``BHbAI`BBbMj21<>BE`BFbBFnCBhCBjCBlCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfBNfBBbCGbC@hCGdCGfCGhCGjCGlCGnBLhCHbCHfCHhCHjCHlCHnCI`CIbBKbCIfMjCIhCIjBFhBD`BAbOlCJ`DAn0BKfBLnBBbBNn0CAnCBb`DB`CKfCAhCH`CKhCHdBKlBJbAAlCC````=`BObCCnBE`>=21Mj0CIbBG``3BFbDAbBD`BDj``CNbCJlBL`=CAdBLlALnBKlC@dBO`BJjCA`BF`BKf:CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`AAlAC`BF`D@jA@dC@lBKh=``8``BBb``011CAdBLlALnBKlC@dBO`BJjCA`=BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`8ALn?DDhDAfBBbBKh=;DBdBLnMj0CC`BAnBDb3MbCIdBFf<9C@hCCl`<``BFnCHb=BM`BD`BDjBOnBBb`AIn167`11`AJ`2CKdCKfCAh55`95`9A@d6MbAAlBAb`MjBDbCLn24CD`3BFn;:9ALbBKhBFlBD`00020BLlBF`BLnD@jDBj3DBl0BKlBJbBJdDBnCId0BE``:9?BBbDCb<MjCDf><9ABf00`BM`?5BFlBD`BDjBF`4CDb:`DCdBFnDCfCIf>>5BKfCB`CJlCBbCC`CEjBBbDBl00000000000000000000AI`2Mj13CCnCDlCEbCEnEnFd``6BF`DBn;`;BMb0BLd0=020=`==`1?1111CIf```BLl5BLnAJbBBbDCnBM`CLdCHb``<6542`7<6AJd53DD`4CAnCDhCMlBD``0BAbCEhCH`CKhCHdCAh21`BLlBF`BLnAJbBBb1CBdCHfOnDCnBM`CLdCHbDB`CKf>CH`CKhCHdCCb`=CKd5CAh5BFn0BK`1BBbBKdEnFdBM`CJbCAlCB`BL`CAnCBbDDjCC`BOb1BLlBLnAHjBBb==09C@lOfBAb33`DB`CKfCAhCKhBFnCHdMjCD`3;``3DDb<<BMbDJnCMhCMjDK`DDdALnBKlBJjCAlCB`BOb;CMlBMdCMnCKjBOhBFnCN`CNbCBnCJlBOnBOlC@`BJbBLdCH`CHdBKbC@lMjBFlMbBD`BAb43AJfBM`CCf74`06CAlCB`299999999DDhDAfBKnC@dBO`BOnBBb0`0BKhAI`0``AAlA@dCDb?BF`6CLdCHbCCbEnFdBOlCIdBE`BFbCBnAIbBKlCIbBG`>C@lBBbCKdCKfCAh0CFlCG`DDj66`CBbCEjCIjBFn9DB`9CC`22Mj1CJbCAlCB`BE`BFbBBb66````0=DBn0`CInDCn3BF`;BFl;;`1AJd6DD`BM`CKdCKfCAhMjCCbCDb0CC`DE`BBb55BOl6666CJb;CAlCB`CAnCBb8CIj`AJh0BK`9BKdBKhBD``BM`BF`2BJd``?`BNnBBb1BMb22``1`61`C@lAJj7BLl7BLn5CDfBKlDAj;8AJl9=9DEh:0:0:0:::0:0:0:0:0:0:0:0:0:0:DEjCAf<CBn01=0CEnCIdCJbCAlCB`BL`CAnCBbCC`CHj0DBlBLdBBb04BKnBF`000DElAJn0CMlBMdBOnBOl7CIdBL`DDj?2`BKhCC`;`DB`CKfCAhCH`CKhCHdMjBF`BD`1CCbCDbCCn`AJn>544BOlC@`CMlBMdCNb4CMhBBbBFlAK`BM`BLlBF`BLn6AKb27BD`0BJb9ACb7:5555CJjBL`CC`CIh1;98>==5AKd>0>>>>>`AHh<;:BBb0<1>MjBNnBM`BFl022`2`24BE`;;CEnBLlBF`BLnAKf:7DFb8A@d<:`:::::CDfCAhCHh?``=`=`=`=`=>?BK`BBbBKbBKh0BKdBKlDBnBJb01`BLlBF`BLnAJb:DCnBM`BLd;Mj6BKf6?AKh4DFf055AKj6BFl`CFjCFnCDb`CH`CHd1CAhBF`CFh1CIfBLnBD`;AKl5DFjBJhBBbBNnBLl1DBnAAlCA`=BKfBL`CAlCAnCB`CBbCBdBE`BFbCBfBFnCBhCBjCBlCBnAAlA@dCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhBFlMbBD`BAbBDjOlCIlCInCJ`BBbBMbCAhBFnCClCD`5C@hCGdCGfCGhCGjCGlCGnBLhMjBD`CIjBNn0DBnCDlCEnBKhCDf0BF`BFl000ABf00DFlBFn0CBn10CCb21AMl660AMn077B@f000ADlADn1000CAdBLlALnBKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIf0Mj0CIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`CId77777DAbCAdBLlALnBKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`CC`BMb0BBb1DDbCFbCFdCFfMjBFl11111CCb22>BMhC@jBLbBFnCClCD`=C@hCGdCGfCGhCGjCGlCGnBLhMj0CAdBLlALnBKlC@dBO`BJjCA`BF`BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`Cb`BKhAHjBLlBF`BLnBBbBM`3432133Mj0MbCC`4DGb0BOlCBbCEj`BKlBJbBFl0ALb9CLn=CIbBG`3434BLlBF`BLnAKfBBbBM`DFb187DGd0CIdMjCAd:ALnBKlC@dBO`BJjCA`?BKfBL`CAlCAnCB`CBbDDhBObBMbCMlDAfBMdCMnCKjCBdBOhBE`BFbCBfBFnDGfCN`CBhCNbCBjCBlCBnBLnDBnCJlBJdBOnBOlAAlA@dC@`DDjCC`CCbCCdCCfBJbCChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfDCfCFhCFjCFlCFnCG`BNfBBbCGbC@hBLdCGdCGfCGhCGjCGlCGnBLhCLdCH`CHbCHdCHfCHhCHjCHlCHnCI`CIbBKbC@lBKhCIdCIfMjCIhCIjOnBFhD@fBFlMbBD`BAbBDjOlCIlCInCJ`>CKdCKfCAh10CBlBFnCHd1On`CFlCG`CBdCHf4BKlCH`CB`BObCNbCAlDJnDK`BD`CJlCC`58BF`BJb141CMlBMdBOl5DDj5;CCbCMnBOh1CKj1C@`:0BOb0CH`CHdCAl8BMb1CC`2:2:7BJd664331?=54543CB`CNbCJl4CMlBOl84846CN`4<97BAb<;;<;:CCb=CJb<<885BMd7;7;>BF`BOb?41=9=3?;97182:97=1?040?=3?;9=1C@`42CAl0==:4;9?BMbCC`2?>=02?>=0CH`CHd46:74242=757BJb7225;5;8BFl0ALb134:ABf00000000000000000MjCDlCEn`22BBbCKdCKfCAh<`AKnDLdDLfDLh2102DLjDLlDLnDM`0DMbDMdDMfDMhDMjDMlDMnDN`DNb04DNd17DNf84;3DNh:DNj39DNlDNn0>DO`DM`240;4:02951<836828<??;DObDOdDOf0DOhDOj4DOlDOnE@`E@b3E@d528E@f1E@h11098432323570;5E@jE@lE@n0EA`EAbEAdEAfEAh01EAj1EAlEAnEB`EBbEBdEBf697DKjDKl0EBh00DKfDKh10EBjEBlEBn21EC`ECbECdECf03421ECh0`DGn000000000`0`0000``````````BHnBI`0`ALhALdAL```````````````````````````````````DHf000000000000000DHh`C@f000000000000000DHj`0`00`0000000000000`00ECjEClECn32103210321032103321032103`210332103210321032103ED`00````````BMl0000CBdCKdCKfCKh3DB`213232114021320213230232DEh0000000000000132`433543`DHn0000``07777DHl8111111111111111`11111111`DIf``DI`000000000`0000DIb11111211111DIh0``0000CJd010100000101010100000110001010`001010101011``11110```````AOl`J`EjDj```````21AGb`2``3`0320```32`````````3200``32``3200``0320``320```00`40320``320```AOb`2DJnDK```````7``653``653``653``653``3`444333AOh764``3``4B@bKj1010An:97`:9`:``838```````````BA``3`<;:`;`;:8;`;:88````80`;:8``;:8``;:8``;:8``8:8`88ALb0:0AMl0AMn0ANd3`AOf0`B@f000`1OfAOd7777733DjBAl9BAn::```4DJnDK`;;::7777<<<10<`````AOb`AOh10``7`````1010```````````COlD@`D@b`CLj00000000000000000000000000000000000000000000000000`BIb0`DIj000000000000000000``BLhCGd00011111CGlCGh33`03`CGj414414222124444411111444124222CGn055355`51CGf443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DLjDLlDLnE@jE@lE@n0EA`EAbEAdEAfEAh01EAj1EAlEAnEB`EBbEBdEBf697EBjEBlEBn21EC`ECbECdECf03421ECh0`CGfCGj0`0DIl000`00000000000000000000000000DIn000`00000000000000000000000000````CE`0`````````DJ`00000000000000000000000000000`DG`000000000`0000``000000000ALl00`````DJdCAh000000000000000000`````AKd0````````````EnFd10101022```BNjBNn0000000000000000`0000000`0`00`00000`0`0`0`0`00000`C@l0000``EDbEDdLj``0``AI`EDf2````02Ab000000`000BM`0`110010011101110001DJh3520352122221221211225215252222220352203522222035211252422242222255522222212152220352222222222222222222222222222222222222222222222222222222222222122211114222422215222222`20352035220BDb3233332203333232335333533332232232333323223333333333333333333333333333333333333333333333333333332315333533332`332233323332623333223312332232233333333323323322233333633331463333314633333314633333232221463333``Eb000000000000000000000```BK``0BKdBl`210210210210``CAjFj10CLf0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{l{Aj}}{l{Aj}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{Aj}}}}{f{Bf}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{Al}}{l{Al}}}}{{{l{c}}{l{c}}}{}An}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{{Bn{c}}}}}}{f{C`}}}AbCb}{{{f{{l{Bd}}}}{f{C`}}}Ab}{{{f{{l{Aj}}}}{f{C`}}}Ab}{{{f{{l{Al}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAn}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{Cd}}}}{f{C`}}}Ab}{{{f{{l{Bd}}}}}d}{{{f{{l{Bd}}}}}{{Cf{d}}}}{{{f{{l{Cd}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Cd}}}}Db}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Db}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Dd{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dj{}{{Df{Dh}}}}}}{{{f{{l{{Bn{c}}}}}}e}{{l{{Bn{c}}}}}Cb{{Dl{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}An{{Dl{Cf}{{Ad{Cf}}}}Dn}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dl{{Cf{{f{{Bj{Bh}}}}}}}{{Ad{{Cf{{E`{{Bj{Bh}}}}}}}}}}Dn}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dl{{Cf{{f{Bf}}}}}{{Ad{{Cf{{E`{Bf}}}}}}}}Dn}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dl{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dn}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dl{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dn}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Eb}{{Ad{Ab}}}}}}{{{f{{l{Cd}}}}e}{{l{g}}}{}{{Af{{Cf{Eb}}}{{Ad{{Cf{c}}}}}}Dn}Dj}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{Eb}}}{{Ad{{Cf{c}}}}}}Dn}Dj}{{{f{{l{Cd}}}}c}{{l{Cd}}}{{Af{Eb}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dl{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dl{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}An{{Dl{}{{Ad{}}}}Dn}}{{{f{{l{c}}}}e}{{l{Aj}}}Dj{{Af{{f{DdEh}}}}}}{{{f{{l{c}}}}{f{Dl}}}{{l{c}}}An}{{{f{{l{Al}}}}{f{Dl}}}{{l{Al}}}}{{{f{{l{Bd}}}}{f{Dl}}}{{l{Bd}}}}{{{f{{l{Aj}}}}{f{Dl}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{Dl}}}{{l{c}}}Dj}{{{f{{l{Bd}}}}{f{Dl}}}{{l{c}}}Dj}{{{f{{l{c}}}}{f{Dl}}}{{l{e}}}AnDj}{{{f{{l{Al}}}}{f{Dl}}}{{l{c}}}Dj}{{{f{{l{Al}}}}c}{{l{Al}}}{{Af{{f{{Bj{Bh}}}}}{{Ad{{f{{Bj{Bh}}}}}}}}}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Af{{f{Bf}}}{{Ad{{f{Bf}}}}}}}}{{{f{Dd{l{c}}}}e}bAn{{Dl{}{{Ad{}}}}Dn}}{{{f{{l{c}}}}Ejg}{{l{i}}}Dj{}{{Af{}{{Ad{e}}}}}Dj}{{{f{{l{Cd}}}}{f{Dl}}}{{A`{{l{Cd}}n}}}}{{{f{{l{Ah}}}}{f{Dl}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Ah}}}}e{f{Dd{Bj{c}}}}}b{}{{Dl{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Aj}}}}e{f{Dd{Bj{c}}}}}b{}{{Dl{{Cf{{f{Bf}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Al}}}}e{f{Dd{Bj{c}}}}}b{}{{Dl{{Cf{{f{{Bj{Bh}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}e{f{Dd{Bj{c}}}}}b{}{{Dl{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Dd{Bj{e}}}}}bAn{}{{Dl{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{{Bn{c}}}}}}g{f{Dd{Bj{e}}}}}bCb{}{{Dl{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{{Bn{c}}}}}}e}{{l{{Bn{c}}}}}Cb{{Dl{{f{c}}}{{Ad{c}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}An{{Dl{}{{Ad{}}}}Dn}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dl{Ab}{{Ad{Ab}}}}Dn}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dl{d}{{Ad{d}}}}Dn}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dl{{f{{Bj{Bh}}}}}{{Ad{{E`{{Bj{Bh}}}}}}}}Dn}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dl{{f{Bf}}}{{Ad{{E`{Bf}}}}}}Dn}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Af{El{f{Bf}}}{{Ad{El}}}}Dn}}{{{f{{l{j}}}}En}{{l{F`}}}}{{{f{{l{Bd}}}}En}{{l{F`}}}}{{{f{{l{Aj}}}}En}{{l{F`}}}}{{{f{{l{Al}}}}En}{{l{F`}}}}{{{f{{l{c}}}}En}{{l{F`}}}An}{{{f{{l{Fb}}}}En}{{l{F`}}}}{{{f{{l{Bd}}}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{{l{Aj}}}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{{l{Al}}}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{{l{Fb}}}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{{l{c}}}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}An}{{{f{{l{Aj}}}}}{{A`{{l{F`}}n}}}}{{{f{{l{{Bn{c}}}}}}}{{A`{{l{F`}}n}}}Cb}{{{f{{l{Bd}}}}}{{A`{{l{F`}}n}}}}{{{f{{l{Al}}}}}{{A`{{l{F`}}n}}}}{{{f{{l{c}}}}}{{A`{{l{F`}}n}}}An}`{{{f{{l{Cd}}}}}{{f{{l{Cd}}}}}}{{{f{{l{Aj}}}}}{{l{Al}}}}{{{f{{l{Al}}}}}{{f{{l{Al}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dj}{{{f{{l{c}}}}}{{f{Ej}}}Dj}{{{f{{l{Aj}}}}}{{f{{l{Aj}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DjDj{{Af{{Cf{Eb}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ff}210021{f{{f{c}}}{}}0{{{f{Dd}}}{{f{Ddc}}}{}}0``{{{f{{l{j}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}An{{Dl{}{{Ad{}}}}Dn}An}{{{f{{l{Al}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{Cd}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ej}}}{{A`{Abn}}}An}{{{f{{l{Aj}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{Fb}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ej}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{j}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ej}}Fh}{{A`{Abn}}}An}{{{f{{l{Aj}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{Fb}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{Cd}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Fj}{{{f{{l{c}}}}e}{{A`{Abn}}}FjBb}{{{f{{l{c}}}}}{{Gb{{Fl{{Cl{Cj}}}}{G`{{f{{Cl{Cj}}}}}{{Ad{Fn}}}}}}}Dj}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fn}}}}}}}Dj}{{{f{{l{c}}}}}{{f{{Gd{{Cl{Cj}}}}}}}Dj}{{{f{Dd{l{c}}}}}{{f{Dd{Gd{{Cl{Cj}}}}}}}Dj}{{{f{{l{c}}}}}{{l{c}}}Dj}0{{f{f{Ddc}}}b{}}{fb}`{{{f{Dd{l{c}}}}}b{DjAn}}`{fGf}{{{f{{l{c}}}}}{{A`{{f{Bj}}n}}}An}{{{f{Dd{l{c}}}}{f{{l{c}}}}Gh}bDj}{{{f{Dd{l{c}}}}{f{{l{e}}}}Gh}bDjDj}{{{f{{l{c}}}}}{{`{Gj}}}An}{{}{{l{c}}}Dj}{Fn{{f{c}}}{}}0{Fn{{f{Ddc}}}{}}0{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{Fnb}{{{f{Dd{l{c}}}}}bDj}1{{{f{{l{c}}}}}{{l{c}}}Dj}{{{f{{l{c}}}}}{{f{Ej}}}Dj}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}An}{{{f{{l{Aj}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AnBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bd}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Bd}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bd}}}}1082435679{{{f{{l{Ah}}}}}{{A`{{H`{Ab{Gn{Gl}}}}n}}}}{{{f{{l{Cd}}}}}{{A`{{H`{Ab{Gn{Gl}}}}n}}}}{{{f{Dd{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}An}{{{f{{l{j}}}}{f{Bf}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gd{Ab}}}}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}An}{{{f{{l{{Bn{c}}}}}}{f{{l{Bd}}}}}{{A`{{l{{Bn{c}}}}n}}}Cb}{{{f{{l{c}}}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}{{Dj{}{{Hb{Dh}}{Hd{Dh}}}}}}{{{f{{l{Al}}}}{f{{l{Bd}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{Aj}}}}{f{{l{Bd}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{c}}}}}{{Cf{Fn}}}Dj}`{{{f{{l{Ah}}}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{l{Cd}}}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{l{{Bn{c}}}}}}{f{DdHf}}}{{A`{bHh}}}Cb}{{{f{{l{c}}}}{f{DdHf}}}{{A`{bHh}}}An}{{{f{{l{Al}}}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{l{Aj}}}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{l{Bd}}}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{l{c}}}}e}bDj{{Af{Cf}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{Eb}}}}}}{{{f{{l{Cd}}}}c}b{{Af{{Cf{Eb}}}}}}{c{{l{e}}}Cj{{Dj{}{{Hj{c}}}}}}{cc{}}0{{Dbc}{{l{e}}}Hl{{Dj{}{{Hj{}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}{{Dj{}{{Hj{}}}}Dj}Hl}{{Db{Gd{{Cl{Cj}}}}}{{l{c}}}Dj}{{Db{Gd{{Cl{Cj}}}}Ej}{{l{c}}}Dj}{e{{l{Al}}}{{Hn{{Bj{Bh}}}}}{{Hl{}{{Ch{c}}}}}}{c{{l{e}}}{{Hl{}{{Ch{{H`{Gd{Cf{I`}}}}}}}}}An}{c{{l{e}}}{{Hl{}{{Ch{Cf}}}}}An}{c{{l{Bd}}}{{Hl{}{{Ch{{Cf{d}}}}}}}}{c{{l{Bd}}}{{Hl{}{{Ch{d}}}}}}{e{{l{Aj}}}{{Ib{Bf}}}{{Hl{}{{Ch{{Cf{c}}}}}}}}{e{{l{Aj}}}{{Hn{Bf}}}{{Hl{}{{Ch{c}}}}}}{e{{l{Al}}}{{Ib{{Bj{Bh}}}}}{{Hl{}{{Ch{{Cf{c}}}}}}}}{e{{l{Ah}}}{{Id{Ab}}}{{Hl{}{{Ch{c}}}}}}{c{{l{Ah}}}{{Hl{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{Ah}}}{{Hl{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{e{{l{{Bn{c}}}}}Cb{{Hl{}{{Ch{{Cf{c}}}}}}}}{{Dbe}{{l{Aj}}}{{Ib{Bf}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{Dbc}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}An}{{Dbe}{{l{{Bn{c}}}}}Cb{{Cn{}{{Ch{{Cf{c}}}}}}}}{{Dbc}{{l{Bd}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}{{Dbe}{{l{Al}}}{{Ib{{Bj{Bh}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}5{e{{l{Fb}}}{{Ib{{Bj{Bh}}}}}{{Hl{}{{Ch{{Cf{c}}}}}}}}98>=;<{e{{l{Al}}}{{Hn{{Bj{Bh}}}}}{{Hl{}{{Ch{c}}}}}};{e{{l{Fb}}}{{Hn{{Bj{Bh}}}}}{{Hl{}{{Ch{c}}}}}}{c{{l{e}}}{{Hl{}{{Ch{Cf}}}}}An}{{Dbe}{{l{Aj}}}{{Ib{Bf}}}{{Cn{}{{Ch{c}}}}}}{{Dbc}{{l{e}}}{{Cn{}{{Ch{}}}}}An}{{Dbe}{{l{{Bn{c}}}}}Cb{{Cn{}{{Ch{c}}}}}}{{Dbc}{{l{Bd}}}{{Cn{}{{Ch{d}}}}}}{{Dbe}{{l{Al}}}{{Ib{{Bj{Bh}}}}}{{Cn{}{{Ch{c}}}}}}`{e{{l{Aj}}}{{Hn{Bf}}IfIhIj}{{Il{}{{Ch{c}}}}}}{c{{l{Bd}}}{{Il{}{{Ch{d}}}}}}{c{{l{e}}}{{Il{}{{Ch{Cf}}}}}An}{e{{l{Al}}}{{Hn{{Bj{Bh}}}}IfIhIj}{{Il{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Ib{Bf}}IfIh}{{Il{}{{Ch{{Cf{c}}}}}}}}{e{{l{Al}}}{{Ib{{Bj{Bh}}}}IfIh}{{Il{}{{Ch{{Cf{c}}}}}}}}{c{{l{Ah}}}{{Il{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{Bd}}}{{Il{}{{Ch{{Cf{d}}}}}}}}{{cDbEj}{{l{Ah}}}{{Il{}{{Ch{{Cf{Ab}}}}}}}}{{Db{f{{Bj{Ab}}}}}{{A`{{l{j}}n}}}}{{Db{f{{Bj{c}}}}}{{l{{Bn{c}}}}}Cb}{{Db{f{{Bj{c}}}}}{{l{Al}}}{{Ib{{Bj{Bh}}}}}}{{Db{f{Bj}}}{{l{c}}}An}{{Db{f{{Bj{c}}}}}{{l{Aj}}}{{Ib{Bf}}}}{{Db{f{{Bj{d}}}}}{{l{Bd}}}}{{Db{f{{Bj{{Cf{c}}}}}}}{{l{Aj}}}{{Ib{Bf}}}}{{Db{f{{Bj{{Cf{c}}}}}}}{{l{Al}}}{{Ib{{Bj{Bh}}}}}}{{Db{f{{Bj{Cf}}}}}{{l{c}}}An}{{Db{f{{Bj{{Cf{d}}}}}}}{{l{Bd}}}}{{Db{f{{Bj{{Cf{c}}}}}}}{{l{{Bn{c}}}}}Cb}{c{{l{Bd}}}{{In{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{In{}{{Ch{Cf}}}}}An}{{DbGd}{{l{c}}}An}{{DbGd{Cf{I`}}}{{l{c}}}An}{{Db{f{Bf}}Fn}{{l{Aj}}}}{{DbFn}{{l{c}}}An}{{Db{f{Ab}}Fn}{{l{Cd}}}}{{DbcFn}{{l{{Bn{c}}}}}Cb}{{DbdFn}{{l{Bd}}}}{{Db{f{Ab}}Fn}{{l{Ah}}}}{{Db{f{{Bj{Bh}}}}Fn}{{l{Fb}}}}{{Db{f{{Bj{Bh}}}}Fn}{{l{Al}}}}{{DbFn}{{l{j}}}}{{DbFn}{{l{Fb}}}}{{DbFn}{{l{Ah}}}}{{DbFn}{{l{Cd}}}}{{DbFn}{{l{{Bn{c}}}}}Cb}{{DbFn}{{l{Al}}}}{{DbFn}{{l{Aj}}}}{{DbFn}{{l{Bd}}}}>{{{f{{l{c}}}}Fn}{{l{c}}}Dj}{{DbFn{f{Ej}}Fn}{{l{Cd}}}}{{DbFn{f{Ej}}}{{l{Ah}}}}{{{f{{l{c}}}}Fn}CfDj}{{{f{{l{{Bn{c}}}}}}Fn}{{A`{J`n}}}Cb}{{{f{{l{Al}}}}Fn}{{A`{J`n}}}}{{{f{{l{Cd}}}}Fn}{{A`{J`n}}}}{{{f{{l{c}}}}Fn}{{A`{J`n}}}An}{{{f{{l{j}}}}Fn}{{A`{J`n}}}}{{{f{{l{Ah}}}}Fn}{{A`{J`n}}}}{{{f{{l{Bd}}}}Fn}{{A`{J`n}}}}{{{f{{l{Fb}}}}Fn}{{A`{J`n}}}}{{{f{{l{Aj}}}}Fn}{{A`{J`n}}}}{{{f{{l{Al}}}}Fn}J`}{{{f{{l{c}}}}Fn}J`An}{{{f{{l{Fb}}}}Fn}J`}{{{f{{l{{Bn{c}}}}}}Fn}J`Cb}{{{f{{l{Ah}}}}Fn}J`}{{{f{{l{Aj}}}}Fn}J`}{{{f{{l{j}}}}Fn}J`}{{{f{{l{Cd}}}}Fn}J`}{{{f{{l{Bd}}}}Fn}J`}{{{f{{l{Ah}}}}Fn}{{Cf{Ab}}}}{{{f{{l{Cd}}}}Fn}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{Jb}}}Dj}{{{f{{l{c}}}}}dDj}{{{f{{l{c}}}}}JdDj}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cd}}}}}Ab}{{{f{{l{c}}}}}CfDj}0{{{f{{l{{Bn{c}}}}}}Fn}{{Cf{{f{Jf}}}}}Cb}0{{{f{{l{j}}}}En}{{A`{{l{Fb}}n}}}}{{{f{{l{j}}}}En}{{A`{{Jh{Gl}}n}}}}{{{f{{l{c}}}}Fn}CfDj}{{{f{{l{Ah}}}}}Fn}{{{f{{l{Fb}}}}}Fn}{{{f{{l{Aj}}}}}Fn}{{{f{{l{Cd}}}}}Fn}{{{f{{l{Bd}}}}dd}{{A`{C`n}}}}{{{f{{l{Al}}}}dd}{{A`{C`n}}}}{{{f{{l{Fb}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Cd}}}}dd}{{A`{C`n}}}}{{{f{{l{{Bn{c}}}}}}dd}{{A`{C`n}}}Cb}{{{f{{l{c}}}}dd}{{A`{C`n}}}An}{{{f{{l{Aj}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}FndFn}C`Ff}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}An}{{{f{{l{Aj}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AnBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}548037126{{{f{{l{c}}}}}dDj}{{{f{{l{c}}}}{Cf{Fn}}}{{l{c}}}Dj}{{}Fn}0{{FnJj{Cf{Jl}}}{{l{c}}}An}{{{f{{l{Cd}}}}}{{f{Ej}}}}{{{f{{l{Ah}}}}}{{f{Ej}}}}{{{f{{l{c}}}}}{{K`{{Jn{c}}}}}Dj}{{}c{}}0{{{l{Kb}}}{{Kf{KdKb}}}}{{{l{Kh}}Kj{Cf{Db}}}{{Kf{KlKh}}}}{{{l{Kn}}{Cf{Fn}}Fn}{{A`{{Kf{L`Kn}}n}}}}{{{l{Kn}}{Cf{Fn}}Fn}{{Kf{L`Kn}}}}{{{l{Kh}}Kj}{{Kf{LbKh}}}}{{{f{{l{Aj}}}}}}{{{f{{l{{Bn{c}}}}}}}{}Cb}{{{f{{l{Ah}}}}}}{{{f{{l{Fb}}}}}}{{{f{{l{Al}}}}}}{{{f{{l{Cd}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{c}}}}}{}An}{{{f{{l{c}}}}}{{`{IfIhLdGjIn}}}An}{{{l{c}}}AbDj}{{{l{Kn}}}Ab}{{{l{Kh}}}{{Kf{LfKh}}}}{{{f{{l{c}}}}}dDj}{{{f{{l{c}}}}}{{l{Bd}}}Lh}000{{{f{{l{c}}}}}{{l{Bd}}}Dj}02{{{f{{l{c}}}}}LjDj}{{{f{{l{c}}}}}{{`{Ll}}}Dj}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dj}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gl}}}}}}}}{{{f{{l{c}}}}}{{Gb{{Fl{{Cl{Cj}}}}{G`{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{I`}}}}}}}}}}}Dj}`{{fc}Gf{{Ib{Bf}}}}{{{f{{l{c}}}}}CfDj}{{{f{{l{c}}}}}{{Cf{Fn}}}Dj}{{{f{{l{c}}}}}{{Ln{c}}}Dj}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}}{}An}{{{f{{l{c}}}}}{}An}10{{{f{{l{c}}}}}FnDj}0{{{f{{l{c}}}}e}{{l{c}}}An{B`M`}}00{{{f{{l{c}}}}Fn}{{l{c}}}Dj}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}An}{{{f{{l{Aj}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Bd}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AnBb}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Bd}}}}176523084{{{f{{l{c}}}}}CfAn}{{{f{{l{Bd}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}MbAn}{{{f{{l{Bd}}}}}Mb}{{{f{{l{Aj}}}}}Mb}{{{f{{l{Al}}}}}Mb}{{{f{{l{Bd}}}}}{{Cf{Md}}}}{{{f{{l{c}}}}}{{Cf{Md}}}An}{{{f{{l{Ed}}}}}{{Cf{Md}}}}{{{f{{l{Ef}}}}}{{Cf{Jj}}}}{{{f{{l{c}}}}}{{Cf{Md}}}Ff}{{{f{{l{c}}}}}MbFf}{{{f{{l{Ed}}}}}Mb}{{{f{{l{Ef}}}}}Mb}{{{f{Dd{l{c}}}}{Jn{c}}}bDj}`{{{f{{l{c}}}}}{{Mf{c}}}Dj}{{{f{{l{c}}}}}{{f{{Mj{{Mh{c}}}}}}}Dj}{{{f{{l{c}}}}}{{Cf{{Mn{Ml}}}}}Dj}{{{f{Dd{l{c}}}}}{{f{Dd{Mj{{Mh{c}}}}}}}Dj}{{{f{{l{c}}}}}{{Mj{{Mh{c}}}}}Dj}{{{f{{l{c}}}}}CfAn}{{{f{{l{Bd}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}{{Cf{H`}}}An}{{{f{{l{c}}}}}MbAn}{{{f{{l{Bd}}}}}Mb}{{{f{{l{Aj}}}}}Mb}{{{f{{l{Al}}}}}Mb}{{Db{f{Bj}}}{{l{c}}}An}{{Db{f{{Bj{Bh}}}}FnFn}{{l{Bd}}}}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FnDj}{{{f{{l{Aj}}}}}{{A`{Fnn}}}}{{{f{{l{c}}}}}{{A`{Fnn}}}An}{{{f{{l{Al}}}}}{{A`{Fnn}}}}{{{f{{l{c}}}}}{{f{Db}}}Dj}{{Dbc}{{l{N`}}}{{Ib{{Bj{Nb}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{Cf{{f{{Bj{Bh}}}}}}}}}}}}{{Dbc}{{l{Ed}}}{{Ib{{Bj{Md}}}}}}{{Dbc}{{l{Kn}}}{{Ib{{Bj{Nd}}}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{{Cf{Eh}}}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{Cf{{Gd{Bh}}}}}}}}}}{{Db{f{{Bj{c}}}}}{{l{{Bn{c}}}}}Cb}{{Dbe}{{l{{Bn{c}}}}}Cb{{Ib{{Bj{{Cf{c}}}}}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{Eh}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{Gd{Bh}}}}}}}}{{Dbc}{{l{Bd}}}{{Ib{{Bj{{Cf{d}}}}}}}}{{Dbc}{{l{Nf}}}{{Ib{{Bj{{Cf{Bh}}}}}}}}{{Dbc}{{l{Bd}}}{{Ib{{Bj{d}}}}}}{{Dbc}{{l{Nf}}}{{Ib{{Bj{Bh}}}}}}{{Dbc}{{l{Nh}}}{{Ib{{Bj{{Cf{Nj}}}}}}}}{{Dbc}{{l{F`}}}{{Ib{{Bj{{Cf{Jb}}}}}}}}{{Dbc}{{l{Nl}}}{{Ib{{Bj{{Cf{Jl}}}}}}}}{{Dbc}{{l{Nn}}}{{Ib{{Bj{{Cf{O`}}}}}}}}{{Dbc}{{l{N`}}}{{Ib{{Bj{{Cf{Nb}}}}}}}}{{Dbc}{{l{Kb}}}{{Ib{{Bj{{Cf{Ob}}}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{Cf{{E`{{Bj{Bh}}}}}}}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{E`{{Bj{Bh}}}}}}}}}}{{Dbc}{{l{Kh}}}{{Ib{{Bj{{Cf{Gl}}}}}}}}{{Dbc}{{l{Kn}}}{{Ib{{Bj{{Cf{Nd}}}}}}}}{{Dbc}{{l{Ef}}}{{Ib{{Bj{{Cf{Jj}}}}}}}}{{Dbc}{{l{Ed}}}{{Ib{{Bj{{Cf{Md}}}}}}}}{{Db{Od{Gl}}}{{l{Kh}}}}{{Db{Od{Ob}}}{{l{Kb}}}}{{Db{Od{Jl}}}{{l{Nl}}}}{{Dbc}{{l{Nh}}}{{Ib{{Bj{Nj}}}}}}{{Db{Od{Jb}}}{{l{F`}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{{f{Bf}}}}}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{{Cf{{f{Bf}}}}}}}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{{E`{Bf}}}}}}}}{{Dbc}{{l{Kh}}}{{Ib{{Bj{Gl}}}}}}{{Dbc}{{l{F`}}}{{Ib{{Bj{Jb}}}}}}{{Dbc}{{l{Kb}}}{{Ib{{Bj{Ob}}}}}}{{Dbc}{{l{Aj}}}{{Ib{{Bj{{Cf{{E`{Bf}}}}}}}}}}{{Dbc}{{l{Nn}}}{{Ib{{Bj{O`}}}}}}{{Dbc}{{l{Al}}}{{Ib{{Bj{{f{{Bj{Bh}}}}}}}}}}{{Dbc}{{l{Nl}}}{{Ib{{Bj{Jl}}}}}}{{Dbc}{{l{Ef}}}{{Ib{{Bj{Jj}}}}}}{Db{{l{{Bn{c}}}}}Cb}{{{f{{l{Fb}}}}FnFn}{{l{Fb}}}}{{{f{{l{Aj}}}}FnFn}{{l{Aj}}}}{{{f{{l{{Bn{c}}}}}}FnFn}{{l{{Bn{c}}}}}Cb}{{{f{{l{Bd}}}}FnFn}{{l{Bd}}}}{{{f{{l{c}}}}FnFn}{{l{c}}}An}{{{f{{l{Cd}}}}FnFn}{{l{Cd}}}}{{{f{{l{Al}}}}FnFn}{{l{Al}}}}{{{f{{l{j}}}}FnFn}{{l{j}}}}{{{f{{l{Ah}}}}FnFn}{{l{Ah}}}}{{Db{Gd{c}}}{{l{{Bn{c}}}}}Cb}{{Db{Gd{c}}I`}{{l{{Bn{c}}}}}Cb}{{DbGd}{{l{c}}}An}{{{Mj{Of}}{Gd{{Cl{Cj}}}}JbJb}{{l{c}}}Dj}{{{f{{l{c}}}}}{{l{c}}}Lh}{{{f{{l{Bd}}}}}}{{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Bd}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}An}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bd}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AnBb}{{{f{{l{Aj}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}}8971632:4{{{f{{l{c}}}}}FnDj}`{{{f{{l{Ah}}}}}{{A`{{Gn{Gl}}n}}}}{{{f{{l{Cd}}}}}{{A`{{Gn{Gl}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Oh{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{Aj}}}}}{{`{{Oh{}{{Ch{{Cf{{f{Bf}}}}}}}}}}}}{{{f{Dd{l{Ah}}}}}{{`{Oj}}}}{{{f{{l{Aj}}}}}{{`{Oj}}}}{{{f{{l{c}}}}}MbAn}{{{f{Dd{l{c}}}}}bDj}{{{f{{l{Ed}}}}MdOl}{{A`{{Cf{Md}}n}}}}{{{f{{l{Ef}}}}MdOl}{{A`{{Cf{Jj}}n}}}}{{{f{{l{c}}}}MdOl}{{A`{{Cf{Md}}n}}}Ff}{{{f{{l{Ef}}}}MdOl}{{A`{Mbn}}}}{{{f{{l{c}}}}MdOl}{{A`{Mbn}}}Ff}{{{f{{l{Ed}}}}MdOl}{{A`{Mbn}}}}{{DbFnMd}{{A`{{l{Bd}}n}}}}{{DbFnMdMd}{{A`{{l{c}}n}}}An}{{DbFn}{{l{c}}}An}{{DbFnMdMd}{{l{c}}}An}{{{f{{l{c}}}}}{{l{c}}}Dj}{{{f{{l{c}}}}}{{f{Of}}}Dj}{{{f{{l{N`}}}}}Ab}{{{f{{l{Kb}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Kh}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Nf}}}}}Ab}{{{f{{l{F`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Ed}}}}}Ab}{{{f{{l{Nl}}}}}Ab}14923:67508{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Dd{l{c}}}}Db}bDj}{{{f{{l{Cd}}}}}{{l{Cd}}}}{{{f{{l{c}}}}}{{l{c}}}An}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Fb}}}}}{{l{Fb}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{{Bn{c}}}}}}}{{l{{Bn{c}}}}}Cb}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{Dl}}On}{{A`{Abn}}}An}{{{f{{l{c}}}}Fne}{{A`{{l{c}}n}}}Lh{{Af{{f{Dd{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}Mddd{Cf{Jl}}}{{A`{{l{c}}n}}}Dj}{{{f{{l{c}}}}Fndd{Cf{Jl}}}{{A`{{l{c}}n}}}Dj}{{{f{Dd{l{c}}}}{f{{Bj{Jb}}}}e}{{A`{Abn}}}A@`{{Hl{}{{Ch{Cf}}}}}}{{{f{{l{Aj}}}}{f{{Bj{Jb}}}}c}{{A`{Abn}}}{{Hl{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{{{f{{l{Bd}}}}{f{{Bj{Jb}}}}c}{{A`{Abn}}}{{Hl{}{{Ch{{Cf{d}}}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}An{{Hl{}{{Ch{Jb}}}}}}{{{f{{l{Bd}}}}c{Cf{d}}}{{A`{{l{Bd}}n}}}{{Hl{}{{Ch{Jb}}}}}}{{{f{{l{Aj}}}}c{Cf{{f{Bf}}}}}{{A`{{l{Aj}}n}}}{{Hl{}{{Ch{Jb}}}}}}{{{f{{l{Al}}}}c{Cf{{f{{Bj{Bh}}}}}}}{{A`{{l{Al}}n}}}{{Hl{}{{Ch{Jb}}}}}}{{{f{{l{Al}}}}ce}{{A`{{l{Al}}n}}}{{Hl{}{{Ch{Jb}}}}}{{Dl{{Cf{{f{{Bj{Bh}}}}}}}{{Ad{{Cf{{Gd{Bh}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}An{{Hl{}{{Ch{Jb}}}}}{{Dl{Cf}{{Ad{Cf}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Hl{}{{Ch{Jb}}}}}{{Dl{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{Aj}}}}ce}{{A`{{l{Aj}}n}}}{{Hl{}{{Ch{Jb}}}}}{{Dl{{Cf{{f{Bf}}}}}{{Ad{{Cf{Eh}}}}}}}}{{{f{{l{Al}}}}{f{{l{Bd}}}}{Cf{{f{{Bj{Bh}}}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{c}}}}{f{{l{Bd}}}}Cf}{{A`{{l{c}}n}}}An}{{{f{{l{Aj}}}}{f{{l{Bd}}}}{Cf{{f{Bf}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}{Cf{d}}}{{A`{{l{Bd}}n}}}}{{{f{Dd{l{Ah}}}}}b}{{{f{Dd{l{c}}}}d}bDj}{{{f{Dd{l{Ah}}}}Ej}b}{{{f{Dd{l{c}}}}Jb}bDj}{{{f{Dd{l{c}}}}Lj}bDj}{{{f{{l{Ah}}}}Gl}{{l{Ah}}}}{{{f{{l{j}}}}Gl}{{l{j}}}}{{{f{{l{Aj}}}}Gl}{{l{Aj}}}}{{{f{{l{Cd}}}}Gl}{{l{Cd}}}}{{{f{{l{Fb}}}}Gl}{{l{Fb}}}}{{{f{{l{c}}}}Gl}{{l{c}}}An}{{{f{{l{{Bn{c}}}}}}Gl}{{l{{Bn{c}}}}}Cb}{{{f{{l{Bd}}}}Gl}{{l{Bd}}}}{{{f{{l{Al}}}}Gl}{{l{Al}}}}{{{f{{l{Cd}}}}Gl{Cf{{f{Ab}}}}}{{l{Cd}}}}{{{f{{l{Bd}}}}Gl{Cf{d}}}{{l{Bd}}}}{{{f{{l{c}}}}GlCf}{{l{c}}}An}{{{f{{l{{Bn{c}}}}}}Gl{Cf{{Bn{c}}}}}{{l{{Bn{c}}}}}Cb}{{{f{{l{Ah}}}}Gl{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Aj}}}}Gl{Cf{{f{Bf}}}}}{{l{Aj}}}}{{{f{{l{Al}}}}Gl{Cf{{f{{Bj{Bh}}}}}}}{{l{Al}}}}{{{f{{l{Fb}}}}Gl{Cf{{f{{Bj{Bh}}}}}}}{{l{Fb}}}}{{{f{Dd{l{c}}}}}bDj}{{{f{{l{c}}}}GlFn}{{l{c}}}Dj}0{{{f{{l{c}}}}d}{{l{c}}}An}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Fb}}}}d}{{l{Fb}}}}{{{f{{l{Al}}}}d}{{l{Al}}}}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{c}}}}En}{{l{c}}}An}{{{f{{l{Bd}}}}En}{{l{Bd}}}}{{{f{{l{j}}}}En}{{l{j}}}}{{{f{{l{Fb}}}}En}{{l{Fb}}}}{{{f{{l{Al}}}}En}{{l{Al}}}}{{{f{{l{Aj}}}}En}{{l{Aj}}}}{{{f{{l{c}}}}Gl}{{H`{{l{c}}{l{c}}}}}Dj}0{{{f{{l{c}}}}Bh}{{Cf{Md}}}An}{{{f{{l{Ef}}}}Bh}Mb}{{{f{{l{c}}}}Bh}MbFf}{{{f{{l{Ed}}}}Bh}Mb}{{{f{{l{j}}}}}{{f{{Bj{Of}}}}}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}CfAn}{{{f{{l{Bd}}}}}{{Cf{Jb}}}}{{{f{{l{c}}}}}MbAn}{{{f{{l{Bd}}}}}Mb}{{{f{{l{Al}}}}}Mb}{{{f{{l{c}}}}{Cf{Fn}}}{{l{c}}}Dj}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dj{{Ib{{Bj{Jb}}}}A@b}}{{{f{{l{c}}}}{f{{l{F`}}}}}{{A`{{l{c}}n}}}Dj}{{{f{{l{c}}}}{f{{Bj{A@d}}}}Lj}{{l{c}}}Dj}{{{f{{l{c}}}}{f{{Bj{A@d}}}}}{{l{c}}}Dj}{{{f{{l{Aj}}}}{f{c}}}{{l{Aj}}}{{Ib{{Bj{Jb}}}}A@b}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dj{}{{Hb{Dh}}{A@f{Dh}}}}Dj}{{Ib{{Bj{Jb}}}}A@b}}{{{f{{l{c}}}}{f{{l{F`}}}}}{{l{c}}}{{Dj{}{{Hb{Dh}}{A@f{Dh}}}}Dj}}{{{f{{l{Al}}}}{f{{l{F`}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{l{F`}}}}}{{l{Aj}}}}{{{f{{l{Al}}}}{f{c}}}{{l{Al}}}{{Ib{{Bj{Jb}}}}A@b}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Ib{{Bj{Jb}}}}A@b}}{{{f{{l{j}}}}{f{{l{F`}}}}}{{l{j}}}}`{{{f{{l{c}}}}dA@h}{{Gd{{Gd{A@j}}}}}Dj}{{{f{{l{c}}}}}{{l{c}}}Lh}{{{f{{l{Aj}}}}Fn}{{A`{Abn}}}}{{{f{Dd{l{Cd}}}}Ej}b}{{{f{Dd{l{Ah}}}}Ej}b}{{{f{{l{c}}}}}{{A`{{AAb{{A@l{f}}{AA`{{A@n{Fn}}}}}}n}}}An}{{{f{{l{Ah}}}}}{{A`{{AAb{AAd{AA`{{A@n{Fn}}}}}}n}}}}{fc{}}{{{f{{l{Al}}}}}{{l{Aj}}}}{{{f{{l{c}}}}}{{Gd{Cf}}}An}{{{f{{l{c}}}}}{{AAf{Gd{Gd{Cf}}}}}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{f{{l{c}}}}}{}An}{{{l{c}}}{}An}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Eb}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cd}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{Eb}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dn}Dj}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{Eb}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dn}Dj}{{{f{{l{Cd}}}}c}{{A`{{l{Cd}}n}}}{{Af{Eb}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cd}}}}c}{{A`{{l{Ah}}n}}}{{Af{Eb}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Aj}}e}}}Dj{}{{Af{{f{DdEh}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dj}{c{{A`{e}}}{}{}}0{{Dbg}{{A`{{l{i}}e}}}Cj{}{{Hl{}{{Ch{{A`{ce}}}}}}}{{Dj{}{{Hj{c}}}}Dj}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dj{{Af{{Cf{Eb}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{fAAh}0{{{f{{l{{Bn{c}}}}}}}{{A`{{l{{Bn{c}}}}n}}}Cb}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}An}{{{f{{l{Aj}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Al}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{l{j}}}AAj}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dj}{{{f{Dd{l{c}}}}}bDj}{{{f{{l{c}}}}Fn}{}Dj}{{{f{{l{c}}}}Bh}{{Cf{Md}}}An}{{{f{{l{Ef}}}}Bh}Mb}{{{f{{l{c}}}}Bh}MbFf}{{{f{{l{Ed}}}}Bh}Mb}{{{f{{l{Ef}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kh}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kb}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{{Bn{c}}}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}Cb}{{{f{{l{Nn}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kn}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kh}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kb}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Kn}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{{Bn{c}}}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}Cb}{{{f{{l{Ef}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cd}}}}}Fn}{{Dbc}{{l{e}}}Cj{{Dj{}{{Hj{c}}}}Dj}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dj{}{{Hj{c}}}}Dj}}{{{f{{l{c}}}}{Gd{{Cl{Cj}}}}}{{l{c}}}Dj}{{{l{c}}Db}{{l{c}}}Dj}{{{f{{Bj{AAl}}}}e}c{}{{AAn{{f{{l{F`}}}}}{{Ad{c}}}}}}{{{l{j}}{Cf{I`}}}{{l{j}}}}{{{l{j}}{l{Bd}}}{{l{j}}}}{{{f{{l{c}}}}Lj}{{l{c}}}Dj}{{{l{c}}}{}An}{{{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}23012323102332012323102332102323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dj{{Af{{Cf{Eb}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{Cd}}}}{f{{l{c}}}}e}{{l{Cd}}}Dj{{Af{{Cf{Eb}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Dd{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dj{}{{A@f{Dh}}}}}}{{{f{{l{j}}}}{f{{l{Bd}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}g{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DdABh}}{f{Cj}}}b}{{{f{DdABh}}}b}{{{f{DdABj}}}b}{{{f{DdABl}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}In}}{{{f{Dd{ABn{c}}}}e}bAn{{Cn{}{{Ch{Cf}}}}In}}{{{f{Dd{ABn{c}}}}e}bAn{{Cn{}{{Ch{}}}}In}}{{{f{DdAC`}}}b}{{{f{DdACb}}}b}65{{{f{DdACd}}}b}{{{f{DdACf}}}b}{{{f{DdABl}}}b}{{{f{DdACh}}}b}{{{f{Dd{ABn{c}}}}}bAn}{{{f{Dd{ACj{c}}}}}b{AClA@b}}{{{f{DdACn}}}b}{{{f{DdAD`}}}b}{{{f{Dd{ADb{c}}}}}bAn}{{{f{DdABh}}{Cf{{f{Cj}}}}}b}{{{f{DdABh}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DdAC`}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Dd{ABn{c}}}}{Cf{{f{Bj}}}}}bAn}{{{f{Dd{ACj{c}}}}{Cf{e}}}b{AClA@b}{{Ib{c}}}}{{{f{DdACb}}{Cf{c}}}b{}}{{{f{DdAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DdABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DdABj}}{f{Ab}}}{{A`{bn}}}}{{{f{DdACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DdACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DdABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DdACh}}{f{Ab}}}{{A`{bn}}}}{{{f{Dd{ABn{c}}}}{f{Ab}}}{{A`{bn}}}An}{{{f{Dd{ABn{c}}}}{f{Bj}}}bAn}{{{f{DdACd}}c}b{{Cn{}{{Ch{{Cf{{f{Bf}}}}}}}}In}}{{{f{DdACf}}c}b{{Cn{}{{Ch{{Cf{{f{{Bj{Bh}}}}}}}}}}In}}{{{f{DdACb}}c}b{}}{{{f{Dd{ACj{c}}}}e}b{AClA@b}{{Ib{c}}}}{{{f{DdACn}}d}b}{{{f{Dd{ADb{c}}}}}bAn}{{{f{DdACd}}c}b{{Cn{}{{Ch{{f{Bf}}}}}}}}{{{f{DdACf}}c}b{{Cn{}{{Ch{{f{{Bj{Bh}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Dd}}}{{f{Ddc}}}{}}0000000000`{{{f{{ACj{c}}}}}{{ACj{c}}}{AClA@b}}{{{f{ACn}}}ACn}{{{f{AD`}}}AD`}{{{f{{ADb{c}}}}}{{ADb{c}}}{ADdAn}}{{f{f{Ddc}}}b{}}000{fb}000{{}ABh}{{}ABj}{Fn{{f{c}}}{}}0000000000{Fn{{f{Ddc}}}{}}0000000000{Fnb}0000000000{{{f{ACd}}}d}{{{f{ACf}}}d}{{{f{ABl}}}d}{{{f{{ABn{c}}}}}dAn}{{{f{AC`}}}d}{{{f{ACd}}}{{f{Of}}}}{{{f{ACf}}}{{f{Of}}}}{{{f{ABl}}}{{f{Of}}}}{{{f{{ABn{c}}}}}{{f{Of}}}An}{{{f{AC`}}}{{f{Of}}}}{ACb{{l{c}}}Dj}{{{f{DdABh}}}{{l{Ah}}}}{{{f{DdABj}}}{{l{Ah}}}}{{{f{DdACh}}}{{l{Ah}}}}{{{f{DdAC`}}}{{l{Ah}}}}{{{ACj{{Bj{Bh}}}}}{{l{Al}}}}{{{ACj{Bf}}}{{l{Aj}}}}{ACn{{l{Bd}}}}{AD`ADf}{{{ADb{c}}}{{l{c}}}An}`{cc{}}0000000000{{Dbe}ADh{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{Dbe}ADh{}{{Cn{}{{Ch{c}}}}}}{{Db{f{{Bj{c}}}}}ADh{}}{{Db{f{{Bj{{Cf{c}}}}}}}ADh{}}{{{f{Ej}}FnFnDb}{{A`{{Cl{AC`}}n}}}}{{}Fn}0000000000{{{f{DdACd}}}{{Cl{Cj}}}}{{{f{DdACf}}}{{Cl{Cj}}}}{{{f{DdABl}}}{{Cl{Cj}}}}{{{f{Dd{ABn{c}}}}}{{Cl{Cj}}}An}{{{f{DdAC`}}}{{Cl{Cj}}}}{{}c{}}0000000000`{{DbFn{Cf{Ej}}}ABh}{{DbFn{Cf{Ej}}}ABj}{{DbFnFn}ACd}{{DbFnFn}ACf}{{DbFnFn}ABl}{{DbFn}ACh}{{DbFnFnEj}{{ABn{c}}}An}{{DbFn}{{ACj{c}}}{AClA@b}}{{DbFn}ACn}{{DbFn}AD`}{{DbFn}{{ADb{c}}}An}{{DbFnFnEjEj}{{ABn{c}}}An}{{{f{DdACb}}}b}{{{f{DdACn}}}b}{{{f{DdAD`}}}b}{{{f{Dd{ADb{c}}}}}bAn}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAh}0000000000{{}c{}}0000000000````````{{{f{DdAC`}}}b}{{{f{DdAC`}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DdAC`}}{f{Ab}}}{{A`{bn}}}}`{{{f{AC`}}}d}{{{f{AC`}}}{{f{Of}}}}{{{f{DdAC`}}}{{l{Ah}}}}{{{f{Ej}}FnFnDb}{{A`{{Cl{AC`}}n}}}}{{{f{DdAC`}}}{{Cl{Cj}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{Fh}}}Fh}{{f{f{Ddc}}}b{}}{fb}{{}Fh}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{Fh}}{f{Fh}}}d}{{f{f{c}}}d{}}00{{{f{Fh}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{Fh}}{f{Ddc}}}bADj}{{}Fn}{{}c{}}{{{f{Fh}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5``{{ADlDb}{{l{c}}}Dj}{{ADn{f{{l{c}}}}}{{l{c}}}Dj}10{{ADnDbEj}{{l{c}}}Dj}0{{ADlDb}{{A`{{l{c}}e}}}Dj{}}{{ADn{f{{l{c}}}}}{{A`{{l{c}}e}}}Dj{}}10{{ADnDbEj}{{A`{{l{c}}e}}}Dj{}}0`{AE`AE`}``{{AEbDbEj}e{}{{AEd{c}}}}{{eDbEj}AEd{}{{Il{}{{Ch{c}}}}}}````{f{{f{c}}}{}}00{{{f{Dd}}}{{f{Ddc}}}{}}00{Fn{{f{c}}}{}}00{Fn{{f{Ddc}}}{}}00{Fnb}00{cc{}}00{{}Fn}00{{}c{}}00000{{{f{AEf}}}AEh}{{{f{AEj}}Ej}AEl}{{{f{DdAEh}}}Cf}{{{f{DdAEl}}}Cf}{{{f{Dd{AEn{c}}}}}CfCn}21{{{f{Dd{AEn{c}}}}}CfGj}`{{{f{AEh}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{AEl}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{{AEn{c}}}}}{{H`{Fn{Cf{Fn}}}}}Cn}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00<<<`````````````````````````{{fh}b}0000{{}Gh}{{}Jd}{{GhGh}Gh}{{JdJd}Jd}{{{f{DdGh}}Gh}b}{{{f{DdJd}}Jd}b}3210{{{f{Gh}}}Jb}0{{{f{Jd}}}Bh}05432{f{{f{c}}}{}}000000{{{f{Dd}}}{{f{Ddc}}}{}}000000{{{f{{Mh{c}}}}}{{Mh{c}}}Dj}{{{f{{Jn{c}}}}}{{Jn{c}}}Dj}{{{f{AF`}}}AF`}{{{f{Gh}}}Gh}{{{f{Jd}}}Jd}{{f{f{Ddc}}}b{}}0000{fb}0000{{{f{DdAFb}}}b}{GhGh}{JdJd}{{{f{Gh}}Gh}d}{{{f{Jd}}Jd}d}{{}{{Mh{c}}}Dj}{{}{{Jn{c}}}Dj}{{}Gh}{{}Jd}{{{f{{Mf{c}}}}}fDj}{Fn{{f{c}}}{}}000000{Fn{{f{Ddc}}}{}}000000{{GhGh}Gh}{{JdJd}Jd}{{}d}{{{f{Ml}}}{{Cf{Jb}}}}{{{f{{Jn{c}}}}}{{Cf{Jb}}}Dj}{{{Jn{c}}Jb}{{Jn{c}}}Dj}{{{Jn{c}}{Cf{Jb}}}{{Jn{c}}}Dj}{Fnb}000000<;5{{{f{Gh}}{f{Gh}}}d}{{{f{Jd}}{f{Jd}}}d}7{{{f{DdGh}}c}b{{Hl{}{{Ch{Gh}}}}}}{{{f{DdJd}}c}b{{Hl{}{{Ch{Jd}}}}}}{{{Jn{c}}d}{{Jn{c}}}Dj}{{{Jn{c}}{Cf{d}}}{{Jn{c}}}Dj}{{{f{{Jn{c}}}}Gh}{{Jn{c}}}Dj}{{{f{{Jn{c}}}}Gh}{{Jn{e}}}DjDj}{{{Jn{c}}Jd}{{Jn{c}}}Dj}{{{Jn{c}}{Cf{Jd}}}{{Jn{c}}}Dj}{{{f{{Jn{c}}}}{f{DdHf}}}{{A`{bHh}}}Dj}{{{f{AF`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Gh}}{f{DdHf}}}{{A`{bHh}}}}0000{{{f{Jd}}{f{DdHf}}}{{A`{bHh}}}}0000{cc{}}000000{Jb{{Cf{Gh}}}}{Bh{{Cf{Jd}}}}{JbGh}0{BhJd}010{cGh{{Hl{}{{Ch{Gh}}}}}}{cJd{{Hl{}{{Ch{Jd}}}}}}{{{f{Bf}}}{{Cf{Gh}}}}{{{f{Bf}}}{{Cf{Jd}}}}{{{f{{Jn{c}}}}}{{Cf{Jb}}}Dj}{{{f{{Jn{c}}}}}dDj}{{{f{Jd}}}d}{{{f{Ml}}}Jd}{{{f{{Jn{c}}}}}JdDj}0{{{f{{Jn{c}}}}}{{Cf{f}}}Dj}0{{{f{Dd{Mh{c}}}}}{{f{Dd{Jn{c}}}}}Dj}{{{f{Jd}}}Lj}{{}Fn}000000{{{f{DdGh}}Gh}b}{{{f{DdJd}}Jd}b}{{GhGh}Gh}{{JdJd}Jd}{{{f{Gh}}Gh}d}{{{f{Jd}}Jd}d}{{}c{}}000000{Gh}{Jd}{{{f{Gh}}}d}{{{f{Jd}}}d}{{{f{{Jn{c}}}}}dDj}21{{{f{{Jn{c}}}}}LjDj}111{{{f{Gh}}}{{AFd{Gh}}}}{{{f{Jd}}}{{AFd{Jd}}}}{{{f{Gh}}}{{AFf{Gh}}}}{{{f{Jd}}}{{AFf{Jd}}}}{{}d}{{}{{f{{AFj{AFh}}}}}}{{{f{Ml}}}{{Cf{Mb}}}}{{{Jn{c}}}{{Jn{c}}}Dj}{{{f{{Jn{c}}}}}{{Cf{Mb}}}Dj}{{{Jn{c}}Cf}{{Jn{c}}}Dj}{{{f{{Jn{c}}}}{Jn{c}}}{{AFl{c}}}Dj}4321{{{Jn{c}}}{{Mh{c}}}Dj}{GhGh}{JdJd}{{{f{{Mh{c}}}}}{{Mn{{Jn{c}}}}}Dj}{{{f{DdGh}}Gh}b}{{{f{DdJd}}Jd}b}{{{f{DdGh}}Ghd}b}{{{f{DdJd}}Jdd}b}{{{f{Dd{Jn{c}}}}{Cf{Jb}}}bDj}{{{f{Dd{Jn{c}}}}d}bDj}{{{f{DdJd}}d}b}{{{f{Dd{Jn{c}}}}Jd}bDj}{{{f{Dd{Jn{c}}}}Cf}bDj}033{{{f{Dd{Jn{c}}}}Lj}bDj}{{{f{DdJd}}Lj}b}{{{Jn{c}}Lj}{{Jn{c}}}Dj}{{{Jn{c}}{Cf{Lj}}}{{Jn{c}}}Dj}{{GhGh}Gh}{{JdJd}Jd}>=10{{{Mh{c}}}{{Jn{c}}}Dj}{fc{}}0000{{{f{DdGh}}Gh}b}{{{f{DdJd}}Jd}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mh{c}}}}}{{Cf{{Mn{{Jn{c}}}}}}}Dj}{{{f{{Mh{c}}}}}{{Cf{{K`{{Jn{c}}}}}}}Dj}{fAAh}000000:9{{{f{{Mh{c}}}}}{{f{{AFn{Ml}}}}}Dj}{{}c{}}000000{AFbAFb}{{{f{{Mh{c}}}}}{{K`{{Jn{c}}}}}Dj}````{{fh}b}{{{f{{AG`{c}}}}Fn}{{H`{{AG`{c}}{AG`{c}}}}}Cb}{e{{AG`{c}}}Cb{{Hl{}{{Ch{{Cf{{f{c}}}}}}}}}}{e{{AG`{c}}}Cb{{Hl{}{{Ch{{f{c}}}}}}}}{{AGbe}g{}{{Hl{}{{Ch{c}}}}}{}}0{{{f{Jf}}}{{f{AGd}}}}{{{f{{AG`{c}}}}}{{f{AGd}}}Cb}{{{f{Dd{AG`{c}}}}}{{f{DdAGd}}}Cb}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}`{{{f{{AG`{c}}}}Fn}dCb}{{{f{{AG`{c}}}}}{{AG`{c}}}{ADdCb}}{{f{f{Ddc}}}b{}}{fb}{{{f{{AG`{c}}}}}{{f{AGb}}}Cb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{{f{Jf}}}}{f{{f{Jf}}}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{{AG`{c}}}}{f{DdHf}}}{{A`{bHh}}}{AGfCb}}{cc{}}{{FnAGb}{{AG`{c}}}Cb}{{{f{{AG`{c}}}}Fn}{{Cf{{f{c}}}}}Cb}{{}AGb}{{{f{I`}}{f{{AG`{c}}}}{f{{AG`{c}}}}}{{AG`{c}}}Cb}{{AGb{f{I`}}}{{AG`{c}}}Cb}{{{f{I`}}{f{{AG`{c}}}}}{{AG`{c}}}Cb}0{{}Fn}{{}c{}}{{{f{{AG`{c}}}}}{}Cb}{{{f{{AG`{c}}}}Fn}dCb}{{fFn}d}1{{{f{{AG`{c}}}}}{{AGj{{f{c}}{Fl{c}}AGh}}}Cb}{{{f{{AG`{c}}}}}{{AGj{AGh}}}Cb}{{{f{{AG`{c}}}}}FnCb}0`{db}{{{f{Dd{AG`{c}}}}{Cf{I`}}}bCb}{{{f{Dd{AG`{c}}}}FnFn}bCb}{{fFnFn}c{}}01{{{f{{AG`{c}}}}Fn}{{H`{{Cl{Cj}}{Cl{Cj}}}}}Cb}0{{{f{Jf}}}{{Cl{Jf}}}}{{{f{{AG`{c}}}}}{{Cl{Cj}}}Cb}{fc{}}{g{{A`{{AG`{c}}e}}}Cb{}{{Hl{}{{Ch{{A`{{f{c}}e}}}}}}}}{g{{A`{{AG`{c}}e}}}Cb{}{{Hl{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{{AGbg}{{A`{ie}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{{f{Jf}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AG`{c}}}}}{{Cf{{f{I`}}}}}Cb}{{{f{{AG`{c}}}}Fn}{{f{c}}}Cb}0{{{f{{AG`{c}}}}Fn}{}Cb}{{{f{{AG`{c}}}}}{{f{{Mj{{Gd{c}}}}}}}Cb}{{{f{{AG`{c}}}}}{{Fl{c}}}Cb}{{{f{{AG`{c}}}}}{}Cb}{{}c{}}{{{f{{AG`{c}}}}{Cf{I`}}}{{Cl{Cj}}}Cb}{{{AG`{c}}{Cf{I`}}}{{AG`{c}}}Cb}0`{{{f{Dd{AGl{c}}}}}bCb}0{{{f{Dd{AGl{c}}}}{Cf{c}}}bCb}{{{f{Dd{AGl{c}}}}{f{AGd}}}bCb}{{{f{Dd{AGl{c}}}}c}bCb}{{{f{Dd{AGl{c}}}}{f{AGd}}}{{A`{bn}}}Cb}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{}{{AGl{c}}}Cb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{AGl{c}}}{{l{{Bn{c}}}}}Cb}{cc{}}{{}Fn}{{}c{}}{{DbFn}{{AGl{c}}}Cb}{{{f{Dd{AGl{c}}}}}AbCb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5````{{{f{DdAGn}}}b}{{{f{DdAGn}}{Cf{{f{AGd}}}}}b}{{{f{DdAGn}}{f{AGd}}}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}`{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{AH`}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{DbFn}{{Cl{AGn}}}}{{}{{Mj{Dl}}}}{{}AGb}{{}Fn}{{}c{}}{{}d}`{{{Cl{Dl}}{Mj{Dl}}AGb}b}{{{f{DdAGn}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6``````````````````````````````````````````````{{fh}b}00{{{f{{AHd{}{{AHb{c}}}}}}g}{{AHd{}{{AHb{c}}}}}{}{}{{Dl{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dn}}{{{f{AHf}}{f{Dl}}}AHf}{{{f{AHf}}{f{Dl}}}{{l{c}}}Dj}{{{f{{AHd{}{{AHb{c}}}}}}i{f{Dd{Bj{g}}}}}b{}{}{}{{Dl{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHd{}{{AHb{c}}}}}}g}{{AHd{}{{AHb{c}}}}}{}{}{{Dl{e}{{Ad{c}}}}Dn}}{{{f{AHh}}En}{{l{F`}}}}{{{f{AHh}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{AHj}}}{{A`{{l{F`}}n}}}}`{f{{f{c}}}{}}00{{{f{Dd}}}{{f{Ddc}}}{}}00{{{f{AHl}}{f{Ej}}}{{A`{Abn}}}}0{{{f{AHl}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{En}}}En}{{{f{Fd}}}Fd}{{{f{AHn}}}AHn}{{f{f{Ddc}}}b{}}00{fb}00{{}En}{{}Fd}{Fn{{f{c}}}{}}00{Fn{{f{Ddc}}}{}}00``{Fnb}00{{{f{En}}{f{En}}}d}{{{f{Fd}}{f{Fd}}}d}{{{f{AHn}}{f{AHn}}}d}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIb}}}{{A`{Abn}}}}{{{f{AIb}}}{{A`{{H`{Ab{Gn{Gl}}}}n}}}}`{{{f{AId}}c}{{A`{AIdn}}}{}}{{{f{AIf}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}Dj}`{{{f{En}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Fd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{AHn}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{Fd}}}En}{{{f{En}}}Fd}22`{{DbcFn}AIh{}}{{DbFn}AIj}`{{{f{AIl}}Fn}{{A`{J`n}}}}{{{f{AIl}}Fn}J`}??{{{f{En}}{f{Ddc}}}bADj}{{{f{Fd}}{f{Ddc}}}bADj}{{{f{AHn}}{f{Ddc}}}bADj}{{}Fn}00{{}c{}}00{{{f{AIn}}}{{A`{{l{Bd}}n}}}}{{{f{AJ`}}}{{A`{{l{Bd}}n}}}}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AJb}}}{{Cf{c}}}{}}{{{f{AJb}}}{{Cf{Md}}}}{{{f{AJd}}}{{Cf{c}}}{}}2{{{f{AJb}}}{{Cf{{H`{cc}}}}}{}}``{{{f{AHj}}}{{A`{Fnn}}}}{{}En}{{}Fd}{{{f{AJf}}FnFn}{{l{c}}}Dj}88``{{{f{AIb}}}{{A`{{Gn{Gl}}n}}}}{{{f{AJd}}MdOl}{{A`{{Cf{c}}n}}}{}}{{{f{AJh}}}Ab}0{{{f{AJj}}}AJj}{{{f{AJl}}{f{Dl}}On}{{A`{Abn}}}}{{{f{AJn}}c{Cf{e}}}{{A`{AJnn}}}{{Hl{}{{Ch{Jb}}}}}{}}{{{f{AJn}}ci}{{A`{AJnn}}}{{Hl{}{{Ch{Jb}}}}}{}{}{{Dl{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJn}}{f{{l{Bd}}}}{Cf{c}}}{{A`{AJnn}}}{}}{{{f{AK`}}Gl}{{l{c}}}Dj}{{{f{AKb}}Glc}{{l{e}}}{}Dj}{{{f{AKd}}FnFn}AKd}0`{{{f{AHh}}d}{{l{c}}}Dj}{{{f{AHh}}En}{{l{c}}}Dj}{{{f{AKf}}Bh}{{Cf{Md}}}}{{{f{AJb}}}{{Cf{c}}}{}}{{{f{AKh}}{f{c}}}{{A`{AKhn}}}A@b}{{{f{AKj}}{f{c}}}AKjA@b}{{{f{AKl}}}{{Gd{{f{{Bj{Bh}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00{{{f{AHj}}}{{A`{AHjn}}}}9{{}c{}}00{{End}En}{{Fdd}Fd}1010{{Fdc}Fd{{Hl{}{{Ch{d}}}}}}210{EnEn}{FdFd}`{{{f{AKn}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dj}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DjDj{{Dl{ff}{{Ad{}}}}}{{Dl{f}{{Ad{}}}}}{{Dl{f}{{Ad{}}}}}Dj}{{{l{c}}{l{e}}gik}{{l{m}}}DjDj{{Dl{}{{Ad{}}}}}{{Dl{}{{Ad{}}}}}{{Dl{}{{Ad{}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DjDjCj{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DjDj{{AL`{CfCf}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}g}bDjDj{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Aj}}}DjDj{{Af{{f{DdEh}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DjDj{}{{Af{}{{Ad{g}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}iDb}{{l{k}}}DjDj{CjALb}{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDb}{{l{k}}}DjDjCj{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DjDjCj{{Af{}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DjDj{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DjDj{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DjDj{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DjDjDj{{ALd{CfCfCf}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DjDjCjALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dj{}{{Hj{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDb}{{A`{{l{m}}i}}}DjDjCjALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DjDjALf{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DjDjDj{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{CjALb}ALf{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dj{}{{Hj{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dj{{ALh{Cf}}}Dj}{{{f{{l{c}}}}e}{{l{g}}}DjALhDj}{{{f{{l{c}}}}g}{{l{i}}}DjCj{{Af{f}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}{{{l{c}}g}{{l{i}}}DjCj{{Af{}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dj{CjALb}{{Af{f}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}0{{{f{{l{c}}}}}FnAn}0{{LjLj}Lj}{{{f{{l{F`}}}}Jb}{{A`{bn}}}}{{{f{{ALj{Jb}}}}Jb}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eALld}{{Gd{Jb}}}Dj{{Cn{}{{Ch{Cf}}}}}}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{ALl}}}ALl}{{f{f{Ddc}}}b{}}{fb}{{}ALl}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{ALl}}{f{ALl}}}d}{{f{f{c}}}d{}}00{{{f{ALl}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{ALl}}{f{Ddc}}}bADj}{{}Fn}{{}c{}}{{{f{{Bj{f}}}}cJbe}{{Gd{Jb}}}{{Cn{}{{Ch{Cf}}}}}{{Dl{fFnf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5`{{Fn{f{Dd{Gd{d}}}}}b}```{{{f{AKd}}FnFn}AKd}0{{Fn{f{{Bj{Ab}}}}{f{DdFd}}}{{A`{{ALn{{l{F`}}}}n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{AM`n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{Jh{Gl}}n}}}}{{Db{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{Fb}}n}}}}{{Db{f{{Bj{Ab}}}}}{{A`{{l{Fb}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{Fb}}n}}}}0```````````88`{AMbGl}00{{{f{Bf}}}{{A`{Dbn}}}}{{{f{Bf}}}{{A`{AMdn}}}}{{{f{AMf}}}Gl}{{{f{Bf}}}{{A`{bn}}}}444````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000{{{f{AMh}}}d}{{{f{J`}}}{{`{{Cn{}{{Ch{J`}}}}}}}}{{{f{J`}}{f{Dd{Gd{J`}}}}}b}{{AMhd}AMh}{{{f{{Kf{L`Kn}}}}{f{{Kf{L`Kn}}}}}}{{{f{J`}}{f{J`}}}J`}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DdAMj}}{Cf{{f{Bf}}}}}b}{{{f{DdAMh}}{f{AMh}}}{{A`{bn}}}}{{{f{DdAMj}}}b}{{{f{DdAMj}}{f{Bf}}}b}{{{f{AMh}}En}{{l{F`}}}}{eAMl{}{{Hl{}{{Ch{c}}}}}}0{{AGbe}AMn{}{{Hl{}{{Ch{c}}}}}}0{{{f{J`}}}J`}{{{f{{Kf{KdKb}}}}}{{`{In}}}}{{{f{{Kf{KlKh}}}}}{{`{In}}}}{{{f{Db}}}{{f{AN`}}}}{{{f{Db}}}{{f{Bf}}}}{{{f{Db}}}{{f{{Bj{Bh}}}}}}{{{f{Db}}}{{f{ANb}}}}{{{f{Ej}}}{{f{Ej}}}}{{{f{Of}}}{{f{Ej}}}}{{{f{ANd}}}{{f{Ej}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}6{{{f{{Kf{LfKh}}}}}{{`{In}}}}{f{{f{c}}}{}}80000000000000000000000000000000000000000000{{{f{Dd}}}{{f{Ddc}}}{}}0000000000000000000000000000000000000000000{Ej{{Cl{Ej}}}}{{{AO`{Bf}}}AOb}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{AOf}}{f{Ej}}}{{A`{Abn}}}}{{{f{J`}}{f{Ej}}}J`}{{{f{Ej}}Ej}Ej}{{{f{{Kf{KlKh}}}}Kj}{{Kf{KlKh}}}}{{{f{{Kf{LbKh}}}}Kj}{{Kf{LbKh}}}}{{{f{AOf}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{Kf{L`Kn}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{Kf{KlKh}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{Kf{LbKh}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{Kf{KdKb}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{{Kf{LfKh}}}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{AMh}}{f{Ej}}Fh}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db}}}Db}{{{f{{Kf{ce}}}}}{{Kf{ce}}}DjDj}{{{f{AOh}}}AOh}{{{f{AOb}}}AOb}{{{f{AMh}}}AMh}{{{f{AOj}}}AOj}{{{f{J`}}}J`}{{{f{AOl}}}AOl}{{{f{Ej}}}Ej}{{{f{AOn}}}AOn}{{{f{Of}}}Of}{{{f{Kj}}}Kj}{{{f{Nf}}}Nf}{{{f{Nh}}}Nh}{{{f{F`}}}F`}{{{f{Nl}}}Nl}{{{f{Nn}}}Nn}{{{f{N`}}}N`}{{{f{Kb}}}Kb}{{{f{Kh}}}Kh}{{{f{Ef}}}Ef}{{{f{Ed}}}Ed}{{{f{Kd}}}Kd}{{{f{Lf}}}Lf}{{{f{Aj}}}Aj}{{{f{Al}}}Al}{{{f{Fb}}}Fb}{{{f{Bd}}}Bd}{{{f{L`}}}L`}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{B@`}}}B@`}{{{f{AGb}}}AGb}{{{f{B@b}}}B@b}{{f{f{Ddc}}}b{}}000000000000000000000000000000000{fb}000000000000000000000000000000000{{{f{Db}}{f{Db}}}B@d}{{{f{DdOf}}Ej}b}{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{f{f{c}}}B@d{}}{{{f{Ej}}}d}00{{{AO`{Bf}}}Ej}{{{f{Of}}}{{f{Ej}}}}{{{f{{Kf{LbKh}}}}}{{l{Kh}}}}{{}Db}{{}B@h}{{}AOh}{{}AOb}{{}J`}{{}AOl}{{}Ej}{{}AGb}{Fn{{f{c}}}{}}{{{f{Db}}}f}111{{{f{{Kf{ce}}}}}fDjDj}2222222222222222222222222222222222222222{Fn{{f{Ddc}}}{}}00{{{f{Dd{Kf{ce}}}}}{{f{Dd}}}DjDj}11111111111111111111111111111111111111111{{{f{{Kf{L`Kn}}}}{f{{Kf{L`Kn}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMjc}AMh{{Hl{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{Fnb}0000000000000000000000000000000000000000000{{{f{AOf}}}{{f{Ej}}}}{{{f{{Kf{L`Kn}}}}}{{f{Ej}}}}{{{f{{Kf{KlKh}}}}}{{f{Ej}}}}{{{f{{Kf{LfKh}}}}}{{f{Ej}}}}{{{f{{Kf{LbKh}}}}}{{f{Ej}}}}{{{f{{Kf{KdKb}}}}}{{f{Ej}}}}{{{f{AMh}}}{{f{Ej}}}}{{{f{J`}}}Ej}`{fc{{B@l{B@j}}}}0{{{f{Db}}{f{c}}}d{{Ib{Bf}}A@b}}{{{f{AOh}}{f{AOh}}}d}{{{f{J`}}{f{J`}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Ej}}{f{Ej}}}d}{{{f{Ej}}{f{AGb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{Of}}{f{Of}}}d}{{{f{Kj}}{f{Kj}}}d}{{{f{AGb}}{f{AGb}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{J`}}{f{J`}}d}d}{{{f{AMh}}{f{{l{Aj}}}}}}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bf}}}}210{{f{f{c}}}d{}}00000000000000000000000000{{{f{{Kf{ce}}}}}OfDjDj}{{{f{AOb}}{f{Bf}}}{{Cf{Jb}}}}{{AOd{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{AMjAMh}{B@h{{Mj{AOb}}}}{{{f{Db}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{AOh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{AOb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{AOj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{J`}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{AOl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Ej}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{AOn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Of}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Kj}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{AGb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{B@b}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{EhDb}{{{f{Eh}}}Db}{{{f{Bf}}}Db}{GfDb}444{{{l{Kh}}}{{Kf{LfKh}}}}{{{l{Kb}}}{{Kf{KdKb}}}}666666666666{{{f{{Bj{Bh}}}}}J`}{dJ`}{{{f{Bf}}}J`}{{{Cf{c}}}J`{{B@n{J`}}}}:{cJ`BA`};;{{{f{J`}}}Ej}{{{f{AGb}}}Ej}{J`Ej}>>{{{f{BAb}}}Of}{{{f{J`}}}Of}{cc{}}{{{f{B@b}}}Kj}111111111111111111111{BAdAGb}{BAfAGb}3{{{f{AGb}}d}Ej}{{{l{F`}}{Mj{AOb}}dAOh}AMh}{{DbcKj}{{Kf{LbKh}}}{{Hl{}{{Ch{BAh}}}}}}{{DbcKj}{{Kf{LbKh}}}{{Hl{}{{Ch{{Cf{BAh}}}}}}}}{{{l{F`}}AOh}AMh}{cDb{{Hl{}{{Ch{{Cl{Bf}}}}}}}}{cDb{{Hl{}{{Ch{{E`{Bf}}}}}}}}{cDb{{Hl{}{{Ch{Db}}}}}}{cDb{{Hl{}{{Ch{{f{B@j}}}}}}}}{cDb{{Hl{}{{Ch{{f{Db}}}}}}}}{cDb{{Hl{}{{Ch{B@j}}}}}}{cDb{{Hl{}{{Ch{Eh}}}}}}{cDb{{Hl{}{{Ch{{f{Bf}}}}}}}}{{Dbc}{{Kf{KdKb}}}{{Hl{}{{Ch{BAj}}}}}}{{Dbc}{{Kf{KdKb}}}{{Hl{}{{Ch{{Cf{BAj}}}}}}}}{{DbcKj}{{Kf{KlKh}}}{{Hl{}{{Ch{AMb}}}}}}{{DbcKj}{{Kf{KlKh}}}{{Hl{}{{Ch{{Cf{AMb}}}}}}}}{{Dbc}{{Kf{LfKh}}}{{Hl{}{{Ch{AMf}}}}}}{{Dbc}{{Kf{LfKh}}}{{Hl{}{{Ch{{Cf{AMf}}}}}}}}{{{f{Bf}}}Db}0{EhDb}{{{f{{l{Aj}}}}{f{{AO`{Bf}}}}AOh}{{A`{AMhn}}}}{{{Gd{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{Gd{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gj{}{{Ch{e}}}}InIfIh}}{{FncAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{FnAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{DbdFnAOh}AMh}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AOb}}Jb}{{f{Bf}}}}{{{f{{Kf{KlKh}}}}Fn}{{A`{J`n}}}}{{{f{{Kf{LfKh}}}}Fn}{{A`{J`n}}}}{{{f{{Kf{KdKb}}}}Fn}{{A`{J`n}}}}{{{f{{Kf{LbKh}}}}Fn}{{A`{J`n}}}}{{{f{{Kf{L`Kn}}}}Fn}{{A`{J`n}}}}{{{f{AOf}}Fn}{{A`{J`n}}}}{{{f{AMh}}Fn}{{A`{J`n}}}}{{{f{{Kf{KdKb}}}}Fn}J`}{{{f{{Kf{LbKh}}}}Fn}J`}{{{f{{Kf{LfKh}}}}Fn}J`}{{{f{{Kf{L`Kn}}}}Fn}J`}{{{f{{Kf{KlKh}}}}Fn}J`}{{{f{AOf}}Fn}J`}{{{f{AMh}}Fn}J`}{{{f{AOb}}}{{f{{AO`{Bf}}}}}}{{}Ej}0000000000000000000000000{{{f{AOb}}Jb}{{Cf{{f{Bf}}}}}}{{{f{AMh}}}{{f{{Mj{AOb}}}}}}{{{f{Ej}}}{{Cf{{Gd{Fn}}}}}}{{{f{J`}}}{{Cf{{f{Bf}}}}}}{{{f{BAl}}Fn}J`}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AMh}}{f{{l{Aj}}}}}}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bf}}}}012{{{f{Db}}{f{Ddc}}}bADj}{{{f{J`}}{f{Ddc}}}bADj}{{{f{AOl}}{f{Ddc}}}bADj}{{{f{Ej}}{f{Ddc}}}bADj}{{{f{Of}}{f{Ddc}}}bADj}{{{f{Kj}}{f{Ddc}}}bADj}{{{f{AGb}}{f{Ddc}}}bADj}{{{f{B@b}}{f{Ddc}}}bADj}{{{f{J`}}{f{Ddc}}d}bADj}{{{f{{Kf{LfKh}}}}}{{l{Nn}}}}{{{f{{Kf{LbKh}}}}}{{l{Kh}}}}{EjEj}{{}Fn}0000000000000000000000000000000000000000000{{{f{Ej}}}{{Cf{{f{Ej}}}}}}{{{f{AGb}}}{{Cf{{f{AGb}}}}}}{{}c{}}00000000000000000000000000000000000000000000{{BAnEj}{{A`{Mbn}}}}{{{Kf{LfKh}}}Ab}{{{Kf{LbKh}}}Ab}{{{Kf{KdKb}}}Ab}{{{Kf{L`Kn}}}Ab}{{{Kf{KlKh}}}Ab}{AMhAb}{J`{{A`{J`n}}}}{DbEh}{{{f{Ej}}}d}00{{{f{J`}}}d}111{{{f{AMh}}}d}0212{{{f{AOb}}}d}2333033{{{f{AGb}}}d}34343444434444340{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AMh}}}BB`}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{Ej}}}{{f{Ej}}}}{{{f{AOb}}}Fn}{{{f{AMh}}}Fn}{DbBBb}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bf}}}}{{{f{AMh}}{f{{l{Aj}}}}}}012{{{f{AMh}}{f{AMh}}}{{A`{{H`{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{H`{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ej}}{f{Ej}}}{{A`{dn}}}}{{{f{AOl}}}{{Cf{Ej}}}}{{{f{AMh}}}Mb}{{{f{Ej}}{f{Ej}}}{{A`{Ejn}}}}{{{f{DdB@h}}{f{{Mj{AOb}}}}}{{A`{bn}}}}{{{f{{Kf{LbKh}}}}}{{l{Kh}}}}03{{{f{{Kf{LfKh}}}}}{{l{Nn}}}}1{{{f{{Kf{L`Kn}}}}{f{{Kf{L`Kn}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMh}}}{{A`{Fnn}}}}{{{f{AMh}}}{{f{Db}}}}{{{f{Of}}}{{f{Db}}}}`{{{f{{Kf{LfKh}}}}}{{l{Kb}}}}8{{}c{}}0{{DbFnAOh}AMj}{{Dbc}{{Kf{KlKh}}}{{Ib{{Bj{AMb}}}}}}{{Dbc}{{Kf{LbKh}}}{{Ib{{Bj{{Cf{BAh}}}}}}}}{{Dbc}{{Kf{LfKh}}}{{Ib{{Bj{{Cf{AMf}}}}}}}}{{Dbc}{{Kf{KlKh}}}{{Ib{{Bj{{Cf{AMb}}}}}}}}{{Dbc}{{Kf{LfKh}}}{{Ib{{Bj{AMf}}}}}}{{Dbc}{{Kf{LbKh}}}{{Ib{{Bj{BAh}}}}}}{{Dbc}{{Kf{KdKb}}}{{Ib{{Bj{{Cf{BAj}}}}}}}}{{Dbc}{{Kf{KdKb}}}{{Ib{{Bj{BAj}}}}}}{{{Mj{AOb}}}B@h}{{DbEj}Of}{{{l{c}}}{{Kf{ec}}}DjDj}{{}AOn}{{{f{DdBB`}}}Cf}{{{f{AMh}}{f{{l{Aj}}}}}}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bf}}}}120{{{f{AMh}}}Fn}5{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{KdKb}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{LfKh}}}}{{{f{Db}}{f{Db}}}{{Cf{B@d}}}}{{{f{J`}}{f{J`}}}{{Cf{B@d}}}}{{{f{Kj}}{f{Kj}}}{{Cf{B@d}}}}{{{f{{Kf{ce}}}}}{{f{{l{e}}}}}DjDj}{{{f{AMh}}}{{f{{l{F`}}}}}}{{{f{{Kf{L`Kn}}}}}{{Cf{Fn}}}}{{{f{DdAMj}}{f{Bf}}}{{H`{Jbd}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kf{KdKb}}}}{f{{l{Aj}}}}{Cf{{f{AMd}}}}}{{A`{{Kf{KdKb}}n}}}}{{{f{{Kf{KlKh}}}}{f{{l{Aj}}}}{Cf{{f{AMd}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{AOb}}{f{AOb}}}d}{{{f{{Kf{L`Kn}}}}}Fn}{{{f{{Kf{LfKh}}}}}{{l{Nn}}}}{{{f{{Kf{LbKh}}}}}{{l{Kh}}}}{{{f{DdOf}}Db}b}{{{f{Dd{Kf{KlKh}}}}Kj}b}{{{f{Dd{Kf{LbKh}}}}Kj}b}{{{f{Dd{Kf{KlKh}}}}KjDb}{{A`{bn}}}}{{{f{Dd{Kf{KlKh}}}}Db}{{A`{bn}}}}{{{f{BB`}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{AMh}}d}AMh}{{{f{AMh}}En}AMh}{{{f{{Kf{KlKh}}}}{f{Bf}}}{{A`{{l{Aj}}n}}}}{{{f{{Kf{LfKh}}}}{f{Bf}}}{{l{Aj}}}}{{{f{{Kf{KdKb}}}}{f{Bf}}}{{A`{{l{Aj}}n}}}}{{{f{J`}}{f{Ej}}}{{Cf{J`}}}}{{{f{{Kf{L`Kn}}}}{f{{Kf{L`Kn}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kf{LbKh}}}}}Kj}{{{f{{Kf{KlKh}}}}}Kj}{{{f{{Kf{KlKh}}}}}{{f{{Cf{Db}}}}}}{{{f{AMh}}AOnd}{{Cl{Cj}}}}{{{f{Ej}}AOn}AGb}{{{f{Of}}AOn}BAb}{KjB@b}{{{f{Ej}}DbAOn}BAb}{Kj{{f{Bf}}}}{{{f{AMh}}{f{{AO`{Bf}}}}BBd}AMh}{{{f{AMh}}}{{A`{AMhn}}}}{{{f{AMh}}}AMh}{{{f{AGb}}}{{f{AGb}}}}{fc{}}000000000000000000000000000000000{{{f{Ej}}}Ej}{{{f{AGb}}}BBf}{{{f{{Kf{L`Kn}}}}Fn}{{A`{{E`{{Kf{L`Kn}}}}n}}}}{fEh}{{{f{{Kf{KlKh}}}}{f{Bf}}}{{A`{{l{Aj}}n}}}}{{{f{{Kf{KdKb}}}}{f{Bf}}}{{A`{{l{Aj}}n}}}}{{{f{{Kf{LfKh}}}}{f{Bf}}}{{l{Aj}}}}333{{{f{J`}}{f{J`}}}d}{{{f{{Kf{KdKb}}}}{Cf{{f{AMd}}}}{f{{l{Aj}}}}}{{A`{{Kf{KdKb}}n}}}}{{{f{{Kf{KlKh}}}}{Cf{{f{AMd}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{g{{A`{AMle}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}0{{AGbg}{{A`{AMne}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}0{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{{f{J`}}}{{A`{cn}}}M`}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000{{{f{J`}}{f{Ej}}}{{A`{J`n}}}}{{{f{Ej}}AOn}{{A`{AGbn}}}}{f{{A`{GfBBh}}}}000{fAAh}0000000000000000000000000000000000000000000{{{f{AGb}}}AGb}{{{f{AMh}}}{{A`{AMhn}}}}{{{f{AMh}}}d}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}cADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AMh}}}{{A`{AAjn}}}}1{{{f{Ej}}J`}d}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{}c{}}0000000000000000000000000000000000000000000{Fnc{}}0{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Cf{I`}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{DdDb}}B@j}{{A`{bHh}}}}{{{f{DdDb}}BBj}{{A`{bHh}}}}{{{f{DdDb}}{f{Bf}}}{{A`{bHh}}}}{{{f{Ej}}}J`}```````````{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{AOd{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{{{f{AMh}}{f{AMh}}}{{A`{{H`{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{H`{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{}BBl}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{{}b}{Fnb}{{{f{DdBBl}}}b}2{cc{}}6{{}Fn}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{}d}4``````````````````````````{{{f{BBn}}}{{f{Bf}}}}???>>>`{{nBBn}n}{nn}>{{{f{BBn}}}f}??>>><<<`{{{f{BC`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BBn}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{n}}{f{DdHf}}}{{A`{bHh}}}}0=={cBBn{{B@n{{E`{Bf}}}}}}{BCbn}{BCdn}{BCfn}{BChn}{BCjn}{cc{}}{BCln}{{}{{G`{{f{Bf}}BC`}{{Ad{b}}}}}}{{}Fn}00{{}c{}}00{cnALf}{{{f{Bf}}}BBn}````{{{G`{{f{Bf}}BC`}{{Ad{b}}}}}b}{cnBCn}{fEh}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GfBBh}}}}0{fAAh}00999{{{f{n}}c}n{{AAn{{f{Bf}}}{{Ad{Eh}}}}}}``````````````````{{fh}b}00{{{f{DdAAj}}{Gd{Ab}}{f{BD`}}}{{A`{bn}}}}{{{f{AAj}}{f{Dl}}}{{Gd{Ab}}}}0{{{f{AAj}}{f{{l{Bd}}}}}{{A`{AAjn}}}}{{{f{AAj}}{f{{Bj{Db}}}}}{{A`{AAjn}}}}0{{{f{AAj}}{f{{Bj{Db}}}}{f{BD`}}d}{{A`{AAjn}}}}{{{f{AAj}}GlFn}AAj}{{{f{DdAAj}}}{{f{DdAAj}}}}{{{f{DdAAj}}{f{Bf}}e}{{A`{{f{DdAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{c}}}}}}{{{f{DdAAj}}Fne}{{A`{{f{DdAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Dd}}}{{f{Ddc}}}{}}0000{{{f{AAj}}}{{`{{Cn{}{{Ch{Fn}}}}}}}}{{{f{AAj}}}AAj}{{{f{BDd}}}BDd}{{{f{BDf}}}BDf}2{{f{f{Ddc}}}b{}}00{fb}00{{{f{AAj}}{f{Bf}}}{{A`{{f{Ab}}n}}}}{{{f{AAj}}e}{{A`{{Gd{{f{Ab}}}}n}}}{{Ib{Bf}}}{{Hl{}{{Ch{c}}}}}}{{}BDf}{{}AAj}{Fn{{f{c}}}{}}0000{Fn{{f{Ddc}}}{}}0000{Fnb}000{{{f{AAj}}{f{Bf}}}{{A`{AAjn}}}}1{{{f{DdAAj}}{f{Bf}}}{{A`{Abn}}}}{{{f{AAj}}e}AAj{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}{f{{BDh{DbA@h}}}}}AAj}{{{f{AAj}}{Cf{{f{{Bj{c}}}}}}}{{A`{AAjn}}}{}}{{{f{AAj}}}{{Gd{Ej}}}}9{{{f{BDj}}}AAj}{{{f{BD`}}}AAj}{{{f{BDf}}{f{BDf}}}d}{{{f{AAj}}{f{AAj}}}d}00{{f{f{c}}}d{}}00{{{f{AAj}}}Fn}`{{{f{AAj}}e}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}{Gd{Ab}}}{{A`{AAjn}}}}{{{f{DdAAj}}{f{AAj}}}{{A`{bn}}}}{{{f{AAj}}}{{Gd{Of}}}}{{{f{AAj}}AHn}{{A`{AAjn}}}}{{{f{AAj}}{f{{l{Bd}}}}}{{A`{AAjn}}}}{{{f{BDd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BDf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{AAj}}{f{DdHf}}}{{A`{bHh}}}}0{cc{}}0000{cAAj{{Hl{}{{Ch{Ab}}}}}}{{{f{{Bj{BDl}}}}}{{A`{AAjn}}}}{{{f{{Bj{BDl}}}}{f{BD`}}}{{A`{AAjn}}}}{{c{f{BD`}}}{{A`{AAjn}}}{{Cn{}{{Ch{{f{BDl}}}}}}}}{{{f{AAj}}Fn}{{Cf{{Gd{J`}}}}}}{{{f{AAj}}{f{Bf}}}{{Cf{Fn}}}}{{{f{AAj}}}{{Gd{{f{Db}}}}}}{{{f{AAj}}}{{Gd{Db}}}}{{{f{AAj}}}{{Gd{{f{Bf}}}}}}{{{f{AAj}}}{{f{{Bj{Ab}}}}}}{{{f{DdAAj}}}{{f{Dd{Gd{Ab}}}}}}{{{f{AAj}}Fn}{{A`{BDln}}}}{{{f{AAj}}Fn{f{DdBDl}}}{{A`{bn}}}}{{{f{AAj}}Fn{f{DdBDl}}}b}{{{f{AAj}}}{{Cf{{A`{Ejn}}}}}}`{{{f{AAj}}e}{{A`{BDnn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}{Gd{Ab}}{f{BE`}}}{{A`{{H`{Ab{Gd{Ab}}C`}}n}}}}1{{{f{AAj}}{Gd{Ab}}dd}{{A`{BDnn}}}}{{{f{BDf}}{f{Ddc}}}bADj}{{{f{AAj}}{Cf{Fn}}}AAj}{{{f{AAj}}}Fn}{{{f{AAj}}{f{{Bj{Ab}}}}}{{A`{AAjn}}}}{{{f{DdAAj}}{f{{Bj{Ab}}}}}{{A`{{f{DdAAj}}n}}}}{{{f{DdAAj}}{f{{Bj{Ab}}}}}{{f{DdAAj}}}}{{{f{AAj}}{BEb{Fn}}}f}{{{f{AAj}}{BEd{Fn}}}f}{{{f{AAj}}{f{Bf}}}f}{{{f{AAj}}{BEf{Fn}}}f}{{{f{AAj}}{BEh{Fn}}}f}{{{f{AAj}}BEj}f}{{{f{AAj}}{Od{Fn}}}f}{{{f{AAj}}Fn}f}{{}Fn}0000{{{f{DdAAj}}Fnc}{{A`{{f{DdAAj}}n}}}BDb}{{}c{}}000000{{AAjDb}{{l{j}}}}{{{f{AAj}}}{{A`{{l{Bd}}n}}}}{{{f{AAj}}}d}1{{{f{AAj}}}{{Fl{Ab}}}}{{{f{AAj}}AOnd}BEl}{{{f{AAj}}}{{`{{Cn{}{{Ch{AAj}}}}}}}}{{{f{AAj}}}BEn}{AAjBF`}{{{f{AAj}}}Fn}{{{f{AAj}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAj}}BDd}{{A`{{Cf{Ab}}n}}}}122{{{Gd{Ab}}}{{A`{AAjn}}}}{{{Gd{Ab}}}AAj}111{{{f{DdBEl}}}Cf}{{{f{DdBEn}}}Cf}{{{f{AAj}}}AAj}{{{f{AAj}}ed}{{A`{{Gd{AAj}}n}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}0{{AAje}{{A`{cn}}}{}{{Dl{AAj}{{Ad{{A`{cn}}}}}}}}{{{f{DdAAj}}e}{{A`{cn}}}{}{{Dl{{f{DdAAj}}}{{Ad{{A`{cn}}}}}}}}{{AAjgc}{{A`{en}}}{}{}{{Dl{AAjc}{{Ad{{A`{en}}}}}}}}{{{f{DdAAj}}}{{Cf{Ab}}}}{{{f{AAj}}{f{AAj}}}d}{{{f{DdAAj}}{f{Bf}}Db}{{A`{{f{DdAAj}}n}}}}{{{f{DdAAj}}{f{Bf}}c}{{A`{{f{DdAAj}}n}}}BDb}{{{f{DdAAj}}Fnc}{{A`{{f{DdAAj}}n}}}BDb}{{{f{DdAAj}}Dbc}{{A`{{f{DdAAj}}n}}}BDb}:{{{f{AAj}}{Gd{Ab}}{f{BFb}}}{{A`{{H`{Ab{Gd{Ab}}C`}}n}}}}`{{{f{AAj}}{f{Ab}}dd{Cf{Jl}}}{{A`{AAjn}}}}0{{{f{AAj}}Fndd{Cf{Jl}}}{{A`{AAjn}}}}{{{f{AAj}}}BD`}{{{f{AAj}}{f{AAj}}}{{A`{bn}}}}{{{f{AAj}}e}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}Fn}{{Cf{{f{Ab}}}}}}{{{f{AAj}}c}{{A`{AAjn}}}{{BFd{Fn}}}}2{{{f{AAj}}c}{{A`{{Gd{Ab}}n}}}{{BFf{Db}}}}{{{f{AAj}}e{f{{Mj{BD`}}}}}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}e{f{BD`}}}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{DdAAj}}e}{{A`{bn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{AAj}}}{{H`{FnFn}}}}{{{f{AAj}}Gl}AAj}{{{f{AAj}}}d}{{{f{DdAAj}}}b}{{{f{BEl}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{BEn}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{AAj}}GlFn}AAj}00{{{f{AAj}}cFd}{{A`{AAjn}}}{{BFf{Db}}}}{{{f{DdAAj}}cFd}{{A`{{f{DdAAj}}n}}}{{BFf{Db}}}}{{{f{AAj}}Gl}{{H`{AAjAAj}}}}0{{{f{DdAAj}}}{{`{{Cn{}{{Ch{AAj}}}}}}}}{{AAjFnd}{{Gd{AAj}}}}{{{f{AAj}}BDd}{{A`{{Cf{Ab}}n}}}}{{{f{AAj}}{Cf{Fn}}}AAj}{{{f{AAj}}{f{{l{F`}}}}}{{A`{AAjn}}}}{AAj{{Gd{Ab}}}}{{{f{AAj}}{f{{l{F`}}}}}AAj}{{{f{AAj}}{f{{l{F`}}}}d}AAj}{{{f{AAj}}}{{f{AAj}}}}{{{f{AAj}}BFh}{{A`{{AAb{AAd{AA`{{A@n{Fn}}}}}}n}}}}{fc{}}00{fEh}{{{f{DdAAj}}{Cf{{f{Bf}}}}{Cf{{AAf{Eh{Gd{Eh}}}}}}}{{A`{AAjn}}}}{{{f{DdAAj}}{Cf{{f{Bf}}}}{Cf{{AAf{Db{Gd{Db}}}}}}}{{A`{AAjn}}}}{{{f{DdAAj}}{f{Bf}}e}{{A`{{f{DdAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DdAAj}}Fne}{{A`{{f{DdAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{{{H`{{BFj{{Cl{Cj}}}}{f{{Bj{BAb}}}}}}}{{A`{AAjn}}}}{BFl{{A`{AAjn}}}}2{{c{f{BD`}}}{{A`{AAjn}}}{{Cn{}{{Ch{{A`{{f{BDl}}n}}}}}}}}{{{f{AAj}}{f{Bf}}}{{A`{Fnn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GfBBh}}}}{fAAh}0000{{{f{AAj}}{Cf{{f{{Bj{Eh}}}}}}BDf{Cf{{H`{GlFn}}}}}{{A`{AAjn}}}}{{{f{AAj}}d{Cf{{Gd{Db}}}}BDf{Cf{{H`{GlFn}}}}}{{A`{AAjn}}}}1{{{f{AAj}}c}{{A`{AAjn}}}{{BFf{Db}}}}{{{f{AAj}}c{f{Bf}}BFn}{{A`{AAjn}}}{{BFf{Db}}}}0{{{f{AAj}}{f{AAj}}}{{A`{AAjn}}}}{{{f{DdAAj}}{f{AAj}}}{{A`{{f{DdAAj}}n}}}}{{{f{DdAAj}}{f{AAj}}}b}{{}c{}}0000{{{f{AAj}}}Fn}{{{f{DdAAj}}c}{{A`{{f{DdAAj}}n}}}BDb}{{{f{DdAAj}}c{f{BD`}}}{{A`{{f{DdAAj}}n}}}BDb}{{{f{DdAAj}}Ab}{{f{DdAAj}}}}{{{f{AAj}}Db{Cf{Jb}}}{{A`{AAjn}}}}{{{f{DdAAj}}Db{Cf{Jb}}}{{f{DdAAj}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{BG`}}}BG`}{{f{f{Ddc}}}b{}}{fb}{{}BG`}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{BG`}}{f{BG`}}}d}{{f{f{c}}}d{}}00{{{f{BG`}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{BG`}}{f{Ddc}}}bADj}`{{}Fn}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}``4````````````````````````````````{{fh}b}000{{{f{BDn}}}{{A`{AAjn}}}}`{{{f{BGb}}}{{f{{Bj{{BGd{Jb}}}}}}}}{{{f{BDn}}c}{{A`{AAjn}}}{{Af{AAj}{{Ad{{A`{AAjn}}}}}}IfIh}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Dd}}}{{f{Ddc}}}{}}0000000{{{f{BGb}}}BGb}{{{f{C`}}}C`}{{{f{BDn}}}BDn}{{{f{BGf}}}BGf}{{f{f{Ddc}}}b{}}000{fb}000;{{}BGb}{{}C`}{Fn{{f{c}}}{}}00{{{f{BGh}}}f}11111{Fn{{f{Ddc}}}{}}0000000`{{BGjc}{}BGl}{Fnb}0000{{{f{DdBGb}}}b}111{{{f{BGb}}{f{BGb}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BGn}}}Jb}{{{f{BGb}}}{{f{{Bj{Jb}}}}}}{{{f{BDn}}}{{A`{AAjn}}}}{{{f{DdBGb}}}{{f{Dd{Gd{Jb}}}}}}{{{f{BGb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{C`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BDn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BGf}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{Bf}}BGf}Db}{cc{}}000{{{Gd{{H`{Jb{BGd{Jb}}}}}}}BGb}{{{Gd{{H`{{Gd{Jb}}{Gd{{BGd{Jb}}}}}}}}}BGb}2{{{Gd{{Gd{{H`{Jb{BGd{Jb}}}}}}}}}BGb}3{BGbC`}44{BH`BGf}{cBGb{{Hl{}{{Ch{{H`{Jb{BGd{Jb}}}}}}}}}}{cBGb{{Il{}{{Ch{{H`{Jb{BGd{Jb}}}}}}}}}}{{{f{C`}}Fn}BGn}{{{f{BDn}}}{{f{C`}}}}{{{f{DdBDn}}}{{f{DdC`}}}}{{{f{C`}}}{{l{F`}}}}{{{f{BHb}}dd}{{A`{C`n}}}}{{{f{BDn}}}{{A`{AAjn}}}}{{{f{DdC`}}}{{f{DdBGb}}}}{{}Fn}0000000{{}c{}}0000000{C`BGb}1{BGb}{{{f{BGb}}}}310{{{f{BGn}}}d}{{{f{C`}}}d}{{{f{BGb}}}d}{{{f{BGb}}}{{BHf{{BHd{{Fl{Jb}}}}{Fl{{BGd{Jb}}}}}}}}{{{f{C`}}}BHh}{{{f{BDn}}}{{Gd{Ab}}}}{{{f{BDn}}{Cf{{H`{GlFn}}}}}{{Gd{Ab}}}}={{{f{BGn}}}Fn}{{{f{C`}}}Fn}?????{{{Gd{Jb}}{Gd{{BGd{Jb}}}}d}BGb}{{{f{AAj}}{Gd{Ab}}C`{Cf{{Gd{Db}}}}}BDn}{{{f{DdBHh}}}Cf}{{{f{DdBHh}}Fn}Cf}{{{f{BDn}}c}{{A`{AAjn}}}{{Dl{AAj}{{Ad{{A`{AAjn}}}}}}IfIh}}{f}{{{f{C`}}}BGj}{{{f{BDn}}MdOl}{{A`{AAjn}}}}{{BDne}BDn{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{C`}}GlFn}BGh}{{{f{DdBGb}}}b}{{{f{DdC`}}}b}{{{f{BDn}}Bh}{{A`{AAjn}}}}{{{f{BDn}}}{{A`{AAjn}}}}{C`{{Gd{Jb}}}}0{BDnC`}{{{f{DdBDn}}}C`}{fc{}}000{fEh}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GfBBh}}}}{fAAh}0000000{C`C`}{{{f{C`}}}{{f{BGb}}}}{{{f{C`}}}{{f{{Gd{{A@n{Jb}}}}}}}}={{}c{}}0000000`````{{{f{BGb}}c}Ab{{Dl{{H`{Jb{f{{BGd{Jb}}}}}}}{{Ad{Cf}}}}IfIh}}{{{f{BGb}}c}Ab{{Dl{{H`{Jb{f{{BGd{Jb}}}}}}}{{Ad{}}}}IfIh}}{{{f{{Bj{{A@n{Jb}}}}}}c}Ab{{Dl{{A@n{Jb}}}{{Ad{Cf}}}}IfIh}}{{{f{{Bj{{A@n{Jb}}}}}}c}Ab{{Dl{{A@n{Jb}}}{{Ad{}}}}IfIh}}{{{f{{Bj{c}}}}e{Cf{{Mj{AGd}}}}}{{ALj{c}}}{BHjBHl}{{Cn{}{{Ch{{H`{JbJb}}}}}}In}}{{{f{{Bj{c}}}}{f{I`}}e{Cf{{Mj{AGd}}}}}{{ALj{c}}}{BHjBHl}{{Cn{}{{Ch{{H`{JbJb}}}}}}In}}{{{f{{l{c}}}}JbJb}{{l{c}}}Dj}{{{f{{Gd{{A@n{Jb}}}}}}{f{{Bj{{Cl{Cj}}}}}}}d}{{{f{BHn}}{f{C`}}}Ab}{{BI`BI`}BI`}0`{{{f{BIb}}{f{AAj}}{f{C`}}}{{A`{Abn}}}}{{{f{BIb}}}{{A`{{f{Db}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DdBId}}J`}{{Cf{b}}}}{{{f{DdBIf}}{f{J`}}}b}0{f{{f{c}}}{}}00{{{f{Dd}}}{{f{Ddc}}}{}}00{{{f{BId}}}BId}{{{f{BIf}}}BIf}{{{f{BDl}}}BDl}{{f{f{Ddc}}}b{}}00{fb}00{{{f{{Bj{c}}}}}Ej{{Id{Ej}}}}{{}BDl}{Fn{{f{c}}}{}}00{Fn{{f{Ddc}}}{}}00{Fnb}00{{{f{BDl}}{f{BDl}}}d}{{f{f{c}}}d{}}00{{{f{BDl}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{H`{{f{Ej}}Fn}}}BId}1{{{H`{{f{Ej}}Fn}}}BIf}2{{gFn}BD`{{B@n{Db}}}{{B@n{Ej}}}{{Cn{}{{Ch{{Gd{{H`{ce}}}}}}}}}}{{}Fn}00{{}c{}}00{BIdAb}{BIfAb}{{{f{Ej}}Fn}BId}{{{f{Ej}}Fn}BIf}{{{Gd{J`}}}BDl}{{{f{DdBId}}Fn}Ab}{{{f{DdBIf}}Fn}Ab}{{{f{{Bj{BDl}}}}{Cf{Fn}}}{{A`{BD`n}}}}0{{{f{{Bj{BDl}}}}{Cf{Fn}}}{{A`{{Gd{Ej}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00==={{{f{{Bj{AAj}}}}}{{A`{AAjn}}}}{{{f{{Bj{AAj}}}}d}{{A`{AAjn}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAj{f{{Bj{Db}}}}{f{{Bj{Db}}}}{Cf{Db}}{f{AAj}}}AAj}{{BF`c}{{A`{AAjn}}}{{Dl{BIh{f{Dd{BIl{BIj}}}}{f{Dd{BIl{BIn}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BJ`}}{f{{Bj{Jb}}}}dd}AAj}{{{f{BJ`}}{f{AAj}}{f{Ab}}{f{Ab}}BJb}{{A`{AAjn}}}}`{{{f{Bf}}{f{Bf}}}Db}{{BJd{Mj{{Bj{Db}}}}}BBb}{{{f{BFl}}Fn}{{H`{BFlBFl}}}}{{{f{BJf}}{f{{Bj{A@d}}}}Lj}AAj}0{{{f{BJf}}{f{{Bj{A@d}}}}}AAj}0{{{f{BJh}}{Cf{{Gd{{f{Bf}}}}}}{Cf{{f{Bf}}}}d}{{A`{AAjn}}}}{{BF`d}BF`}{{{BJj{c}}{Cf{{Mj{BJl}}}}}{{BJj{c}}}BJn}{{{f{Ab}}}{{A`{Abn}}}}{BBbBBb}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{BKbBKb}}{{{f{BFn}}Gl{Cf{{f{AMd}}}}}{{A`{Gln}}}}0{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}1{{BKfc}BF`{{Ib{{Bj{BBb}}}}}}6`{{BBbc}BBb{{B@n{Db}}}}{{}BBb}{{BBbd}BBb}{{}BKh}{c{{A`{BBbn}}}{{Ib{{Bj{BBb}}}}}}{{{f{{Mj{ce}}}}}{{f{e}}}A@bBKj}{{BKld}BKl}`{{{f{BKn}}}d}00`{{BBbc}BBb{{B@n{BBb}}}}{{{Mj{BKn}}BL`}{{A`{BF`n}}}}75{{BBbcd}BBb{{B@n{BBb}}}}{{{f{DdAC`}}}b}{{{f{DdACb}}}b}{{{f{DdAC`}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DdACb}}{Cf{c}}}b{}}{{{f{DdAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DdACb}}c}b{}}{{{f{{AHd{}{{AHb{c}}}}}}g}{{AHd{}{{AHb{c}}}}}{}{}{{Dl{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dn}}{{BKfc{Mj{BD`}}}BF`{{Dl{AAj}{{Ad{{A`{AAjn}}}}}}IfIh}}{{BBbc{BLd{{Mj{BLb}}}}}BBb{{Dl{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BBbBBbc{BLd{{Mj{BLb}}}}}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{{f{BBb}}{f{Ddc}}f}{{A`{BLfn}}}{{Af{{f{BBb}}f}{{Ad{{A`{BLfn}}}}}}}}{{{f{AHf}}{f{Dl}}}AHf}{{{f{AHf}}{f{Dl}}}{{l{c}}}Dj}{{BBbc{f{{Bj{BBb}}}}{BLd{{Mj{BLb}}}}}BBb{{Dl{{f{Dd{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BBbBLh{f{{Bj{BBb}}}}dd}BBb}{{ce{BLd{{Mj{BLb}}}}d}BBb{{Dl{{f{Dd{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}{{Ib{{Bj{BBb}}}}}}{{{f{{AHd{}{{AHb{c}}}}}}i{f{Dd{Bj{g}}}}}b{}{}{}{{Dl{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHd{}{{AHb{c}}}}}}g}{{AHd{}{{AHb{c}}}}}{}{}{{Dl{e}{{Ad{c}}}}Dn}}{{BBbBBbGlEj}BBb}{BFl{{Mj{Cj}}}}{{{f{BLj}}}{{Cf{Fn}}}}{BLlBBb}{BLnBBb}{BBbBBb}3210{{{f{AHh}}En}{{l{F`}}}}{{BBbEn}BBb}{{{f{BM`}}En}{{l{F`}}}}{{cFd}BBb{{Ib{{Bj{BBb}}}}}}{{{f{AHh}}{f{{Bj{Ab}}}}{f{Fd}}}{{A`{{l{F`}}n}}}}{{{f{AHj}}}{{A`{{l{F`}}n}}}}6{{{f{BM`}}}{{A`{{l{F`}}n}}}}{cBBb{{B@n{BBb}}}}{{{f{BMb}}}{{f{{Bj{Of}}}}}}``{BBbBLl}{eAMl{}{{Hl{}{{Ch{c}}}}}}{cBFl{{Hl{}{{Ch{{Cf{b}}}}}}}}{cBFl{{Hl{}{{Ch{b}}}}}}2{{AGbe}AMn{}{{Hl{}{{Ch{c}}}}}}0{{AGbc}BFl{{Hl{}{{Ch{b}}}}}}{{AGbc}BFl{{Hl{}{{Ch{{Cf{b}}}}}}}}`{{{f{Dd{BMd{c}}}}}{{A`{BDjn}}}BMf}{{{f{BKn}}}{{f{AGd}}}}{{{f{BM`}}}{{f{AGd}}}}{{{f{BMh}}}{{f{AGd}}}}{{{f{BFl}}}{{f{AGd}}}}{{{f{DdBM`}}}{{f{DdAGd}}}}{{{f{DdBFl}}}{{f{DdAGd}}}}{{{f{Mb}}}J`}{{{f{BMj}}}{{f{{l{Al}}}}}}{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjdd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{{Mj{c}}}}}BMn{BN`A@b}}{{{f{BNb}}}{{f{{l{Ah}}}}}}{{{f{{Mj{ce}}}}}{}A@bBKj}{{{f{{Mj{c}}}}}ObBNd}{{{f{BNf}}}{{f{BBb}}}}{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}{{{f{ANd}}}{{f{Ej}}}}{{{f{BNh}}}{{f{Ab}}}}{{{f{DdBM`}}}{{A`{Fnn}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{BNj}}}{{f{{l{Aj}}}}}}{{{Gd{BBb}}}BBb}{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{LfKh}}n}}}}{{{Mj{{Bj{{BNl{c}}}}e}}}{{Mj{{Bj{c}}e}}}{}BKj}{{{Mj{{BNl{c}}e}}}{{Mj{ce}}}{}BKj}{{{f{Bf}}}BBb}{{BBb{Cf{Jb}}}BBb}{{{f{BNn}}}{{A`{{l{Aj}}n}}}}{{{f{BNn}}}{{l{Aj}}}}{{{f{{Kf{KlKh}}}}{f{Kj}}{f{AMd}}}{{Kf{LbKh}}}}`{{{BJj{{Cl{BJn}}}}{Cf{{Mj{BD`}}}}}{{A`{BO`n}}}}{{{BOb{c}}{f{BD`}}}{{A`{{BOd{c}}n}}}BOf}{{{BOh{c}}{f{BD`}}}{{A`{{BOj{c}}n}}}BOf}{{{BOl{c}}Fn}{{A`{BOnn}}}BJn}{{{C@`{c}}{f{BD`}}}{{A`{{C@b{c}}n}}}BOf}{{{f{Dd{BJj{c}}}}}{{A`{C@dn}}}BJn}`{BBbC@f}{{BBbC@hBBb}BBb}{{BKbBKb}}{{BKhBKh}BKh}{{{f{BM`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DdBKh}}BKh}b}210{{{f{BKh}}}Jb}04321{f{{f{c}}}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}111111111111111{{{f{Dd}}}{{f{Ddc}}}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BF`JbcFd}BF`{{Ib{{Bj{BBb}}}}}}{BFl{{Cl{Cj}}}}``{BF`BF`}```{{{f{C@j}}{f{Db}}}{{A`{Dbn}}}}{{C@l{Gd{BBb}}}{{A`{BBbn}}}}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{BMh}}{f{Dd{Bj{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{C@n}}AbAb}{{A`{Abn}}}}{{C@l{Gd{BBb}}}BBb}{{{f{CA`}}}b}{{BBbEj}BBb}{{{f{BM`}}{f{Ej}}Fh}{{A`{Abn}}}}{{BF`{CAb{{f{Bf}}EjA@h}}d}BF`}{{{f{AHl}}{f{Ej}}}{{A`{Abn}}}}3{{{f{AOf}}{f{Ej}}}{{A`{Abn}}}}{{BF`Ejd}BF`}2{{{f{AHl}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{AOf}}{f{Ej}}Fh}{{A`{Abn}}}}{{BBbEjFh}BBb}`{BBbCAd}{{{f{{Mj{c}}}}}{{Cf{{f{ALf}}}}}{ALfA@b}}{BBbBBb}{{{f{CAf}}}{{A`{Abn}}}}1`{{{f{CAh}}}{{A`{{l{Kb}}n}}}}{{{f{BFl}}Fn}d}{{{BOl{c}}{f{BDj}}}{{A`{{BOl{c}}n}}}BJn}{{{f{CAj}}{f{Ab}}}{{A`{Abn}}}}{{{f{BM`}}{f{Ab}}}{{A`{Abn}}}}{{{f{CAj}}c}{{A`{Abn}}}Bb}{{{f{BM`}}}{{Gb{{Fl{{Cl{Cj}}}}{G`{{f{{Cl{Cj}}}}}{{Ad{Fn}}}}}}}}``{{{f{BM`}}}{{f{{Gd{{Cl{Cj}}}}}}}}{{{f{DdBM`}}}{{f{Dd{Gd{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBbBBbBBb}BBb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBbBBb}BBb}10{{{f{CA`}}}CA`}{{{f{BF`}}}BF`}{{{f{BKf}}}BKf}{{{f{BL`}}}BL`}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{BE`}}}BE`}{{{f{BFb}}}BFb}{{{f{CBf}}}CBf}{{{f{BFn}}}BFn}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{AAl}}}AAl}{{{f{A@d}}}A@d}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{BJb}}}BJb}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{BNf}}}BNf}{{{f{BBb}}}BBb}{{{f{CGb}}}CGb}{{{f{C@h}}}C@h}{{{f{{BLd{c}}}}}{{BLd{c}}}ADd}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{BLh}}}BLh}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{BKb}}}BKb}{{{f{C@l}}}C@l}{{{f{BKh}}}BKh}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{{Mj{ce}}}}}{{Mj{ce}}}A@b{BKjADd}}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{On}}}On}{{{f{BFh}}}BFh}{{{f{BFl}}}BFl}{{{f{Mb}}}Mb}{{{f{BD`}}}BD`}{{{f{BAb}}}BAb}{{{f{BDj}}}BDj}{{{f{Ol}}}Ol}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{BM`}}}{{Mj{BM`}}}}{{f{f{Ddc}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CJb}}}{{Cf{{f{CJd}}}}}}{{{f{CAl}}}{{Cf{{f{CJd}}}}}}{{{f{CB`}}}{{Cf{{f{CJd}}}}}}``{{{f{BFn}}{f{BFn}}}B@d}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}B@d{CJfA@b}BKj}{{{f{{Bj{BBb}}}}}BBb}{{BKlCCj}BKl}{{{f{CCj}}{f{CCl}}}d}`{{{f{{Bj{Ab}}}}}{{A`{Abn}}}}{cBBb{{B@n{Db}}}}{BF`{{A`{AAjn}}}}{c{{A`{{Gd{AAj}}n}}}{{Il{}{{Ch{BF`}}}}}}{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{ADlDb}{{l{c}}}Dj}{{ADn{f{{l{c}}}}}{{l{c}}}Dj}10{{ADnDbEj}{{l{c}}}Dj}0{BF`{{A`{CA`n}}}}{{{f{DdBF`}}}{{A`{{Mj{BD`}}n}}}}{eBBb{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{CId}}Fn}CJh}``{{{f{BJh}}{Gd{{f{Bf}}}}{Cf{{f{Bf}}}}d}{{A`{AAjn}}}}`{{f{f{c}}}B@d{}}0{BKhBKh}```{{{f{CFh}}}{{A`{{Mj{BD`}}n}}}}{{cCIj}{{A`{BF`n}}}{{Ib{{Bj{BF`}}}}}}{{{f{BNn}}{f{{l{Aj}}}}}{{l{Aj}}}}{{ed}{{A`{BBbn}}}{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{{f{CJb}}{Gd{BF`}}}{{A`{BF`n}}}}{{{f{CAl}}{Gd{BF`}}}{{A`{BF`n}}}}44{e{{A`{BBbn}}}{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{c{f{Bf}}d}BBb{{Ib{{Bj{BBb}}}}}}{{BLlc}BBb{{B@n{BBb}}}}{{{f{CJj}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{BNn}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{BLnc}BBb{{B@n{BBb}}}}{{{f{BKh}}BKh}d}{{{f{BD`}}{f{Bf}}}d}{{{f{CJj}}{f{{l{Al}}}}}{{l{Bd}}}}{{{f{BNn}}{f{{l{Aj}}}}dd}{{A`{{l{Bd}}n}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Cj}}{f{AGb}}}{{Cl{Cj}}}}{{{f{Ab}}Fn}{{A`{{l{F`}}n}}}}{BF`BF`}{{{CJl{c}}}{{A`{Fnn}}}BJn}{BBbBBb}{{{f{BNn}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}d}{{A`{{l{F`}}n}}}}{{{f{CJn}}Bh{Cf{Bh}}{Cf{{f{CCf}}}}Bhd}{{A`{Fnn}}}}{{{AO`{Bf}}}Ej}{{{f{BJ`}}{f{{Bj{A@d}}}}d}AAj}`{{BF`BF`{Cf{Db}}}BF`}{{{f{CK`}}{f{AAj}}{Cf{Db}}{Cf{{H`{GlFn}}}}}{{A`{AAjn}}}}{{{f{CK`}}{f{AAj}}{Cf{{H`{GlFn}}}}d}{{A`{{H`{AAjAAj}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBbd}BBb}{{BBbced}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADd}{{Ib{{Bj{BBb}}}}}}212121{{ce}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADd}{{Ib{{Bj{BBb}}}}}}32{{CKbBBbFnd}BBb}`{{{f{BFl}}}{{f{AGb}}}}{{{f{BAb}}}{{f{AGb}}}}```{{BBbBBbBFnCBh}BBb}`{CH`BBb}`{{BBbBBbBFnCBh{Cf{Kj}}{Cf{Db}}}BBb}0{AMbGl}00{{{f{CKd}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}`{{{f{CKh}}}{{l{Kh}}}}{{{f{BFn}}}Gl}`{{{f{BFn}}}d}```{{}b}{cbBKj}{{}BF`}{{}BL`}{{}CAn}{{}CBb}{{}CKj}{{}BE`}{{}BFb}{{}CBl}{{}CC`}{{}CCb}{{}CCd}{{}BJb}{{}CCj}{{}CCn}{{}CD`}{{}CDb}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CDn}{{}CEb}{{}CEd}{{}CEh}{{}CEl}{{}CEn}{{}CF`}{{}CFh}{{}BBb}{{}{{BLd{{Mj{C@n}}}}}}{{}{{BLd{{Mj{CKl}}}}}}{{}{{BLd{{Mj{BLb}}}}}}{{}CH`}{{}CHb}{{}CHd}{{}CHh}{{}CHj}{{}CHl}{{}CHn}{{}CIb}{{}BKh}{{}{{Mj{CKn}}}}{{}{{Mj{c}}}CL`}{{}{{Mj{{Bj{c}}}}}{}}{{}{{Mj{Bf}}}}{{}CIh}{{}CIj}{{}On}{{}BFh}{{}BD`}{{}BAb}{{}BDj}{{}Ol}`{{}{{AAf{{Gd{AAl}}{Gd{A@d}}}}}}{Fn{{f{c}}}{}}0{{{f{{ALn{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BLd{c}}}}}f{}}222222222222222222222222{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}33333333333333{Fn{{f{Ddc}}}{}}00{{{f{Dd{ALn{c}}}}}{{f{Dd}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CFh}}}{{A`{Ehn}}}}{{{f{BF`}}}{{A`{Ehn}}}}0001{{{f{{Mj{c}}}}}{{f{Bf}}}{ALfA@b}}{{{f{BAb}}{f{{Bj{{f{CLb}}}}}}}{{A`{CLdn}}}}```{{{f{Ab}}GlCLf}{{A`{Abn}}}}{{BLnGlCLf}BBb}{{BBbGlCLf}BBb}{{BKhBKh}BKh}{{{f{CFh}}}{{A`{{`{BCn}}n}}}}``{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{Mj{AGdc}}}{{A`{{Mj{ec}}{Mj{AGdc}}}}}BKj{AGdIfIh}}{{{Mj{AGdc}}}{{Mj{ec}}}BKj{AGdIfIh}}{{{f{{Mj{ce}}}}}{{CLh{ce}}}A@b{ADdBKj}}{Fnb}000000{{{f{DdCA`}}}b}1{{BF`e}BF`{{B@n{BKb}}}{{Hl{}{{Ch{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Dd{Mj{ce}}}}}bA@bBKj}333333333333333{BBbBBb}2{{BF`{Cf{{Gd{BBb}}}}}BF`}1{{{f{BM`}}}Ab}{{{f{{Kf{KlKh}}}}{f{Kj}}{f{AMd}}}{{Kf{LbKh}}}}`{BBbCLj}{{{f{AOf}}}{{f{Ej}}}}{{{f{BM`}}}{{f{Ej}}}}{{{f{Mb}}}{{f{Ej}}}}`{{{f{Ej}}}BBb}{cBBb{{Ib{{Bj{Ej}}}}}}`{CHdBBb}{{}CHb}{{}BKh}{fc{{B@l{B@j}}}}0`{{{f{CJj}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{CJj}}{f{{l{Al}}}}}{{l{Bd}}}}{{BFn{f{Ej}}{f{Bf}}}{{A`{bn}}}}{{BFn{Cf{{f{Bf}}}}{f{Bf}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CLl}{{{f{CLn}}{f{Bf}}}{{A`{bn}}}}`{{{f{CBd}}{f{CBd}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{AAl}}{f{AAl}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{BNf}}{f{BNf}}}d}{{BBbc}BBb{{B@n{BBb}}}}{{{f{BBb}}{f{BBb}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{{BLd{{Mj{c}}}}}}{f{{BLd{{Mj{c}}}}}}}dA@b}{{{f{{BLd{Ab}}}}{f{{BLd{Ab}}}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{BLh}}{f{BLh}}}d}{{{f{CLd}}{f{CLd}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{CM`A@b}BKj}{{{f{{Mj{Cj}}}}{f{Cj}}}d}{{{f{{Mj{CMb}}}}{f{CMb}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{On}}{f{On}}}d}{{{f{BFh}}{f{BFh}}}d}{{{f{BFl}}{f{{f{Cj}}}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{BD`}}{f{BD`}}}d}{{{f{BAb}}{f{BAb}}}d}{{{f{BDj}}{f{BDj}}}d}{{{f{Ol}}{f{Ol}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CMdBBbd}BBb}``{{BBbc}BBb{{BFf{Db}}}}{{BBbc}BBb{{Ib{{Bj{Ej}}}}}}{{{f{Dd}}c}{{A`{{f{Dde}}BCj}}}CMf{}}{{{f{{Bj{CJn}}}}d{Cf{{f{CJd}}}}}{{A`{{Mj{{Gd{CJn}}}}n}}}}{{{f{{Bj{CJn}}}}d{Cf{{f{CJd}}}}d}{{A`{{H`{{Mj{{Gd{CJn}}}}Fn}}n}}}}{{{f{{Bj{c}}}}{f{{Bj{c}}}}}d{{Ib{AN`}}}}{{{f{BF`}}d}{{A`{Ehn}}}}{{BF`e}BF`{{B@n{BKb}}ADd}{{Ib{{Bj{c}}}}}}{{{f{AIb}}}{{A`{Abn}}}}{BBbBBb}{{{f{AIb}}}{{A`{{H`{Ab{Gn{Gl}}}}n}}}}`{{{f{DdBKh}}c}b{{Hl{}{{Ch{BKh}}}}}}{{BBbBBbBBb}BBb}{{{f{BNn}}{f{{l{Aj}}}}Fn}{{A`{{l{Aj}}n}}}}{A@d{{H`{JbJb}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNn}}{f{Bf}}{f{Ej}}}{{A`{Abn}}}}{{{f{AC`}}}d}{{{f{CA`}}}{{Cf{{A`{AAjn}}}}}}{{BF`Fn}{{A`{AAjn}}}}{{{f{CA`}}}{{A`{AAjn}}}}{{{f{AC`}}}{{f{Of}}}}{{{f{BM`}}}{{E`{Of}}}}{{BJdGl}BBb}{{BJd{f{Bf}}}BBb}{{BJde}BBb{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{{f{BFl}}}{{f{{Bj{BAb}}}}}}``{{BF`c}BF`{{B@n{BBb}}}}{{BBbc}BBb{{B@n{BBb}}}}`10{{BBbAHn}BBb}{{{f{AId}}c}{{A`{AIdn}}}{}}{{{f{AIf}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}Dj}{{{f{BM`}}{f{{l{Bd}}}}}{{A`{Abn}}}}{{BF`BBb}BF`}5{{BDjc}BDj{{Dl{Fn{f{BAb}}}{{Ad{d}}}}}}{{{f{BNn}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}dd}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{F`}}n}}}}{CMh{{A`{AAjn}}}}{{{f{DdCMj}}{f{DdAAj}}}{{A`{bn}}}}{ACb{{l{c}}}Dj}{{AOd{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{BKlBF`}{{{BJj{c}}}{{A`{AAjn}}}BJn}{CJb{{A`{BF`n}}}}{CAl{{A`{BF`n}}}}{CB`{{A`{BF`n}}}}{{{f{Dd{BOb{c}}}}{f{DdAAj}}}{{A`{bn}}}BOf}{{{CMl{c}}}{{A`{AAjn}}}BJn}{{{BMd{c}}}{{A`{AAjn}}}BMf}{{{f{Dd{CMn{c}}}}{f{DdAAj}}}{{A`{bn}}}BOf}{{{f{Dd{BOh{c}}}}{f{DdAAj}}}{{A`{bn}}}BOf}{{{f{Dd{CN`{c}}}}{f{DdAAj}}}{{A`{bn}}}BOf}{{{CNb{c}}}{{A`{AAjn}}}BJn}{{{CJl{c}}}{{A`{AAjn}}}BJn}{{{BOl{c}}}{{A`{AAjn}}}BJn}{{{C@`{c}}{f{DdAAj}}}{{A`{Jln}}}BOf}{{{f{DdAC`}}}{{l{Ah}}}}=<;{{{CMl{c}}{Cf{{Mj{BJl}}}}d}{{A`{AAjn}}}BJn}{{{f{BOn}}Fn}d}{{}BBb}{BF`BF`}{BLnBBb}{BBbBBb}`0```{{}{{BLd{{Mj{BLb}}}}}}{{{f{CAf}}}{{A`{Abn}}}}2{{BBbBBb}BBb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd{Mj{AFh}}}}}{{A`{bBCj}}}}{{{f{BMh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{C@n}}{f{DdHf}}}{{A`{bHh}}}}{{{f{C@j}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CBd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BE`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BFb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CBf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BFn}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CBh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CBj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CBl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{AAl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{A@d}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BKn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CC`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CNd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BJb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CCl}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CCn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CD`}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CDb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CDn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CE`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CEn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CF`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CFb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CFd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CFf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BBb}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{C@h}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{{BLd{c}}}}{f{DdHf}}}{{A`{bHh}}}{}}{{{f{CGd}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGf}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGh}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGj}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGl}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CGn}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{BLh}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{CLd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CH`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHd}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CHn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CI`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CIb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BKb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{C@l}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BKh}}{f{DdHf}}}{{A`{bHh}}}}0000{{{f{CId}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CIf}}{f{DdHf}}}{{A`{bHh}}}}{{{f{{Mj{ce}}}}{f{DdHf}}}{{A`{bHh}}}{AGfA@b}BKj}{{{f{{Mj{ce}}}}{f{DdHf}}}{{A`{bHh}}}{BCnA@b}BKj}{{{f{{Mj{ce}}}}{f{DdHf}}}{{A`{bHh}}}A@bBKj}{{{f{CIh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CIj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{On}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BFh}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BFl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BD`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BAb}}{f{DdHf}}}{{A`{bHh}}}}{{{f{BDj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Ol}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CIl}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CIn}}{f{DdHf}}}{{A`{bHh}}}}{{{f{CJ`}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Bf}}BGf}Db}```{{BBbce}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADd}{{Ib{{Bj{BBb}}}}}}{{BKld}BKl}``{{{f{Bf}}c}{{A`{BBbn}}}{{Ib{{Bj{BBb}}}}}}{{BBb{Cf{Jb}}}BBb}{cc{}}0000000{CFhBF`}1{BKfBF`}2222222222222222222222222222222222{JbAAl}3333333{{{f{Bf}}}CCf}4{CClBJb}5555555555555555555555555555555{GlBBb}{{{f{Bf}}}BBb}{NjBBb}{JjBBb}{BhBBb}{dBBb};{JlBBb}{MdBBb}{O`BBb}{BNfBBb}{JbBBb}{NbBBb}{ObBBb}{cc{}}0{CGd{{BLd{{Mj{BMh}}}}}}{CGf{{BLd{{Mj{BMh}}}}}}{CNf{{BLd{{Mj{BMh}}}}}}{CNh{{BLd{{Mj{BMh}}}}}}{CGl{{BLd{{Mj{BMh}}}}}}{CGn{{BLd{{Mj{BMh}}}}}}6{CNj{{BLd{{Mj{BMh}}}}}}{CGh{{BLd{{Mj{BMh}}}}}}{BLh{{BLd{{Mj{BMh}}}}}}{CNl{{BLd{{Mj{BMh}}}}}}::::::{CGlBLh}{CNjBLh}<{CGdBLh}{CGfBLh}>{CNnCLd}???????{CHnCHl}{cc{}}00{EhBKb}1{{{f{Bf}}}BKb}{DbBKb}{BBbBKb}4444{CO`{{Mj{CKn}}}}{{{f{Bf}}}{{Mj{Bf}}}}{{{f{AN`}}}{{Mj{AN`}}}}7{CJn{{Mj{AN`}}}}{Gf{{Mj{Bf}}}}{{{Cl{ce}}}{{Mj{ce}}}A@bBKj}{{{f{CKn}}}{{Mj{CKn}}}}{CObc{}}{{{Gd{ce}}}{{Mj{{Bj{c}}e}}}{}{BKjADd}}{c{{Mj{c}}}{}}{{{A@n{c}}}{{Mj{{Bj{c}}}}}{}}{{{f{{Bj{c}}}}}{{Mj{{Bj{c}}}}}ADd}{Eh{{Mj{Bf}}}}{{{Mj{Bf}}}{{Mj{{Bj{Bh}}}}}}{COd{{Mj{ANb}}}}{{{E`{c}}}{{Mj{c}}}{COfA@b}}{{{f{ANb}}}{{Mj{ANb}}}}{cc{}}00000{COhBFl}{COjBFl}2{{{f{BDj}}}BD`}3{{{f{{Mj{BDj}}}}}BD`}{{{Mj{BDj}}}BD`}{BDjBD`}{{{f{{Bj{Ab}}}}}BD`}{{{f{BDl}}}BD`}88{{{Gd{BAb}}}BDj}9999{Jb{{Cf{BKh}}}}{JbBKh}00{{c{Cf{I`}}}COl{}}{{{COn{Gl}}{COn{Bh}}{Cf{I`}}}D@`}{{{COn{Gl}}{COn{Bh}}{Cf{I`}}}D@b}{c{{ALn{{l{Bd}}}}}{{Hl{}{{Ch{d}}}}}}{c{{ALn{{l{e}}}}}{{Hl{}{{Ch{}}}}}An}{cBKh{{Hl{}{{Ch{BKh}}}}}}{e{{Mj{{Bj{c}}}}}{}{{Hl{}{{Ch{c}}}}}}{eBD`{{B@n{Of}}}{{Hl{}{{Ch{c}}}}}}{{gFn}{{D@d{Gl}}}Ib{{Hl{}{{Ch{{Cf{c}}}}}}}{{Hl{}{{Ch{{Cf{e}}}}}}}}0{e{{D@d{Gl}}}{{Hl{}{{Ch{{Cf{d}}}}}}}{{Hl{}{{Ch{{Cf{c}}}}}}}}{{Dbe}ADh{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAGb}{{D@d{Gl}}}BHl{{Hl{}{{Ch{{Cf{c}}}}}}}{{Hl{}{{Ch{{Cf{e}}}}}}}}783{{Dbe}ADh{}{{Cn{}{{Ch{c}}}}}}{{{f{Bf}}}{{Cf{BKh}}}}{c{{ALn{{l{e}}}}}{{Il{}{{Ch{}}}}}An}{e{{Mj{{Bj{c}}}}}If{{Il{}{{Ch{c}}}}}}`{c{{A`{{CJl{AFh}}n}}}{{B@n{CJn}}}}{{}{{Mj{c}}}A@b}{c{{Mj{ec}}}BKjA@b}{{Db{f{{Bj{c}}}}}ADh{}}{{Db{f{{Bj{{Cf{c}}}}}}}ADh{}}{{{f{Bf}}}{{A`{D@f}}}}{c{{ALn{{l{e}}}}}{{In{}{{Ch{}}}}}An}{c{{ALn{{l{Bd}}}}}{{In{}{{Ch{d}}}}}}{Ej{{BLd{{Mj{BLb}}}}}}{{Dbc}D@h{}}{{{Gd{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{Gd{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gj{}{{Ch{e}}}}InIfIh}}`{{DbcFn}AIh{}}{{FncAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{}CHb}{{BF`BF`cc}BF`{{B@n{BBb}}}}{{{f{D@j}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}{{B@n{Db}}}{{Hl{}{{Ch{g}}}}}}{{DbFn}AIj}{{FnAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{FnAGb}BFl}``{{BBbc{BLd{{Mj{BLb}}}}D@l}BBb{{Dl{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}`{{BBbc}BBb{{B@n{BBb}}}}{{BBbFnFn}BBb}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@nA@b}BKj}{{{f{BM`}}Fn}{{A`{J`n}}}}{{BLlBBbd}BBb}{{BLnBBbd}BBb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}6{{{f{BD`}}{f{Bf}}}{{Cf{{f{Ej}}}}}}{{{f{AIl}}Fn}{{A`{J`n}}}}{{{f{AOf}}Fn}{{A`{J`n}}}}{{{f{AIl}}Fn}J`}{{{f{AOf}}Fn}J`}{{{f{BD`}}Fn}{{Cf{{H`{{f{Db}}{f{Ej}}}}}}}}{{{f{DdBD`}}Fn}{{Cf{{H`{{f{DdDb}}{f{DdEj}}}}}}}}{CAdBBb}{{{f{BF`}}}BKh}{{{f{CIf}}}Ej}{{}Ej}{{{f{CBn}}GlCBh{Cf{{f{AMd}}}}}{{A`{CBfn}}}}00{{{f{CKl}}{f{BD`}}DA`{f{Of}}{f{Of}}}{{Cf{Of}}}}{{{f{BLb}}{f{BD`}}DA`{f{{Bj{Of}}}}}{{A`{Ofn}}}}{{{f{BD`}}{f{Bf}}}{{Cf{Of}}}}{{{f{AGb}}}{{f{{Bj{BAb}}}}}}{{{f{BMb}}}Fn}{{{f{BD`}}{f{Bf}}}{{Cf{{H`{Fn{f{Db}}{f{Ej}}}}}}}}{{{f{{Bj{Bh}}}}}{{Cf{Fn}}}}{{{f{Dd{BOl{c}}}}}{{A`{{f{{Mj{CId}}}}n}}}BJn}{{{f{BM`}}}{{Cf{{Mn{Ml}}}}}}{{{f{Dd{Mj{ce}}}}}{{Cf{{f{Ddc}}}}}A@bBKj}{{{f{Dd{Mj{ce}}}}}{{f{Ddc}}}A@bBKj}{{{f{DAb}}}{{Gd{{f{Db}}}}}}{{{f{BD`}}}{{Gd{{f{Db}}}}}}{{{f{BDj}}}{{Gd{{f{Db}}}}}}{{{f{{CLl{}{{DAd{c}}}}}}}{{Gd{{H`{{f{Bf}}c}}}}}{AGfCM`}}{{{f{BD`}}}{{Gd{{H`{{f{Bf}}}}}}}}{{{f{BDj}}}{{Gd{{H`{{f{Bf}}}}}}}}{{{f{DAb}}}{{Gd{Db}}}}{{{f{BD`}}}{{Gd{Db}}}}{{{f{BDj}}}{{Gd{Db}}}}{{{f{DAb}}}{{Gd{{f{Bf}}}}}}{{{f{BD`}}}{{Gd{{f{Bf}}}}}}{{{f{BDj}}}{{Gd{{f{Bf}}}}}}{{{f{BM`}}Fn}{{Cf{{f{Jf}}}}}}{{{f{BM`}}FnFn}{{Cf{{f{Jf}}}}}}{{{f{BMh}}}{{Cf{{BLd{{Mj{BLb}}}}}}}}{{{f{CBn}}CBfCBhKj{Cf{{f{AMd}}}}CBl}{{A`{DAfn}}}}{{{f{CC`}}}{{Mj{CCb}}}}{{{f{Ddc}}}{{A`{DAhn}}}{BMfBJnA@b}}{{{f{CNd}}{f{BD`}}}{{A`{{Mj{BD`}}n}}}}{{{f{BAl}}Fn}J`}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{BM`}}Fn}J`}{{{f{CJb}}}d}{{{f{CAl}}}d}`{{BF`e}BKf{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{{f{DAj}}{Gd{Ab}}{f{BE`}}}{{A`{{H`{Ab{Gd{Ab}}C`}}n}}}}{{BF`BBbcBE`}BKf{{Ib{{Bj{BBb}}}}}}2{{BFnBFn{f{{Bj{Gl}}}}CBhKj{Cf{AMd}}}{{A`{{Gd{{A@n{Jb}}}}n}}}}{{CBn{f{{Bj{Gl}}}}CBhKj{f{{Cf{Db}}}}ddCBl}{{H`{{Gd{{A@n{Jb}}}}{Gd{Gl}}{Gd{Gl}}}}}}{{{f{BHb}}dd}{{A`{C`n}}}}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@nA@b}BKj}21`{{{f{BM`}}}d}{{{f{BE`}}{f{Ddc}}}bADj}{{{f{BFb}}{f{Ddc}}}bADj}{{{f{BFn}}{f{Ddc}}}bADj}{{{f{CBh}}{f{Ddc}}}bADj}{{{f{CBj}}{f{Ddc}}}bADj}{{{f{CBl}}{f{Ddc}}}bADj}{{{f{CC`}}{f{Ddc}}}bADj}{{{f{CCb}}{f{Ddc}}}bADj}{{{f{CCd}}{f{Ddc}}}bADj}{{{f{CCf}}{f{Ddc}}}bADj}{{{f{BJb}}{f{Ddc}}}bADj}{{{f{CCh}}{f{Ddc}}}bADj}{{{f{CCj}}{f{Ddc}}}bADj}{{{f{CCl}}{f{Ddc}}}bADj}{{{f{CCn}}{f{Ddc}}}bADj}{{{f{CD`}}{f{Ddc}}}bADj}{{{f{CDb}}{f{Ddc}}}bADj}{{{f{CDd}}{f{Ddc}}}bADj}{{{f{CDf}}{f{Ddc}}}bADj}{{{f{CDh}}{f{Ddc}}}bADj}{{{f{CDj}}{f{Ddc}}}bADj}{{{f{CDl}}{f{Ddc}}}bADj}{{{f{CDn}}{f{Ddc}}}bADj}{{{f{CE`}}{f{Ddc}}}bADj}{{{f{CEb}}{f{Ddc}}}bADj}{{{f{CEd}}{f{Ddc}}}bADj}{{{f{CEf}}{f{Ddc}}}bADj}{{{f{CEh}}{f{Ddc}}}bADj}{{{f{CEj}}{f{Ddc}}}bADj}{{{f{CEl}}{f{Ddc}}}bADj}{{{f{CEn}}{f{Ddc}}}bADj}{{{f{CF`}}{f{Ddc}}}bADj}{{{f{CFb}}{f{Ddc}}}bADj}{{{f{CFd}}{f{Ddc}}}bADj}{{{f{CFf}}{f{Ddc}}}bADj}{{{f{BNf}}{f{Ddc}}}bADj}{{{f{BBb}}{f{Ddc}}}bADj}{{{f{CGb}}{f{Ddc}}}bADj}{{{f{C@h}}{f{Ddc}}}bADj}{{{f{CGd}}{f{Ddc}}}bADj}{{{f{CGf}}{f{Ddc}}}bADj}{{{f{CGh}}{f{Ddc}}}bADj}{{{f{CGj}}{f{Ddc}}}bADj}{{{f{CGl}}{f{Ddc}}}bADj}{{{f{CGn}}{f{Ddc}}}bADj}{{{f{BLh}}{f{Ddc}}}bADj}{{{f{CHb}}{f{Ddc}}}bADj}{{{f{CHf}}{f{Ddc}}}bADj}{{{f{CHh}}{f{Ddc}}}bADj}{{{f{CHj}}{f{Ddc}}}bADj}{{{f{CHl}}{f{Ddc}}}bADj}{{{f{CHn}}{f{Ddc}}}bADj}{{{f{CI`}}{f{Ddc}}}bADj}{{{f{CIb}}{f{Ddc}}}bADj}{{{f{BKb}}{f{Ddc}}}bADj}{{{f{CIf}}{f{Ddc}}}bADj}{{{f{{Mj{ce}}}}{f{Ddg}}}b{DAlA@b}BKjADj}{{{f{CIh}}{f{Ddc}}}bADj}{{{f{CIj}}{f{Ddc}}}bADj}{{{f{BFh}}{f{Ddc}}}bADj}{{{f{BD`}}{f{Ddc}}}bADj}{{{f{BAb}}{f{Ddc}}}bADj}{{{f{Ol}}{f{Ddc}}}bADj}{{{f{CJ`}}{f{Ddc}}}bADj}{{{f{DAn}}{f{Ab}}CD`d}{{A`{{H`{{H`{{Gd{Jb}}{Gd{Jb}}}}d}}n}}}}{{{f{DAn}}{f{Ab}}CD`d}{{A`{{H`{{ALj{Jb}}{ALj{Jb}}}}n}}}}{{BKf{Cf{Fn}}}BF`}{{BLnBBb}BBb}{{BBb{Cf{Fn}}}BBb}{{{f{BNn}}}{{A`{{l{Aj}}n}}}}{{{f{BNn}}}{{l{Aj}}}}``{{{f{{Bj{{f{{l{Aj}}}}}}}}{f{Bf}}d}{{A`{{l{Aj}}n}}}}{{{f{DB`}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}`{{{f{CKh}}}{{l{Kh}}}}`{{BKlCCl}BKl}`{{{f{AAl}}}Jb}`{{{f{{Bj{Ab}}}}Kj}{{A`{Abn}}}}{{{f{{Kf{KlKh}}}}{f{{l{Aj}}}}CJ`{G`{Gl}{{Ad{AMb}}}}{G`{AMb}{{Ad{Gl}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kh}}n}}}}{{{f{{Kf{KlKh}}}}{Cf{{f{Bf}}}}{G`{Gl}{{Ad{AMb}}}}{G`{AMb}{{Ad{Gl}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kh}}n}}}}{BBbBBb}{{{f{AMb}}}d}{{{BOb{c}}d}{{BOb{c}}}BOf}````0`{{}b}{cb{ADdBKj}}``{cBBb{{Ib{{Bj{Gl}}}}}}``{{{f{DAb}}{f{Bf}}}{{Cf{Fn}}}}{{{f{BD`}}{f{Bf}}}{{Cf{Fn}}}}{{{f{BDj}}{f{Bf}}}{{Cf{Fn}}}}{{{f{{Bj{Jb}}}}}{{`{{Cn{}{{Ch{Fn}}}}}}}}{{{f{DAh}}Bh{Cf{Fn}}d{Cf{{f{BD`}}}}FnFn{Cf{{f{CCf}}}}{Cf{Bh}}Bh{Cf{{f{CCh}}}}dd{f{Dd{Cf{Fn}}}}d}{{A`{{H`{BD`FnFn}}n}}}}{{{CNb{c}}{Cf{{DBb{Fn}}}}}{{CNb{c}}}BJn}{{{CJl{c}}{Cf{{DBb{Fn}}}}}{{CJl{c}}}BJn}``{{}Fn}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DdAC`}}}{{Cl{Cj}}}}{{BF`BF`cc}BF`{{B@n{BBb}}}}{{{f{D@j}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}{{B@n{Db}}}{{Hl{}{{Ch{g}}}}}}{{{f{DdA@d}}}{{f{DdJl}}}}`{{{f{DdBKh}}BKh}b}{{{f{DdBD`}}FnDbEj}{{A`{{Cf{Ej}}n}}}}{{BBbBBbGlEj}BBb}{{BBbBBbBBb}BBb}``{{{f{Ab}}CE`}Ab}{{BBbCE`}BBb}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BBbBBb}BBb}{{BKhBKh}BKh}{{{f{BKh}}BKh}d}{{}c{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BFl{{H`{{Gd{BAb}}{Gd{{Cl{Cj}}}}{Cf{I`}}}}}}{{{ALn{c}}}c{}}{{{Mj{ce}}}{{Cf{c}}}{}BKj}33{{{f{BBb}}}}{BKh}{{{f{BFl}}}}{BD`}{DBdBLn}{BLnBLn}{{{Mj{ce}}}{}A@bBKj}{{{Mj{ce}}}{{H`{e}}}A@bBKj}{{CC`c}{{BJj{c}}}BJn}{{BAnEj}{{A`{Mbn}}}}{BDbAb}{{{Mj{BM`}}}Ab}{{MbDb}Ab}{CIdDBf}{BFf{{Gd{c}}}{}}{{}{{Gd{Db}}}}{{{f{BKh}}}d}{{{f{C@h}}}d}{{{f{CCl}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEd}{{A`{{l{Bd}}n}}}}{{BBbccCEd}BBb{{B@n{BBb}}}}{cd{{Ib{AN`}}}}{{{f{{Bj{Bh}}}}}d}{{{f{BFn}}{Cf{{f{Bf}}}}}d}{{{f{CHb}}}d}8{{{f{BM`}}}d}{{{f{BD`}}}d}{{{f{BDj}}}d}{{{f{BOn}}}d}{BBbBBb}{{{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{AIn}}}{{A`{{l{Bd}}n}}}}27{{{f{BFn}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{BBbc}BBb{{B@n{BBb}}}}54{{{f{AJ`}}}{{A`{{l{Bd}}n}}}}6{{{f{CKd}}}{{l{Bd}}}}{{{f{CKf}}}{{l{Bd}}}}{{{f{CAh}}}{{A`{{l{Bd}}n}}}}999{{{f{BM`}}}{{l{Bd}}}}::0{{{f{A@d}}}d};{{{f{Mb}}}d}{{{f{AAl}}}d}`{{{f{Ab}}}d}{{{f{{Mj{AFh}}}}}d}{{}d}{{{f{CLn}}En}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CD`}}{f{CCl}}}{{A`{bn}}}}5{{{f{BFn}}}d}{{{f{CKd}}}{{l{Kb}}}}{{{f{CKf}}}{{l{Kb}}}}{{{f{CAh}}}{{A`{{l{Kb}}n}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{BKh}}}{{AFd{BKh}}}}{{{f{BFl}}}{{AGj{{Gd{{Cl{CMb}}}}DBhAGh}}}}{{{f{BD`}}}{{`{{Cn{}{{Ch{{H`{{f{Db}}{f{Ej}}}}}}}}}}}}{{{f{BD`}}}{{`{Ld}}}}{{{f{DdBD`}}}{{`{Ld}}}}1{{{f{BKh}}}{{AFf{BKh}}}}2{{BLlBBbd}BBb}{{BF`BF`ccBJb}BF`{{Ib{{Bj{BBb}}}}}}{{BLnBBbd}BBb}{{{f{D@j}}{f{AAj}}eiBJb}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}{{B@n{Db}}}{{Hl{}{{Ch{g}}}}}}{{{f{DBj}}{f{AAj}}{f{Bf}}{f{Bf}}eeCDj{Cf{J`}}}{{A`{AAjn}}}{{Ib{Bf}}}{{Hl{}{{Ch{c}}}}}}{BF`BKl}{{{f{DBl}}{f{Bf}}d}{{A`{{l{Aj}}n}}}}{{{f{DBl}}{f{{l{Aj}}}}d}{{A`{{l{Aj}}n}}}}{{BKld}BKl}`{BJdBBb}{DBnBBb}{{{f{CId}}}{{f{{Cf{{Gd{DC`}}}}}}}}``{{}BBb}{BF`BF`}{BLnBBb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{BBbBBb}{DCbBF`}4{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@nA@b}BKj}`{{BF`BF`cc}BF`{{B@n{BBb}}}}{{{f{D@j}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}{{B@n{Db}}}{{Hl{}{{Ch{g}}}}}}{{BKlc}BKl{{Ib{{Bj{BBb}}}}}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}<{{{f{BM`}}}Fn};9{{{f{BFl}}}Fn}{{{f{BD`}}}Fn}{{{f{BDj}}}Fn}{{BF`Jb}BF`}{{{f{BM`}}Fn}Ab}`{BBbBLn}{cBBbDCd}{DCdBBb}{BFnBBb}{DCfBBb}{CIfBBb}{{BBbc}BBb{{B@n{BBb}}}}0``{{CB`d}CB`}{{{CJl{c}}d}{{CJl{c}}}BJn}```{BBbBBb}{{{f{DBl}}}{{l{F`}}}}0{{{f{DBl}}{f{{Bj{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBl}}GlCLf}{{A`{{l{Ah}}n}}}}{{{f{DBl}}Gld}{{A`{Abn}}}}{{{f{DBl}}{f{{l{Aj}}}}d}{{A`{{l{Aj}}n}}}}4{{{f{DBl}}}{{A`{Abn}}}}{{{f{DBl}}}Ab}01{{{f{DBl}}}{{A`{{l{F`}}n}}}}{{{f{DBl}}}{{l{Ah}}}}{{{f{DBl}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBl}}GlFn}{{l{Ah}}}}{{{f{DBl}}En}{{A`{{l{Ah}}n}}}}{{{f{DBl}}Bh}Ab}7{{{f{DBl}}}{{A`{{l{Ah}}n}}}}01{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@nA@b}BKj}21``````{{{f{AMh}}{f{AMh}}}{{A`{{H`{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{H`{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Dd{Mj{ce}}}}}{{f{Ddc}}}{DChA@b}{BKjADd}}{{BF`cBKh{Cf{{Mj{CNd}}}}{Cf{{f{Bf}}}}}BF`{{Dl{AAj}{{Ad{{A`{AAjn}}}}}}IfIh}}{{DBnc}BBb{{Dl{{f{Db}}}{{Ad{{A`{Dbn}}}}}}IfIh}}{{BBbc{BLd{{Mj{BLb}}}}}BBb{{Dl{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BBbBBbc{BLd{{Mj{BLb}}}}}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BBb{f{Ddc}}{f{Dd}}}{{A`{BBbn}}}{{Af{BBb{f{Dd}}}{{Ad{{A`{BBbn}}}}}}}}{{{f{BMb}}{Cf{{f{Db}}}}}{{A`{Ofn}}}}{{{f{BMb}}c}{{A`{Ofn}}}{{AAn{{f{Ej}}}{{Ad{Ej}}}}}}{c{{BLd{{Mj{BLb}}}}}{{Dl{{f{Ej}}}{{Ad{{A`{Ejn}}}}}}IfIh}}{c{{BLd{{Mj{BLb}}}}}{{Dl{{f{{Bj{{f{Ej}}}}}}}{{Ad{{A`{Ejn}}}}}}IfIh}}{{BBbc}BBb{{Af{BBb}{{Ad{BBb}}}}}}{c{{BLd{{Mj{BLb}}}}}{{Dl{{f{Of}}}{{Ad{{A`{Ofn}}}}}}IfIh}}{{DBn{Mj{Dl}}}BBb}{c{{BLd{{Mj{BLb}}}}}{{Dl{{f{{Bj{Of}}}}}{{Ad{{A`{Ofn}}}}}}IfIh}}:{{ce{BLd{{Mj{BLb}}}}}BBb{{Dl{{f{Dd{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}{{Ib{{Bj{BBb}}}}}}{{BBbc{f{{Bj{BBb}}}}{BLd{{Mj{BLb}}}}}BBb{{Dl{{f{Dd{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIh}}{{BBbBLh{f{{Bj{BBb}}}}d{Cf{DCj}}}BBb}2{{{f{BMb}}}{{A`{Ofn}}}}{{CC`c}CC`{{Dl{CCb}{{Ad{CCb}}}}}}1111{CIfCIf}{{{Cf{{f{{Bj{Fn}}}}}}{f{BDj}}{Cf{{f{{Bj{Ab}}}}}}{Cf{{f{DCl}}}}}AAj}{{{Cf{{f{{Bj{Db}}}}}}{f{BD`}}{Cf{{f{{Bj{Ab}}}}}}d}{{Cf{{Gd{Fn}}}}}}{{{f{Bf}}}BBb}{BLlBBb}{BF`BF`}{BLnBBb}{{{f{AJb}}}{{Cf{c}}}{}}{BBbBBb}{{{f{DCn}}}Mb}{{{f{BM`}}}{{A`{Mbn}}}}``{{{f{{Bj{Bh}}}}{f{Dd{Gd{Bh}}}}}{{A`{{f{{Bj{Bh}}}}n}}}}865{{{f{AJb}}}{{Cf{Md}}}}4{{{f{BM`}}}{{Cf{Md}}}}:987{{{f{AJd}}}{{Cf{c}}}{}}61{{{f{DD`}}}Mb}5``{{{CMl{c}}{Cf{CJn}}}{{CMl{c}}}BJn}{{{f{DdBD`}}BD`}b}{{{f{Ej}}{f{Ej}}}{{A`{Ejn}}}}{{{f{DdBD`}}{f{BD`}}}b}```{{{f{CKh}}}{{l{Kh}}}}`{{{f{CAh}}}{{A`{{l{Kb}}n}}}}1`{{{f{Bf}}}BBb}{BLlBBb}{BF`BF`}{BLnBBb}{{{f{AJb}}}{{Cf{c}}}{}}{BBbBBb}{{{f{AJb}}}{{Cf{{H`{cc}}}}}{}}```{{{f{DCn}}}Mb}{{{f{BM`}}}{{A`{Mbn}}}}``{{{f{DB`}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}`=```6{{{f{CKd}}}{{l{Nn}}}}21`{{{f{BFn}}}Gl}{{{f{BFn}}}d}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFnGl}BFn}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BM`}}}Fn}{{{f{CJb}}}{{Cf{Fn}}}}{{{f{CAl}}}{{Cf{Fn}}}}{{{f{CB`}}}{{Cf{Fn}}}}`````{{{BOb{c}}Fn}{{BOb{c}}}BOf}`{BLlBBb}{BLnBBb}{{{f{AHj}}}{{A`{Fnn}}}}{BBbBBb}{{{f{BM`}}}{{A`{Fnn}}}}{{{f{BM`}}}{{f{Db}}}}{BBbDBn}````33`{{{f{DB`}}}{{l{Kb}}}}{{{f{CKf}}}{{l{Kb}}}}{{{f{CAh}}}{{A`{{l{Kb}}n}}}}{{{f{CKh}}}{{l{Kh}}}}{{{f{BFn}}}Gl}`{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{CM`A@b}BKj}{{{f{CD`}}}d}{BFn}{BBb}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFn}}}d}{{DDbFn}{{Cf{Fn}}}}{{BBbc}BBb{{B@n{BBb}}}}0{{{f{BMb}}}{{A`{Ofn}}}}{{}c{}}{cCMhBMf}{cCMjBOf}2{{Dbc}DDd{}}{c{{ALn{c}}}{}}{BF`BKl}{c{{BJj{c}}}BJn}{cCAl{{Ib{AN`}}}}{cCB`{{Ib{AN`}}}}{c{{BOb{c}}}BOf}{{{f{{Bj{Of}}}}}BMb}{c{{CMl{c}}}BJn}{c{{BMd{c}}}BMf}{c{{CMn{c}}}BOf}{{}CKj}{c{{BOh{c}}}BOf}{GlBFn}{c{{CN`{c}}}BOf}{c{{CNb{c}}}BJn}{{BFnBFnBFn}CBn}{c{{CJl{c}}}BJn}{{DDf{Mj{CId}}{Mj{BDj}}{H`{FnFn}}{Cf{{Gd{Fn}}}}{Cf{{Mj{BJl}}}}{Cf{DCl}}Fnd{Cf{{Gd{Ab}}}}{Cf{{H`{Db{Mj{Bf}}}}}}CEl}{{A`{BOnn}}}}{c{{BOl{c}}}BJn}{c{{C@`{c}}}{BOfBOf}}{CClBJb}{c{{BLd{c}}}{}}{{BBbBBbBBb}CH`}{{}CHd}{BBbBKb}{{Db{Gd{Of}}{BLd{{Mj{BLb}}}}c}C@lBMh}{c{{Mj{c}}}{}}{{AGb{Gd{{Cl{Cj}}}}{Cf{I`}}}BFl}{{EjJ`}Mb}{{}BD`}{{DbAGbd}BAb}{e{{Mj{c}}}{}{{AAn{{f{{CLh{c}}}}}{{Ad{c}}}}}}{AGbBFl}{{{f{AJf}}FnFn}{{l{c}}}Dj}{{{f{BM`}}FnFn}Ab}{{{f{Bf}}}CCf}{{ce}{{Mj{ce}}}{}BKj}{{{f{BD`}}FnDbEj}{{A`{BD`n}}}}{{GlDb}{{A`{Abn}}}}{DbCCf}{{AGbFn}BFl}{{{Mj{{Gd{CJn}}}}}CAl}{{{Mj{{Gd{CJn}}}}}CB`}{BhCCf}{{}{{Mj{{BNl{c}}}}}{}}{c{{Mj{{BNl{e}}c}}}BKj{}}{Fn{{Mj{{Bj{{BNl{c}}}}}}}{}}{{Fnc}{{Mj{{Bj{{BNl{e}}}}c}}}BKj{}}3210{{{f{DdDDh}}}Cf}{{{f{DdDAf}}}Cf}{{{f{BKn}}DDj}{{A`{{Cf{AAj}}n}}}}{{{f{DdC@d}}Fn}{{A`{{Cf{{Gd{AAj}}}}n}}}}{{{f{DdBO`}}Fn}{{A`{{Cf{{Gd{AAj}}}}n}}}}{{{f{DdBOn}}Fn}{{A`{{Cf{{Gd{AAj}}}}n}}}}{{{f{BBb}}{f{Dd{BGd{{f{BBb}}}}}}}b}{{BBb{f{Dd{BGd{BBb}}}}}b}{BBbBBb}0{BKhBKh}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}0{GlBBb}`{{}AAl}{{}A@d}`{{{f{BM`}}}Fn}{BF`BF`}7`````{{{f{Dd{BOl{c}}}}}{{A`{Fnn}}}BJn}````{{{f{AIb}}}{{A`{{Gn{Gl}}n}}}}{{BKlc}BKl{{Ib{{Bj{BBb}}}}}}``{{BF`{f{Dd{BIl{BIj}}}}{f{Dd{BIl{BIn}}}}}{{A`{BIhn}}}}`{{BBbc}BBb{{B@n{BBb}}}}{{{f{CKd}}}{{l{N`}}}}{{{f{CKf}}}{{l{N`}}}}{{{f{CAh}}}{{A`{{l{N`}}n}}}}{{{f{CAh}}}{{A`{{l{Kb}}n}}}}{{CFlc}BBb{{B@n{BBb}}}}{{CG`c}BBb{{B@n{BBb}}}}`{{BBbe}BBb{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{BBbe{Cf{{H`{eEn}}}}CHn}BBb{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{{f{DdBD`}}{f{BD`}}}{{A`{bn}}}}```{{{f{Bf}}}BFn}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{KdKb}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{LfKh}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}Kj}{{Kf{KlKh}}}}``{{{f{BFn}}{f{BFn}}}{{Cf{B@d}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}{{Cf{B@d}}}{D@nA@b}BKj}`{{{f{CJb}}}{{f{{Bj{CJn}}}}}}{{{f{CAl}}}{{f{{Bj{CJn}}}}}}{{{f{CB`}}}{{f{{Bj{CJn}}}}}}``{{}BBb}{c{{DDl{{Mj{c}}}}}{}}{{ce}{{DDl{{Mj{ce}}}}}{}BKj}````{{BBbc}BBb{{B@n{BBb}}}}`{{DBn{f{Bf}}}BBb}0{{{f{AAj}}{f{AAj}}d}{{A`{{H`{{AAf{{Gd{Jb}}{Gd{A@d}}}}{AAf{{Gd{AAl}}{Gd{A@d}}}}}}n}}}}`{{{f{DCn}}}Mb}{BBbBBb}{BF`{{A`{{H`{AAjAAj}}n}}}}`{{{f{BFl}}}BFl}{{{f{{Mj{c}}}}{f{DdDDn}}}b{ALfA@b}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}dA@bBKj}{{{f{Bf}}BBbOl}BBb}{{BF`BBbOl}BF`}{{{f{AJd}}MdOl}{{A`{{Cf{c}}n}}}{}}{{BBbBBbOl}BBb}{{{f{DD`}}MdOl}{{A`{Mbn}}}}{{{f{BM`}}MdOl}{{A`{Mbn}}}}{{{f{CKd}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}{{{f{Dd}}c}{{A`{{f{Dde}}BCj}}}CMf{}}````{{{f{DE`}}CEh{Cf{Jl}}}Ab}{{BBbCEh{Cf{Jl}}}BBb}{{{f{Dd{Mj{AFh}}}}{f{Dd{Bj{Bh}}}}}{{A`{FnBCj}}}}{{{f{Dd{Mj{AFh}}}}DEb}{{A`{bBCj}}}}{{{BOl{c}}CEl}{{BOl{c}}}BJn}{{{f{Dd{Mj{AFh}}}}{f{Dd{Gd{Bh}}}}}{{A`{FnBCj}}}}{{{f{Dd{Mj{AFh}}}}{f{DdEh}}}{{A`{FnBCj}}}}{{{f{Dd}}}{{A`{cBCj}}}DEd}{{{f{Dd{Mj{AFh}}}}{f{Dd{Bj{DEf}}}}}{{A`{FnBCj}}}}{{{f{CJb}}}d}{{{f{BM`}}}Ab}{{{f{CAl}}}d}{{{f{CB`}}}d}````{{ce}BBb{{Dl{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IfIhADd}{{Ib{{Bj{BBb}}}}}}{{{f{AJh}}}Ab}0{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DdBKh}}BKh}b}{{{f{DdBD`}}{f{Bf}}}{{Cf{Ej}}}}{{{f{{Bj{Bh}}}}}{{A`{{f{{Bj{Bh}}}}n}}}}{{{f{DdBM`}}Db}b}{{BF`ei}BF`{{Ib{Bf}}}{{Hl{}{{Ch{c}}}}}{{Ib{Bf}}}{{Hl{}{{Ch{g}}}}}}{{{f{DdBD`}}{f{Bf}}Db}{{Cf{Db}}}}{{BJde}BBb{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}}{{cBBb}BBb{{B@n{BBb}}}}{{{f{Ab}}{f{{l{F`}}}}}{{A`{{l{Ah}}n}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BNn}}{f{Bf}}{f{Bf}}}{{A`{{l{Aj}}n}}}}{{BBbcc}BBb{{B@n{BBb}}}}1{{{f{BMb}}{Cf{Ej}}}{{A`{Ofn}}}}{{{f{BNn}}{f{Bf}}{f{Bf}}Fn}{{A`{{l{Aj}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ej}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ej}}}{{A`{Abn}}}}{{BBbcc{Cf{c}}{Cf{Ej}}}BBb{{B@n{BBb}}}}{{{f{{Kf{KlKh}}}}{Cf{{f{Bf}}}}{f{{l{Aj}}}}CJ`}{{A`{{Kf{KlKh}}n}}}}{{{f{DdBD`}}Fn}b}{{BBb{f{{Bj{Gl}}}}CI`}BBb}{{{f{AN`}}}CJn}`{{{f{AJj}}}AJj}{{{f{BM`}}}Ab}{BLlBBb}{BF`BF`}{BLnBBb}{BBbBBb}`{{BKlc}BKl{{Ib{{Bj{BBb}}}}}}{{{f{DAj}}{Gd{Ab}}{f{BFb}}}{{A`{{H`{Ab{Gd{Ab}}C`}}n}}}}{{BF`BBbcBFb}BKf{{Ib{{Bj{BBb}}}}}}{{BBbBFb}BBb}{{{f{AJl}}{f{Dl}}On}{{A`{Abn}}}}{{BBb{Mj{Dl}}{BLd{{Mj{BLb}}}}On}BBb}{{{f{BM`}}{f{Dl}}On}{{A`{Abn}}}}{{BBbFnc}BBb{{Af{{f{Dd{l{Ed}}}}}{{Ad{{Cf{Md}}}}}}IfIhDn}}{{{f{DEh}}On}{{A`{Abn}}}}{{BBbOn}BBb}{{{f{DEh}}{f{Ab}}CBd}{{A`{Abn}}}}{{BBbBBbCBd}BBb}32102032103{{BBbOlMdOn}BBb}2{{BBbBBbOlMdCBd}BBb}543254325432{{{f{DEj}}{f{{l{Aj}}}}{Cf{{f{AMd}}}}}{{A`{DEjn}}}}{{{f{CAf}}Jb}{{A`{Abn}}}}{{BBbJb}BBb}{{{f{CBn}}Gl{Cf{{f{AMd}}}}}{{A`{Gln}}}}0{{{f{CAf}}Ob}{{A`{Abn}}}}{{BBbOb}BBb}2``{{{f{CJb}}}{{Cf{{f{DCl}}}}}}{{{f{CAl}}}{{Cf{{f{DCl}}}}}}{{{f{CB`}}}{{Cf{{f{DCl}}}}}}``````{{{f{DBl}}{l{Ah}}}{{l{Ah}}}}{{}{{BLd{{Mj{BLb}}}}}}{{BBbBBbdd{Cf{Jl}}}BBb}0`{{{f{BKn}}DDj}{{A`{AAjn}}}}{{cCAn}{{A`{BF`n}}}{{Ib{AN`}}}}{{{Mj{{Gd{CJn}}}}CAn}{{A`{BF`n}}}}{{cCBb}{{A`{BF`n}}}{{Ib{AN`}}}}{{{Mj{{Gd{CJn}}}}CBb}{{A`{BF`n}}}}{{DEl{f{{Bj{Jb}}}}e}{{A`{Abn}}}Dn{{Hl{}{{Ch{{Cf{c}}}}}}}}{{{f{AJn}}c{Cf{e}}}{{A`{AJnn}}}{{Hl{}{{Ch{Jb}}}}}{}}{{{f{AJn}}ci}{{A`{AJnn}}}{{Hl{}{{Ch{Jb}}}}}{}{}{{Dl{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{Dd{CMl{c}}}}}{{A`{{Mj{BDj}}n}}}BJn}{{{f{Dd{BMd{c}}}}}{{A`{BD`n}}}BMf}{{{f{BOn}}}{{f{{Mj{BDj}}}}}}{{{f{Dd{BOl{c}}}}}{{A`{{Mj{BDj}}n}}}BJn}{{{f{BKn}}{Cf{Fn}}}{{A`{{Mj{BD`}}n}}}}{{{f{CId}}}{{f{DEn}}}}`````{{}BKh}`{{{f{DdBF`}}{f{Dd{BIl{BIj}}}}{f{Dd{BIl{BIn}}}}}{{A`{{Mj{BD`}}n}}}}`{{{f{DB`}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}`{{{f{CKh}}}{{l{Kh}}}}`{{{f{Dd{Mj{AFh}}}}DF`}{{A`{JlBCj}}}}{{BF`c}BF`{{Ib{{Bj{BBb}}}}}}{{{f{BD`}}c}{{A`{BD`n}}}Hl}1````{{{f{AJn}}{f{{l{Bd}}}}{Cf{c}}}{{A`{AJnn}}}{}}{{{f{DdBKh}}BKhd}b}{{{f{BF`}}{BIl{BIj}}{BIl{BIn}}}b}{{{f{DdBD`}}{f{Bf}}Ej}{{Cf{Ej}}}}{{{f{DdBD`}}FnEj}{{Cf{Ej}}}}{{{BOl{c}}d}{{BOl{c}}}BJn}{{{C@`{c}}d}{{C@`{c}}}BOf}{{{CMl{c}}d}{{CMl{c}}}BJn}{{{BMd{c}}d}{{BMd{c}}}BMf}{{{CNb{c}}d}{{CNb{c}}}BJn}4{{CMhd}CMh}{{BBbLj}BBb}{{{f{DdBFl}}{Cf{I`}}}b}{{{f{AK`}}Gl}{{l{c}}}Dj}{{{f{BM`}}Gl}Ab}{{BLlBBb}BBb}{{BF`c}BF`{{B@n{BBb}}}}{{BLnBBb}BBb}{{BBbBBb}BBb}{{{f{AKb}}Glc}{{l{e}}}{}Dj}{{BF`ce}BF`{{B@n{BBb}}}{{B@n{BBb}}}}{{BBbce}BBb{{B@n{BBb}}}{{B@n{BBb}}}}{{{f{DdBD`}}{f{Bf}}}{{Cf{Ej}}}}{{{f{DdBD`}}Fn}{{Cf{{H`{DbEj}}}}}}{{{f{BJb}}}d}{BBbBBb}{{{f{DdACb}}}b}{{{f{DdBM`}}}b}{{BBb{Cf{Jl}}}BBb}{{BF`cCCn}{{A`{bn}}}{{Ib{AN`}}}}{{BF`cCDl}{{A`{bn}}}{{Ib{AN`}}}}{{BF`cCEb}{{A`{bn}}}{{Ib{AN`}}}}{{BF`cCEn}{{A`{bn}}}{{Ib{AN`}}}}{{{f{CJj}}}{{l{F`}}}}````{{{f{BM`}}GlFn}Ab}{{BF`GlJb}BF`}{{BLnBBbBBb}BBb}?{{{f{DdBFl}}FnFn}b}0`{{{f{AKd}}FnFn}AKd}{{fFnFn}c{}}1022{{BFlFnFn}BFl}0`{{{f{AHh}}d}{{l{c}}}Dj}{{BLlEn}BBb}{{BF`cFd}BF`{{BFf{Db}}}}{{BLnEn}BBb}{{BBbEn}BBb}{{BBbeFd}BBb{{B@n{BBb}}ADd}{{Ib{{Bj{c}}}}}}{{BF`cFd}BF`{{Ib{{Bj{BBb}}}}}}{{{f{AHh}}En}{{l{c}}}Dj}{{{f{BM`}}En}{{A`{Abn}}}}{{{f{{Mj{c}}}}}{{Cf{{f{ALf}}}}}{ALfA@b}}{{{f{BNn}}{f{{l{Aj}}}}}{{l{Ah}}}}{{{f{BM`}}Gl}{{H`{AbAb}}}}{{{f{BFl}}Fn}{{H`{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BNn}}{f{{l{Aj}}}}Fn}{{A`{{l{j}}n}}}}0{{{f{{l{Aj}}}}{f{{l{Aj}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dl{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}4{{{f{{l{Aj}}}}{f{{l{Aj}}}}Fned}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dl{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{BBbBBb}`{{{f{CJj}}{f{{Bj{Bh}}}}}{{l{Bd}}}}{{{f{CJj}}{f{{l{Al}}}}}{{l{Bd}}}}`{{BLlBh}BBb}{{BF`Bh}BF`}{{BLnBh}BBb}{{{f{AKf}}Bh}{{Cf{Md}}}}{{BBbBh}BBb}{{{f{BM`}}Bh}{{Cf{Md}}}}{{{f{DFb}}Bh}Mb}{{{f{BM`}}Bh}{{A`{Mbn}}}}{{JbJb}A@d}{BBbDFd}{{{f{BNn}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Aj}}}}{f{Bf}}d}{{l{Aj}}}}{{{f{BNn}}}{{l{F`}}}}0{{{f{BNn}}}{{l{Aj}}}}{{{f{BNn}}{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}4`{{{f{CAh}}{f{Bf}}}{{A`{Abn}}}}`{{BBbEj}BBb}`{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}707070{{{f{BNn}}{f{{l{Aj}}}}}{{l{Aj}}}}10{{{f{{Mj{ce}}}}}FnA@bBKj}{BBbBJd}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{BKbBKb}}{{BKhBKh}BKh}{{{f{DdBKh}}BKh}b}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{BKlc}BKl{{B@n{Db}}}}{{DBn{f{Bf}}}BBb}{{{f{BJb}}}{{f{Db}}}}`1{{{f{Bf}}}BBb}{BLlBBb}{BF`BF`}{BLnBBb}{{{f{AJb}}}{{Cf{c}}}{}}{BBbBBb}{{{f{DCn}}}Mb}{{{f{BM`}}}{{A`{Mbn}}}}{{}{{BLd{{Mj{BLb}}}}}}>{{{f{Dd}}g}{{A`{eBCj}}}{}{}{{AAn{{f{Ddc}}}{{Ad{e}}}}}}{{BF`Jb}BF`}{{BKf{Cf{Fn}}}BF`}{{BLnBBb}BBb}{{BBb{Cf{Fn}}}BBb}{{{f{AKh}}{f{c}}}{{A`{AKhn}}}A@b}{{{f{BM`}}{f{{l{F`}}}}}{{A`{Abn}}}}{{{f{DFf}}{f{{Bj{A@d}}}}Lj}DFf}{{{f{DFf}}{f{{Bj{A@d}}}}}DFf}{{{f{BM`}}{f{{Bj{Jb}}}}}{{A`{Abn}}}}{{{f{BM`}}{f{{Bj{Jb}}}}}Ab}{{{f{AKj}}{f{c}}}AKjA@b}{{{f{BM`}}{f{{l{F`}}}}}Ab}{{{f{DdBFl}}}{{Cf{I`}}}}{{BBbBBbBBb}BBb}{{CFjc}CFl{{B@n{BBb}}}}{{CFnc}CG`{{B@n{BBb}}}}`{{BBbBBbBFnCBh}BBb}```{{{f{CAh}}Kj}{{A`{{l{Kh}}n}}}}{BF`{{A`{DFhn}}}}{CFh{{A`{DFhn}}}}1{{{f{CIf}}}{{Cf{J`}}}}{{BLnFn}BBb}{{{f{BD`}}AOn}BDj}{{{f{BFl}}}{{Cl{Cj}}}}{{{f{AKl}}}{{Gd{{f{{Bj{Bh}}}}}}}}{{{f{BF`}}d}{{A`{Ehn}}}}{{{f{DFj}}{Cf{{f{Bf}}}}d}{{A`{AAjn}}}}{{{f{BJh}}{Cf{{f{Bf}}}}d}{{A`{AAjn}}}}{{{f{BBb}}{f{BD`}}DA`}{{A`{Ofn}}}}{{{f{BNn}}{f{{l{F`}}}}d}{{A`{{l{Kh}}n}}}}{BLlBBb}{{{f{BNn}}}{{l{Aj}}}}{DBnBBb}{{{f{AAl}}}{{Cf{Jb}}}}{fc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBbBBb}{{{f{BMb}}}{{A`{Ofn}}}}{{{f{CAh}}{f{Bf}}}{{A`{Abn}}}}{fEh}000000000000{{{f{DdBD`}}{f{BD`}}}{{A`{dn}}}}`887{{{f{CDl}}c}{{BOh{c}}}BOf}{{{f{CEn}}c}{{C@`{c}}}BOf}{{{f{DdBKh}}BKh}b}``{{BF`JbcFd}BF`{{Ib{{Bj{BBb}}}}}}{{{f{BFl}}{f{BFl}}}I`}{{{f{BFl}}f}I`}10{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}g{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{f{DFl}}{Cf{{f{AMd}}}}{f{{l{Aj}}}}}{{A`{DFln}}}}{{{f{BFn}}Gl{Cf{{f{AMd}}}}ceg}{{A`{Gln}}}{{Dl{Gl}{{Ad{Gl}}}}}{{Dl{Gl}{{Ad{AMb}}}}}{{Dl{AMb}{{Ad{Gl}}}}}}{{{f{BFn}}Gl{Cf{{f{AMd}}}}}{{A`{Gln}}}}{{{f{CBn}}Gl{Cf{{f{AMd}}}}}{{A`{Gln}}}}10`10{g{{A`{AMle}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BFlc}}}{}{{Hl{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{e{{A`{BFlc}}}{}{{Hl{}{{Ch{{A`{bc}}}}}}}}2{{AGbg}{{A`{AMne}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}0{{AGbe}{{A`{BFlc}}}{}{{Hl{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{{AGbe}{{A`{BFlc}}}{}{{Hl{}{{Ch{{A`{bc}}}}}}}}{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{ADlDb}{{A`{{l{c}}e}}}Dj{}}{{ADn{f{{l{c}}}}}{{A`{{l{c}}e}}}Dj{}}10{{ADnDbEj}{{A`{{l{c}}e}}}Dj{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{J`{{A`{CIfn}}}}{{{Mj{{Bj{c}}e}}}{{A`{{Mj{{A@n{c}}e}}}}}{}BKj}222222222222222{DBf{{A`{CIdBCb}}}}{{{f{BD`}}{f{Bf}}}{{A`{{f{Ej}}n}}}}{{{f{BD`}}Fn}{{A`{{H`{{f{Db}}{f{Ej}}}}n}}}}{{{f{BD`}}{f{Bf}}}{{A`{Ofn}}}}{{{f{BD`}}{f{Bf}}}{{A`{{H`{Fn{f{Db}}{f{Ej}}}}n}}}}{{{f{DdBD`}}{f{Bf}}}{{A`{{f{DdEj}}n}}}}{{{f{DAb}}{f{Bf}}}{{A`{Fnn}}}}{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CC`{Cf{CJn}}}{{A`{{BJj{AFh}}n}}}}{{{f{BMb}}c}{{A`{Ofn}}}{{AAn{{f{Ej}}}{{Ad{{A`{Ejn}}}}}}}}{{{f{BMb}}c}{{A`{Ofn}}}{{AAn{{f{{Bj{{f{Ej}}}}}}}{{Ad{{A`{Ejn}}}}}}}}{{BBbc}{{A`{BBbn}}}{{Af{BBb}{{Ad{{A`{BBbn}}}}}}}}{{{f{BMb}}c}{{A`{Ofn}}}{{AAn{{f{Of}}}{{Ad{{A`{Ofn}}}}}}}}{{DDbFn}{{A`{Fnn}}}}{Bh{{A`{CFbn}}}}{Jb{{A`{CFdn}}}}{Ob{{A`{CFfn}}}}{c{{A`{{Mj{c}}DFn}}}{}}{{AGb{Gd{{Cl{Cj}}}}{Cf{I`}}}{{A`{BFln}}}}{{ce}{{A`{{Mj{ce}}DFn}}}{}BKj}{{}{{A`{{Mj{{BNl{c}}}}DFn}}}{}}{c{{A`{{Mj{{BNl{e}}c}}DFn}}}BKj{}}10`{c{{A`{{DDl{{Mj{c}}}}DFn}}}{}}{{ce}{{A`{{DDl{{Mj{ce}}}}DFn}}}{}BKj}{{{f{BDj}}{f{{Bj{Fn}}}}}{{A`{BDjn}}}}{{{f{BMh}}{f{Dd{Gd{Bh}}}}}{{A`{bn}}}}{{{f{C@j}}{f{Dd{Gd{Bh}}}}}{{A`{bn}}}}{{{f{BLb}}{f{Dd{Gd{Bh}}}}}{{A`{bn}}}}{f{{A`{GfBBh}}}}000000000000{{{Mj{ce}}}{{A`{c{Mj{ce}}}}}{}BKj}{fAAh}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bf}}}}`{{BKhBKh}BKh}{{{f{AHj}}}{{A`{AHjn}}}}{BLlBBb}{{BF`{Cf{{Gd{Eh}}}}BDf}BF`}{BLnBBb}{BBbBBb}{{{f{BM`}}}{{A`{Abn}}}}{{BF`{Cf{e}}BDf}BF`{{B@n{BKb}}ADd}{{Ib{{Bj{c}}}}}}5{{BF`{Cf{{Gd{Db}}}}BDf}BF`}431{{BF`e}BF`{{B@n{BKb}}ADd}{{Ib{{Bj{c}}}}}}{{{Mj{{AFn{c}}}}}{{A`{cb}}}If}{{{Mj{ce}}}cADdBKj}{{{f{DdMb}}J`}b}{{{f{DdCC`}}{f{DG`}}}b}8{{{f{DGb}}c{f{Bf}}BFn}{{A`{AAjn}}}{{BFf{Db}}}}0{{{BOl{c}}d}{{BOl{c}}}BJn}```{{BKlCD`}BKl}`{{{f{BFl}}}{{Cf{{f{I`}}}}}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}cADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{Mb}}}{{f{J`}}}}{{{f{CLn}}ddDbd}{{A`{AAjn}}}}{{BBbdd{f{Bf}}d}BBb}``3{{{f{BFl}}}{{f{{Bj{{Cl{Cj}}}}}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{BFl}}}DBh}{{BLlBh}BBb}{{BF`Bh}BF`}{{BLnBh}BBb}{{{f{AKf}}Bh}{{Cf{Md}}}}{{BBbBh}BBb}{{{f{BM`}}Bh}{{Cf{Md}}}}{{{f{DFb}}Bh}Mb}{{{f{BM`}}Bh}{{A`{Mbn}}}}``{{{f{DGd}}A@h{f{Dd{Gd{Jl}}}}}{{A`{bn}}}}{{{f{DGd}}A@h{f{Dd{Bj{Jl}}}}}{{A`{bn}}}}`{{{f{{Mj{{AFn{c}}}}}}g}{{A`{eb}}}If{}{{AAn{{f{c}}}{{Ad{e}}}}}}{{}c{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mj{ce}}}}}FnA@bBKj}{{{f{CKd}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}10{{{f{CBl}}}{{Cf{Jb}}}}{{{f{BFn}}}Gl}`{{{f{BFn}}}d}`{cCFj{{B@n{BBb}}}}{{CFlc}CFn{{B@n{BBb}}}}{{CG`c}CFn{{B@n{BBb}}}}```{{BKlBF`}BKl}{{CH`BBb}CH`}{{CB`{Cf{{DBb{Fn}}}}}CB`}{{{BOb{c}}{DBb{Fn}}}{{BOb{c}}}BOf}{{{CNb{c}}{DBb{Fn}}}{{CNb{c}}}BJn}{{CAld}CAl}{Fnc{}}0{FnBD`}{{{CJl{c}}{Cf{{DBb{Fn}}}}}{{CJl{c}}}BJn}{{CC`Fn}CC`}{{CAl{Cf{CJd}}}CAl}{{CB`{Cf{CJd}}}CB`}{{BF`d}BF`}{{BJbCCj}BJb}{{BF`BBb}BF`}{{{f{DdBD`}}DbEj}{{Cf{Ej}}}}{{BF`c}BF`{{Ib{{Bj{BBb}}}}}}{{{CMl{c}}{Cf{{Gd{Eh}}}}}{{CMl{c}}}BJn}{{{BMd{c}}{Cf{{Gd{Eh}}}}}{{BMd{c}}}BMf}{{{BOl{c}}{Cf{{Gd{Eh}}}}}{{BOl{c}}}BJn}{{CC`{Cf{{Mj{{Bj{Db}}}}}}}CC`}`4{{CAl{Cf{Db}}}CAl}{{CCb{Cf{c}}}CCb{{B@n{CCf}}}}{{{CMn{c}}AOn}{{CMn{c}}}{}}{{{BOh{c}}AOn}{{BOh{c}}}BOf}{{{CMn{c}}{Cf{CDn}}}{{CMn{c}}}{}}{{CKj{Cf{CDn}}}CKj}{{{BOh{c}}{Cf{CDn}}}{{BOh{c}}}BOf}{{{C@`{c}}CF`}{{C@`{c}}}BOf}{{BF`c}BF`{{Ib{{Bj{BF`}}}}}}{{{C@`{c}}{Cf{Fn}}}{{C@`{c}}}BOf}{{{BOb{c}}{Cf{Eh}}}{{BOb{c}}}BOf}0{{CH`BBb}CH`}{{CHdBBb}CHd}{{CAld}CAl}{{CCbd}CCb}{{{f{BMb}}Ej}{{A`{Ofn}}}}{{CAl{Cf{{Mj{BD`}}}}}CAl}{{CC`{Cf{{Mj{{Gd{Ej}}}}}}}CC`}{{CAlCCd}CAl}{{CCbCCd}CCb}{{CAlBh}CAl}{{CCbBh}CCb}{{CKjCJn}CKj}{{BJd{Gd{BBb}}}{{A`{BBbn}}}}{{{BOb{c}}{Cf{Fn}}}{{BOb{c}}}BOf}{{{BOb{c}}{Cf{d}}}{{BOb{c}}}BOf}{{CHdBBbBBbBBb}CHd}=={{CC`d}CC`}{{{CMl{c}}{Cf{{Gd{Ab}}}}}{{CMl{c}}}BJn}{{{BOl{c}}{Cf{{Gd{Ab}}}}}{{BOl{c}}}BJn}{{CH`BBbBBbBBb}CH`}4{{CH`BBb}CH`}{{CHdBBb}CHd}{{CAld}CAl}{{CB`d}CB`}{{{CNb{c}}d}{{CNb{c}}}BJn}{{{CJl{c}}d}{{CJl{c}}}BJn}9{{{CMl{c}}{Cf{{H`{Db{Mj{Bf}}}}}}}{{CMl{c}}}BJn}{{{BOl{c}}{Cf{{H`{Db{Mj{Bf}}}}}}}{{BOl{c}}}BJn}{{CAl{Cf{Db}}}CAl}{{CB`{Cf{Db}}}CB`}{{CAl{Cf{Fn}}}CAl}{{CB`{Cf{{DBb{Fn}}}}}CB`}{{CC`{Cf{Fn}}}CC`}{{{CN`{c}}DGf}{{CN`{c}}}BOf}{{{CNb{c}}DGf}{{CNb{c}}}BJn}{{{BOb{c}}Eh}{{BOb{c}}}BOf}={{CC`d}CC`}{{BAb{DGh{DbDb}}}BAb}{{CH`BBb}CH`}{{CHdBBb}CHd}010{{CAld}CAl}{{CCbd}CCb}3{{CJbc}CJb{{B@n{{Cf{Fn}}}}}}{{CAlc}CAl{{B@n{{Cf{Fn}}}}}}={{CB`c}CB`{{B@n{{Cf{Fn}}}}}}{{CB`{Cf{Fn}}}CB`}{{{CMl{c}}{Cf{Fn}}}{{CMl{c}}}BJn}{{{BMd{c}}{Cf{Fn}}}{{BMd{c}}}BMf}{{{CJl{c}}{Cf{Fn}}}{{CJl{c}}}BJn}{{CC`{Cf{Fn}}}CC`}10:{{BF`d}BF`}?{{CAl{Cf{CCh}}}CAl}{{CCb{Cf{CCh}}}CCb}{{BF`BKh}BF`}{{CC`CCb}CC`}{{{CJl{c}}{Cf{e}}}{{CJl{c}}}BJn{{B@n{CJn}}}}{{CC`{Cf{c}}}CC`{{B@n{CJn}}}}{{CJb{Mj{{Gd{CJn}}}}}CJb}{{CAl{Mj{{Gd{CJn}}}}}CAl}{{CB`{Mj{{Gd{CJn}}}}}CB`}{{{CJl{c}}{Cf{{Mj{BJl}}}}}{{CJl{c}}}BJn}{{{BOl{c}}{Cf{{Mj{BJl}}}}}{{BOl{c}}}BJn};{{{CMl{c}}{Cf{{Gd{Fn}}}}}{{CMl{c}}}BJn}{{{BMd{c}}{Cf{{Gd{Fn}}}}}{{BMd{c}}}BMf}{{{CNb{c}}{Cf{{Gd{Db}}}}}{{CNb{c}}}BJn}{{{CJl{c}}{Cf{{Mj{{Bj{Db}}}}}}}{{CJl{c}}}BJn}{{{BOl{c}}{Cf{{Gd{Fn}}}}}{{BOl{c}}}BJn}{{CC`{Cf{{Mj{{Gd{Fn}}}}}}}CC`}{{BF`d}BF`}{{CAl{Cf{Bh}}}CAl}{{{BOb{c}}Bh}{{BOb{c}}}BOf}{{CCb{Cf{Bh}}}CCb}{{{BOb{c}}CDd}{{BOb{c}}}BOf}{{CAld}CAl}{{CC`d}CC`}{{CJbd}CJb}2{{CB`d}CB`}{{{CJl{c}}d}{{CJl{c}}}BJn}39{{{C@`{c}}{Cf{Fn}}}{{C@`{c}}}BOf}{{CJbc}CJb{{B@n{{Cf{DCl}}}}}}{{BF`c{Cf{Jb}}}BF`{{B@n{Db}}}}{{CAl{Cf{DCl}}}CAl}{{CAlc}CAl{{B@n{{Cf{DCl}}}}}}{{CB`c}CB`{{B@n{{Cf{DCl}}}}}}{{CB`{Cf{DCl}}}CB`}{{{CMl{c}}{Cf{DCl}}}{{CMl{c}}}BJn}{{{BMd{c}}{Cf{DCl}}}{{BMd{c}}}BMf}{{{CJl{c}}{Cf{{f{DdDCl}}}}}{{CJl{c}}}BJn}{{{BOl{c}}{Cf{DCl}}}{{BOl{c}}}BJn}{{CC`{Cf{DCl}}}CC`}{{{f{BMb}}}{{A`{Ofn}}}}{{CC`Fn}CC`}{{CAl{Cf{{Mj{BD`}}}}}CAl}{{CB`{Cf{{Mj{BD`}}}}}CB`}{{{CNb{c}}{Mj{BD`}}}{{CNb{c}}}BJn}{{{CJl{c}}{Mj{BD`}}}{{CJl{c}}}BJn}{{CC`{Cf{{Mj{BD`}}}}}CC`}{{CAlc}{{A`{CAln}}}{{Dl{BD`}{{Ad{{A`{BD`n}}}}}}}}4{{{CNb{c}}{f{BD`}}}{{CNb{c}}}BJn}{{{CJl{c}}{f{BD`}}}{{CJl{c}}}BJn}3{{CH`BBb}CH`}{{CHdBBb}CHd}{{CAlBh}CAl}{{{BOb{c}}Bh}{{BOb{c}}}BOf}{{CCbBh}CCb}{{BF`d}BF`}{{CAlFn}CAl}?0?{{{BOl{c}}{Cf{{H`{FnFn}}}}}{{BOl{c}}}BJn}2{{{C@`{c}}CHb}{{C@`{c}}}BOf}3{{BJb{Cf{Db}}}BJb}{{{BOb{c}}{Cf{Eh}}}{{BOb{c}}}BOf}{{CH`Kj}CH`}{{CH`{Cf{Db}}}CH`}{{CAld}CAl}{{CCbd}CCb}109{{BFl{Cf{I`}}}BFl}{{{f{BFl}}{Cf{I`}}}{{Cl{Cj}}}}{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Cf{I`}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}2{{CHdBBb}CHd}{{CH`BBb}CH`}{BF`BF`}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}10{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}210213210210{{{f{Dd{Mj{AFh}}}}{f{{Bj{Bh}}}}}{{A`{FnBCj}}}}{{{f{CDl}}AAjc}{{A`{bn}}}BOf}{{{f{CEn}}AAjc}{{A`{bn}}}BOf}{{{f{DdAAj}}{f{AN`}}e{f{g}}Fn}{{A`{bn}}}{{B@n{Db}}}{{Hl{}{{Ch{c}}}}}{DGjIfIh}}{{{f{Dd}}c}{{A`{FnBCj}}}DEd}{{{f{Dd{Mj{AFh}}}}{f{{Bj{DGl}}}}}{{A`{FnBCj}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{CKd}}}{{l{Kb}}}}{{{f{CKf}}}{{l{Kb}}}}{{{f{CAh}}}{{A`{{l{Kb}}n}}}}``{{{f{AKn}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dj}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{cc{}}{{{f{DGn}}{f{Bf}}}{{Cf{{BGd{{f{CLb}}}}}}}}{{}Fn}{{}c{}}{{{f{DH`}}}DGn}{{{Cf{{f{BJl}}}}{f{DGn}}{f{BDj}}}{{A`{dn}}}}{{{f{DdDGn}}{Cf{{f{{BDh{{f{Bf}}A@h}}}}}}}b}{{{Gd{{H`{{f{CLb}}DHb}}}}BAb{Cf{DHd}}}{{A`{{Cl{Cj}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}7``{{{f{BGb}}c}Ab{{Dl{{H`{Jb{f{{BGd{Jb}}}}}}}{{Ad{Cf}}}}IfIh}}{{{f{BGb}}c}Ab{{Dl{{H`{Jb{f{{BGd{Jb}}}}}}}{{Ad{}}}}IfIh}}{{{f{{Bj{{A@n{Jb}}}}}}c}Ab{{Dl{{A@n{Jb}}}{{Ad{Cf}}}}IfIh}}{{{f{{Bj{{A@n{Jb}}}}}}c}Ab{{Dl{{A@n{Jb}}}{{Ad{}}}}IfIh}}{{{f{{Bj{c}}}}e{Cf{{Mj{AGd}}}}}{{ALj{c}}}{BHjBHl}{{Cn{}{{Ch{{H`{JbJb}}}}}}In}}{{{f{{Bj{c}}}}{f{I`}}e{Cf{{Mj{AGd}}}}}{{ALj{c}}}{BHjBHl}{{Cn{}{{Ch{{H`{JbJb}}}}}}In}}{{{f{{l{c}}}}JbJb}{{l{c}}}Dj}{{{f{{Gd{{A@n{Jb}}}}}}{f{{Bj{{Cl{Cj}}}}}}}d}{{{f{BHn}}{f{C`}}}Ab}{{BI`BI`}BI`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DjDj{{Dl{ff}{{Ad{}}}}}{{Dl{f}{{Ad{}}}}}{{Dl{f}{{Ad{}}}}}Dj}{{{l{c}}{l{e}}gik}{{l{m}}}DjDj{{Dl{}{{Ad{}}}}}{{Dl{}{{Ad{}}}}}{{Dl{}{{Ad{}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DjDjCj{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DjDj{{AL`{CfCf}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}g}bDjDj{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Aj}}}DjDj{{Af{{f{DdEh}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DjDj{}{{Af{}{{Ad{g}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}iDb}{{l{k}}}DjDj{CjALb}{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDb}{{l{k}}}DjDjCj{{Af{ff}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DjDjCj{{Af{}{{Ad{g}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DjDj{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DjDj{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DjDj{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DjDjDj{{ALd{CfCfCf}}}Dj}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DjDjCjALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dj{}{{Hj{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDb}{{A`{{l{m}}i}}}DjDjCjALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dj{}{{Hj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DjDjALf{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DjDjDj{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dj}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dj{CjALb}ALf{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dj{}{{Hj{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dj{{ALh{Cf}}}Dj}{{{f{{l{c}}}}e}{{l{g}}}DjALhDj}{{{f{{l{c}}}}g}{{l{i}}}DjCj{{Af{f}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}{{{l{c}}g}{{l{i}}}DjCj{{Af{}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dj{CjALb}{{Af{f}{{Ad{e}}}}}{{Dj{}{{Hj{e}}}}}}0``{{{f{DHf}}}{{l{F`}}}}0{{{f{DHf}}{f{{l{Kh}}}}d}{{A`{Abn}}}}{{{f{DHf}}{f{{l{Aj}}}}d}{{A`{Abn}}}}{{{f{DHf}}}Ab}{{{f{DHf}}}{{A`{Abn}}}}1{{{f{DHf}}}{{A`{{l{F`}}n}}}}{{{f{DHf}}}{{l{Cd}}}}{{{f{DHf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DHf}}En}{{A`{{l{Cd}}n}}}}{{{f{DHf}}Bh}{{A`{Abn}}}}5{{{f{DHf}}}{{A`{{l{Ah}}n}}}}01{{{f{DHh}}}{{f{{l{Cd}}}}}}`{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{C@fBBb}BBb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}3{cc{}}{{}Fn}{{}c{}}{C@fBBb}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}4`````````````````````{{{f{DdDHj}}{f{{Bj{Bh}}}}ddd}{{A`{bn}}}}{{{f{DdDHj}}d}b}>>>>====;;;;::::9999{{{f{DHj}}}Ej}99998888{{{f{{Bj{Fn}}}}Fn{f{BD`}}{Cf{Bh}}CCdd}{{A`{{Gd{DHj}}n}}}}8888{DHj{{A`{Abn}}}}7777666655559999```````````{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjdd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{LfKh}}n}}}}`{{{f{CKd}}}{{l{Nn}}}}{{{f{CKf}}}{{l{Nn}}}}{{{f{CKh}}}{{l{Kh}}}}`{{{f{DB`}}}{{l{Nn}}}}21{{{f{CKd}}}{{l{Bd}}}}{{{f{CKf}}}{{l{Bd}}}}{{{f{CKd}}}{{l{Kb}}}}{{{f{CKf}}}{{l{Kb}}}}55`46576{{{f{DB`}}}{{l{Kb}}}}16{{{f{CKd}}}{{l{N`}}}}{{{f{CKf}}}{{l{N`}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{KdKb}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kf{LfKh}}}}{{Db{f{{Bj{{f{Bf}}}}}}{f{Bf}}Kj}{{Kf{KlKh}}}}=<{{{f{DEh}}On}{{A`{Abn}}}}{{{f{DEh}}{f{Ab}}CBd}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}}{{A`{{Kf{KdKb}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjdd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{BMl}}{Cf{{f{Bf}}}}Kjd{Cf{{f{Db}}}}{f{{l{Aj}}}}}{{A`{{Kf{KlKh}}n}}}}{{{f{DHl}}}{{f{{l{Aj}}}}}}{{{f{BMl}}{Cf{{f{Bf}}}}d}{{A`{{Kf{LfKh}}n}}}}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{DHn}}}DHn}{{f{f{Ddc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{DHn}}{f{DHn}}}d}{{f{f{c}}}d{}}00{{{f{DHn}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{DHn}}{f{Ddc}}}bADj}`{{}Fn}{{}c{}}{{{f{DHn}}{f{Bf}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5````{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{{DI`{c}}}}}{{DI`{c}}}{ADdAn}}{{f{f{Ddc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{cc{}}{{{f{Bf}}}{{Cf{DHn}}}}{{}Fn}{{}c{}}`{{{f{Dd{DI`{c}}}}{f{Bf}}}CfAn}{{{f{DdDIb}}{f{{Bj{Bh}}}}{Cf{Kj}}}{{Cf{c}}}{}}{{{f{Dd{DI`{Kb}}}}{f{{Bj{Bh}}}}{Cf{Kj}}}{{Cf{Ob}}}}{{{f{Dd{DI`{Kh}}}}{f{{Bj{Bh}}}}{Cf{Kj}}}{{Cf{Gl}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Cf{Kj}}}{{A`{{DIf{}{{DId{e}}}}n}}}{}{}}{{DHn{Cf{Kj}}}{{A`{{DI`{Kb}}n}}}}{{DHn{Cf{Kj}}}{{A`{{DI`{Kh}}n}}}}{{}{{A`{c}}}{}}{fAAh};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Dd}}}{{f{Ddc}}}{}}0{{{f{CJd}}}CJd}{{f{f{Ddc}}}b{}}{fb}{{}CJd}{Fn{{f{c}}}{}}0{Fn{{f{Ddc}}}{}}0{Fnb}0{{{f{CJd}}{f{CJd}}}d}{{{f{DIh}}{f{DIh}}}d}{{f{f{c}}}d{}}00{{{f{CJd}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}0{{{f{Bf}}}{{A`{DIh}}}}{{{f{Bf}}g}{{A`{CJdn}}}{{Ib{Bf}}}{{B@n{Eh}}}{{Hl{}{{Ch{{H`{ce}}}}}}}}{{{f{CJd}}{f{Ddc}}}bADj}{{}Fn}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAh}044{{CJdFn}CJd}`````````{{{f{{Bj{Bh}}}}}d}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMl{}{{Hl{}{{Ch{c}}}}}}0{{AGbe}AMn{}{{Hl{}{{Ch{c}}}}}}0{{{f{ANd}}}{{f{Ej}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{AOf}}{f{Ej}}}{{A`{Abn}}}}{{{f{AOf}}{f{Ej}}Fh}{{A`{Abn}}}}`{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{{AO`{Bf}}}Ej}{{{f{AOf}}}{{f{Ej}}}}`{{AOd{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{{{Gd{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{Gd{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gj{}{{Ch{e}}}}InIfIh}}{{FncAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{FnAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AOf}}Fn}{{A`{J`n}}}}{{{f{AOf}}Fn}J`}{{}Ej}{{{f{BAl}}Fn}J`}4{{BAnEj}{{A`{Mbn}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Cf{c}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{{{f{AMh}}{f{AMh}}}{{A`{{H`{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{H`{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ej}}{f{Ej}}}{{A`{Ejn}}}}`{{}c{}}0{g{{A`{AMle}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}0{{AGbg}{{A`{AMne}}}{}{}{{Hl{}{{Ch{{A`{ce}}}}}}}}0{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}Fn}cADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}{Fnc{}}0{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Cf{I`}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gj{}{{Ch{c}}}}InIfIh}}```````````{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{AOd{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kf{KlKh}}}}{f{{l{Aj}}}}CJ`{G`{Gl}{{Ad{AMb}}}}{G`{AMb}{{Ad{Gl}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kh}}n}}}}{{{f{{Kf{KlKh}}}}{Cf{{f{Bf}}}}{G`{Gl}{{Ad{AMb}}}}{G`{AMb}{{Ad{Gl}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kh}}n}}}}{{{f{{Kf{KlKh}}}}{Cf{{f{Bf}}}}{f{{l{Aj}}}}CJ`}{{A`{{Kf{KlKh}}n}}}}```{{c{Cf{I`}}}COl{}}{{{COn{Gl}}{COn{Bh}}{Cf{I`}}}D@`}{{{COn{Gl}}{COn{Bh}}{Cf{I`}}}D@b}`{CLjBBb}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{CLjKj}BBb}3{{CLjBBbKj}BBb}{{CLjDb}BBb}555{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}8{cc{}}9{{}Fn}{{}c{}};;;;;;;;;;{{CLj{Cf{Db}}BBbCJ`}BBb}{{CLjBBb}BBb}={{CLj{f{Bf}}}BBb}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6{CLjBBb}0?0`{{{f{BIb}}{f{AAj}}{f{C`}}}{{A`{Abn}}}}{{{f{BIb}}}{{A`{{f{Db}}n}}}}`{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{}DIj}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{DIj{Cf{{f{AGb}}}}}{{A`{AEjn}}}}{cc{}}{{}Fn}{{}c{}}{{{f{DIj}}}d}{{FnFn}DIj}{{{f{DdDIj}}{Cl{Cj}}}b}{{{f{DdDIj}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}7`{{{f{{l{c}}}}}FnAn}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{DIl}}}DIl}{{f{f{Ddc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{DIl}}{f{DIl}}}d}{{{f{DIl}}{f{DdHf}}}{{A`{bHh}}}}0{cc{}}{{{f{DIl}}{f{Ddc}}}bADj}{{}Fn}{{}c{}}{fc{}}{fEh}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GfBBh}}}}{fAAh}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{DIn}}}DIn}{{f{f{Ddc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{DIn}}{f{DIn}}}d}{{{f{DIn}}{f{DdHf}}}{{A`{bHh}}}}0{cc{}}{{{f{DIn}}{f{Ddc}}}bADj}{{}Fn}{{}c{}}{fc{}}{fEh}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GfBBh}}}}{fAAh}6{{LjLj}Lj}{{{f{{l{F`}}}}Jb}{{A`{bn}}}}{{{f{{ALj{Jb}}}}Jb}{{A`{bn}}}}```{{{f{Ab}}CE`}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}CfLh{{Dl{}{{Ad{}}}}Dn}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Db}Ab}0`{{fh}b}{{{f{DJ`}}}{{f{AGd}}}}{{{f{DdDJ`}}}{{Cl{Cj}}}}{{{f{DdDJ`}}}{{f{DdAGd}}}}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{DJ`}}}DJ`}{{f{f{Ddc}}}b{}}{fb}{{{f{DJ`}}}{{f{AGb}}}}{{}DJ`}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{DdDJ`}}Fn}b}{{{f{DJ`}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{}Fn}{{}c{}}{{{f{DJ`}}}Fn}{FnDJ`}{{{f{DdDJ`}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{{f{DJ`}}}{{Cf{{f{DJb}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{DG`}}}DG`}{{f{f{Ddc}}}b{}}{fb}{{}DG`}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{{BDh{EjA@h}}}}}Ej}{{{f{DG`}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{DG`}}}Fn}{{{f{DG`}}}{{Mj{BD`}}}}{{{f{Bf}}dd}Ej}{{{f{DAh}}Bh{Cf{Fn}}d{Cf{{f{BD`}}}}FnFn{Cf{{f{CCf}}}}{Cf{Bh}}Bh{Cf{{f{CCh}}}}dd{f{Dd{Cf{Fn}}}}d}{{A`{{H`{BD`FnFn}}n}}}}{{}Fn}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DAh}}{f{CC`}}}{{A`{DG`n}}}}{{}{{A`{c}}}{}}{fAAh}5{{DG`{Mj{BD`}}}DG`}````{{{f{{l{c}}}}eALld}{{Gd{Jb}}}Dj{{Cn{}{{Ch{Cf}}}}}}{{{f{{Bj{f}}}}cJbe}{{Gd{Jb}}}{{Cn{}{{Ch{Cf}}}}}{{Dl{fFnf}{{Ad{d}}}}}}``{{{f{DJd}}}{{f{Ab}}}}{{{f{CAh}}}{{A`{{l{Kb}}n}}}}{{{f{CAh}}}{{A`{{l{Nn}}n}}}}0{{{f{CAh}}}{{A`{{l{Bd}}n}}}}22112{{{f{CAh}}}{{A`{{l{N`}}n}}}}322{{{f{CAh}}{f{Bf}}}{{A`{Abn}}}}{{{f{CAh}}Kj}{{A`{{l{Kh}}n}}}}1445`{{Fn{f{Dd{Gd{d}}}}}b}```{{{f{AKd}}FnFn}AKd}0{{Fn{f{{Bj{Ab}}}}{f{DdFd}}}{{A`{{ALn{{l{F`}}}}n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{AM`n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{Jh{Gl}}n}}}}{{Db{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{Fb}}n}}}}{{Db{f{{Bj{Ab}}}}}{{A`{{l{Fb}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{Fb}}n}}}}0```````````88```{{{f{BNj}}}{{f{{l{Aj}}}}}}{{{f{BNn}}}{{A`{{l{Aj}}n}}}}{{{f{BNn}}}{{l{Aj}}}}{{{f{BNn}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{BNn}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}dd}{{A`{{l{Bd}}n}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{BNn}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}d}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}Fn}{{A`{{l{Aj}}n}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BNn}}{f{{l{Aj}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNn}}{f{Bf}}{f{Ej}}}{{A`{Abn}}}}5{{{f{BNn}}{f{{l{Aj}}}}dd}{{A`{{l{F`}}n}}}}{{{f{BNn}}{f{Bf}}}{{A`{{l{F`}}n}}}}=<{{{f{{Bj{{f{{l{Aj}}}}}}}}{f{Bf}}d}{{A`{{l{Aj}}n}}}}{{{f{BNn}}{f{Bf}}{f{Bf}}}{{A`{{l{Aj}}n}}}}0{{{f{BNn}}{f{Bf}}{f{Bf}}Fn}{{A`{{l{Aj}}n}}}}1{{{f{BNn}}{f{{l{Aj}}}}}{{l{Ah}}}}{{{f{BNn}}{f{{l{Aj}}}}Fn}{{A`{{l{j}}n}}}}0{{{f{{l{Aj}}}}{f{{l{Aj}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dl{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{{l{Aj}}}}{f{{l{Aj}}}}Fned}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dl{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{BNn}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Aj}}}}{f{Bf}}d}{{l{Aj}}}}{{{f{BNn}}}{{l{F`}}}}0{{{f{BNn}}}{{l{Aj}}}}{{{f{BNn}}{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}4{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}505050{{{f{BNn}}{f{{l{Aj}}}}}{{l{Aj}}}}10{{{f{BNn}}{f{{l{F`}}}}d}{{A`{{l{Kh}}n}}}}444````````{{eFnFn}{{DJf{Gl}}}{{Ib{Bf}}}{{Cn{}{{Ch{c}}}}}}{{eFnFn}{{Jh{Gl}}}{{Ib{{Bj{Bh}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{fh}b}0{{Db{Gd{{Cl{Cj}}}}{f{AGb}}}{{A`{Abn}}}}{{Db{Gd{{Cl{Cj}}}}{f{AGb}}{Cf{{f{{DGh{DbDb}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{B`M`}}{{AbAb}}{{{f{Ab}}c}{}{B`M`}}`{{{f{DdAb}}{f{Ab}}}{{A`{{f{DdAb}}n}}}}{{{f{Ab}}}{{Cf{Fn}}}}0{{{f{BM`}}En}{{l{F`}}}}{{{f{BM`}}}{{A`{{l{F`}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cd}}}}n}}}}{{{f{Ab}}Fn}{{f{{Cl{Cj}}}}}}{{{f{BM`}}}{{f{AGd}}}}{{{f{DdBM`}}}{{f{DdAGd}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DdBM`}}}{{f{Dd{l{c}}}}}Dj}{{{f{BM`}}}{{f{{l{c}}}}}Dj}{{{f{Ab}}}{{f{BM`}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DdBM`}}}{{A`{Fnn}}}}{{{f{DdAb}}}{{A`{Fnn}}}}{{{f{Ab}}}{{A`{{f{{l{Al}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{BM`}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{f{{f{c}}}{}}000{{{f{Dd}}}{{f{Ddc}}}{}}000{{{f{BM`}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{Ab}}{f{Ej}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Ej}}Fh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMh}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BM`}}}{{Gb{{Fl{{Cl{Cj}}}}{G`{{f{{Cl{Cj}}}}}{{Ad{Fn}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fn}}}}}}}}{{{f{BM`}}}{{f{{Gd{{Cl{Cj}}}}}}}}{{{f{DdBM`}}}{{f{Dd{Gd{{Cl{Cj}}}}}}}}{{{f{DdAb}}}{{f{Dd{Gd{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lj}}}Lj}1{{{f{BM`}}}{{Mj{BM`}}}}{{f{f{Ddc}}}b{}}0{fb}0{{{f{DdAb}}}b}{{{f{Ab}}}{{A`{{f{{Kf{KdKb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kf{KlKh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kf{L`Kn}}}}n}}}}{{}Ab}{Fn{{f{c}}}{}}000{{{f{Ab}}}f}{Fn{{f{Ddc}}}{}}000{{{f{Ab}}c}{}{B`M`}}{{AbAb}}{{Abc}{}{B`M`}}{{{f{Ab}}{f{Ab}}}}{Fnb}000{{{f{BM`}}}Ab}{{{f{BM`}}}{{f{Ej}}}}{{{f{Ab}}}{{A`{{f{{Kf{LbKh}}}}n}}}}{{{f{Lj}}{f{Lj}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BA`}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}30{{{f{Ab}}c}{}BA`}{{{f{Ab}}{f{Bf}}}}66{{f{f{c}}}d{}}00{{{f{Ab}}}Fn}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DdAb}}{f{Ab}}}{{A`{{f{DdAb}}n}}}}{{{f{Ab}}J`Fn}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{BM`}}}{{E`{Of}}}}{{{f{Ab}}AHn}{{A`{Abn}}}}{{{f{BM`}}{f{{l{Bd}}}}}{{A`{Abn}}}}{{{f{Lj}}{f{DdHf}}}{{A`{bHh}}}}{{{f{Ab}}{f{DdHf}}}{{A`{bHh}}}}0{{{f{Ab}}}Eh}{cc{}}00{{{Kf{LbKh}}}Ab}{{{Kf{LfKh}}}Ab}{{{Kf{KlKh}}}Ab}{{{Kf{KdKb}}}Ab}4{{{l{c}}}AbDj}{{Db{f{{Bj{J`}}}}d}{{A`{Abn}}}}{{Db{f{{Bj{J`}}}}{f{Ej}}d}{{A`{Abn}}}}{{Db{Cl{Cj}}}{{A`{Abn}}}}{{Db{Gd{{Cl{Cj}}}}}{{A`{Abn}}}}{{Db{Gd{{Cl{Cj}}}}{f{Ej}}}Ab}{cAb{{Hl{}{{Ch{Md}}}}}}{cAb{{Hl{}{{Ch{{f{O`}}}}}}}}{cAb{{Hl{}{{Ch{{f{Md}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{Bh}}}}}}}}{cAb{{Hl{}{{Ch{Bh}}}}}}{cAb{{Hl{}{{Ch{{f{Bh}}}}}}}}{cAb{{Hl{}{{Ch{d}}}}}}{cAb{{Hl{}{{Ch{{f{d}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{cAb{{Hl{}{{Ch{{f{Bf}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{Eh}}}}}}}}{cAb{{Hl{}{{Ch{Eh}}}}}}{cAb{{Hl{}{{Ch{{Cf{Nj}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{Md}}}}}}}}{cAb{{Hl{}{{Ch{{f{Jj}}}}}}}}{cAb{{Hl{}{{Ch{Jj}}}}}}{cAb{{Hl{}{{Ch{{Cf{Nb}}}}}}}}{cAb{{Hl{}{{Ch{Nj}}}}}}{cAb{{Hl{}{{Ch{{f{Gl}}}}}}}}{cAb{{Hl{}{{Ch{{f{Nj}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{Jb}}}}}}}}{cAb{{Hl{}{{Ch{Gl}}}}}}{cAb{{Hl{}{{Ch{{Cf{Gl}}}}}}}}{cAb{{Hl{}{{Ch{Jb}}}}}}{cAb{{Hl{}{{Ch{{f{Ob}}}}}}}}{cAb{{Hl{}{{Ch{Ob}}}}}}{cAb{{Hl{}{{Ch{{f{Jb}}}}}}}}{cAb{{Hl{}{{Ch{{Cf{Jl}}}}}}}}{cAb{{Hl{}{{Ch{Jl}}}}}}{cAb{{Hl{}{{Ch{{Cf{Ob}}}}}}}}{cAb{{Hl{}{{Ch{{f{Nb}}}}}}}}{cAb{{Hl{}{{Ch{{f{Jl}}}}}}}}{cAb{{Hl{}{{Ch{Nb}}}}}}{cAb{{Hl{}{{Ch{{Cf{O`}}}}}}}}{cAb{{Hl{}{{Ch{O`}}}}}}{cAb{{Hl{}{{Ch{{Cf{Jj}}}}}}}}{{Db{Gd{Nb}}}Ab}{{Db{Gd{Gl}}}Ab}{{Db{Gd{Jl}}}Ab}{{Db{Gd{Ob}}}Ab}{{Db{Gd{Jj}}}Ab}{{Db{Gd{Md}}}Ab}{{Db{Gd{Nj}}}Ab}{{Db{Gd{Nd}}}Ab}{{Db{Gd{Jb}}}Ab}{{Db{Gd{Bh}}}Ab}{{Db{Gd{O`}}}Ab}{{DbFn{f{Ej}}}Ab}{{{f{Ab}}FnFn}Ab}{{{f{BM`}}Fn}{{A`{J`n}}}}{{{f{Ab}}}Fn}{{{f{Ab}}}Jd}{{{f{Ab}}}Ab}{{{f{BM`}}}{{Cf{{Mn{Ml}}}}}}{{{f{BM`}}Fn}{{Cf{{f{Jf}}}}}}{{{f{BM`}}FnFn}{{Cf{{f{Jf}}}}}}{{{f{BM`}}Fn}J`}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BA`}301{{{f{Ab}}{f{Bf}}}}{{{f{BM`}}}d}{{{f{Lj}}{f{Ddc}}}bADj}{{{f{Ab}}{Cf{Fn}}}Ab}{{{f{Ab}}}{{A`{{f{{l{N`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{F`}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fn}000{{}c{}}000{AbAAj}1{BDbAb}{AbAb}={{{f{Ab}}}{{A`{{l{Bd}}n}}}}000{{{f{BM`}}}{{l{Bd}}}}0{{}d}0{{{f{Ab}}}Lj}{{{f{Ab}}}DJh}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BM`}}}Fn}{{{f{Ab}}}Fn}{{{f{BM`}}Fn}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBb}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BA`}3120{{{f{Ab}}}{{A`{{Cf{c}}n}}}M`}{{{f{BM`}}}{{A`{Mbn}}}}{{{f{BM`}}}{{Cf{Md}}}}{{{f{Ab}}}Mb}1232{{{f{Ab}}c}{}{B`M`}}{{Abc}{}{B`M`}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{BM`}}}Fn}{{{f{Ab}}}Fn}{{{f{BM`}}}{{A`{Fnn}}}}{{{f{BM`}}}{{f{Db}}}}{{Dbc}Ab{{Ib{{Bj{Nj}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Bh}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{BAh}}}}}}}}{{Dbc}Ab{{Ib{{Bj{O`}}}}}}{{Dbc}Ab{{Ib{{Bj{Nb}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Nb}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{{f{{Bj{Bh}}}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Jb}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Ob}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{f{{Bj{Bh}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Ob}}}}}}{{Dbc}Ab{{Ib{{Bj{Gl}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{{E`{Bf}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{BAh}}}}}}{{Dbc}Ab{{Ib{{Bj{{E`{Bf}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Bh}}}}}}{{Dbc}Ab{{Ib{{Bj{d}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{{f{Bf}}}}}}}}}}{{Db{f{Ab}}}Ab}{{Dbc}Ab{{Ib{{Bj{{f{Bf}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Gd{Bh}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Ab}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Eh}}}}}}{{Dbc}Ab{{Ib{{Bj{Ab}}}}}}{{Db{Od{Jb}}}Ab}{{Dbc}Ab{{Ib{{Bj{{Cf{Nj}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Nd}}}}}}{{Dbc}Ab{{Ib{{Bj{{E`{{Bj{Bh}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{{E`{{Bj{Bh}}}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{BAj}}}}}}{{Dbc}Ab{{Ib{{Bj{Jj}}}}}}{{Dbc}Ab{{Ib{{Bj{Md}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Gl}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Eh}}}}}}}}{{Dbc}Ab{{Ib{{Bj{AMf}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{BAj}}}}}}}}{{Dbc}Ab{{Ib{{Bj{AMb}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Jb}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Jl}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{O`}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Nd}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{{Gd{Bh}}}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{AMf}}}}}}}}{{Dbc}AbBDb}{{Dbc}Ab{{Ib{{Bj{{Cf{AMb}}}}}}}}{{Db{Od{Jl}}}Ab}{{Db{Od{Ob}}}Ab}{{Db{Od{Gl}}}Ab}{{Dbc}Ab{{Ib{{Bj{{Cf{Md}}}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{Jj}}}}}}}}{{Dbc}Ab{{Ib{{Bj{J`}}}}}}{{Dbc}Ab{{Ib{{Bj{{Cf{d}}}}}}}}{{Dbc}Ab{{Ib{{Bj{Jl}}}}}}{{Db{f{Ej}}}Ab}{{{f{BM`}}FnFn}Ab}{{DbFn}Ab}{{{f{DdDJh}}}Cf}{{{f{{AI`{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BA`}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Bf}}}}1{{{f{Ab}}c}{}BA`}{{{f{Ab}}}{{A`{{f{ADf}}n}}}}{{{f{BM`}}}Fn}`{{{f{Ab}}}{{Cl{Ld}}}}{{{f{Ab}}}{{A`{Mbn}}}}{{{f{BM`}}MdOl}{{A`{Mbn}}}}{{{f{BM`}}}Ab}{{Abc}{}{B`M`}}{{{f{Ab}}c}{}{B`M`}}{{{f{Ab}}{f{Ab}}}}{{{f{DdBM`}}Db}b}{{{f{DdAb}}Db}{{f{DdAb}}}}{{{f{Ab}}{f{{Bj{Gl}}}}}{{A`{Abn}}}}06{LjLj}{{{f{BM`}}{f{Dl}}On}{{A`{Abn}}}}{{{f{Ab}}Mddd{Cf{Jl}}}{{A`{Abn}}}}{{{f{Ab}}Fndd{Cf{Jl}}}{{A`{Abn}}}}{{{f{Ab}}Fn}Ab}{{{f{DdAb}}Lj}b}{{{f{BM`}}Gl}Ab}{{{f{DdBM`}}}b}{{{f{DdAb}}}b}{{{f{Ab}}{Cf{Jl}}}Ab}{{{f{DJh}}}{{H`{Fn{Cf{Fn}}}}}}{{{f{BM`}}GlFn}Ab}{{{f{Ab}}GlFn}Ab}{{{f{Ab}}En}{{A`{Abn}}}}{{{f{BM`}}En}{{A`{Abn}}}}{{{f{BM`}}Gl}{{H`{AbAb}}}}{{{f{Ab}}Gl}{{H`{AbAb}}}}{{{f{BM`}}Bh}{{Cf{Md}}}}{{{f{BM`}}Bh}{{A`{Mbn}}}}{{{f{Ab}}}{{A`{{f{{l{Aj}}}}n}}}}{{{f{Ab}}Fn}{{A`{{E`{Bf}}n}}}}{{{f{Ab}}{f{Ej}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{Abc}{}{B`M`}}{{{f{Ab}}c}{}{B`M`}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}}{{A`{cn}}}M`}{{{f{BM`}}}{{A`{Mbn}}}}{{{f{Ab}}}{{A`{Mbn}}}}{{{f{Ab}}{Cf{Fn}}}Ab}{{{f{BM`}}{f{{l{F`}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bj{A@d}}}}Lj}Ab}{{{f{Ab}}{f{{Bj{A@d}}}}}Ab}{{{f{BM`}}{f{{Bj{Jb}}}}}{{A`{Abn}}}}{{{f{BM`}}{f{{Bj{Jb}}}}}Ab}{{{f{BM`}}{f{{l{F`}}}}}Ab}{{{f{Ab}}{f{{Bj{Jb}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kf{LfKh}}}}n}}}}{{{f{Ab}}FnAOn}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bf}}}}d}{{A`{AAjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{E`{Ab}}}}{fEh}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{H`{Db{Cl{Cj}}}}}{{A`{Abn}}}}1{{{H`{{f{BAb}}{Cl{Cj}}}}}{{A`{Abn}}}}{{{H`{{f{BAb}}{Gd{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{H`{Db{Gd{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{}{{A`{c}}}{}}0006{{Dbc}{{A`{Ab}}}{}}{{{f{DdAb}}{Jn{c}}}dDj}8{f{{A`{GfBBh}}}}{fAAh}000{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{F`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{BM`}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BM`}}}{{A`{{f{{l{c}}}}n}}}Dj}{{{f{BM`}}Bh}{{Cf{Md}}}}{{{f{BM`}}Bh}{{A`{Mbn}}}}{{}c{}}000{{AbDb}Ab}{{{f{Ab}}c}Ab{B`M`}}{{{f{Ab}}{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Eb}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{Eb}}}Eb}{{f{f{Ddc}}}b{}}{fb}{{{f{Eb}}}Ab}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{cc{}}{{}Fn}{{}c{}}{{{DJj{Ab}}}Eb}{{{f{DdEb}}{f{Dd{Cl{Cj}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6{{{f{DdEb}}{f{Dd{Cl{Cj}}}}e}c{}{{Dl{{f{Eb}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CAj}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Fj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CAj}}c}{{A`{Abn}}}Bb}{{{f{{l{Fj}}}}c}{{A`{Abn}}}Bb}```{{fh}b}{f{{f{c}}}{}}{{{f{Dd}}}{{f{Ddc}}}{}}{{{f{CLf}}}CLf}{{f{f{Ddc}}}b{}}{fb}{{}CLf}{Fn{{f{c}}}{}}{Fn{{f{Ddc}}}{}}{Fnb}{{{f{CLf}}{f{CLf}}}d}{{f{f{c}}}d{}}00{{{f{CLf}}{f{DdHf}}}{{A`{bHh}}}}{cc{}}{{{f{CLf}}{f{Ddc}}}bADj}{{}Fn}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}4","D":"AEInBA`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11479],[5,"StructType",1993,11480],[5,"ChunkedArray",17,11481],[6,"PolarsError",3485,11482],[6,"Result",11483],[5,"Series",10965,11484],[17,"Output"],[10,"FnMut",11485],[5,"ListType",1993,11480],[5,"StringType",1993,11480],[5,"BinaryType",1993,11480],[10,"PolarsNumericType",1993,11480],[10,"Num",11486],[10,"ToPrimitive",11487],[5,"BooleanType",1993,11480],[1,"str"],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",11425,11488],[5,"ObjectType",1993,11480],[6,"GroupsProxy",3881,11489],[10,"PolarsObject",1549,11490],[5,"FixedSizeListType",1993,11480],[6,"Option",11491],[17,"Item"],[10,"Array",11492],[5,"Box",11493],[10,"Iterator",11494],[5,"AmortizedListIter",11495],[5,"PlSmallStr",1993,11496],[0,"mut"],[17,"IsNested"],[5,"FalseT",1993,11480],[10,"PolarsDataType",1993,11480],[10,"Fn",11485],[10,"Copy",11497],[6,"Cow",11498],[5,"AmortSeries",11401,11499],[5,"Float64Type",1993,11480],[5,"Float32Type",1993,11480],[5,"String",11500],[6,"DataType",1993,11501],[5,"View",11502],[5,"SortOptions",1677,11503],[5,"UInt32Type",1993,11480],[5,"BinaryOffsetType",1993,11480],[5,"SortMultipleOptions",1677,11503],[10,"PolarsIntegerType",1993,11480],[6,"CastOptions",1160,11504],[10,"NumOpsDispatchCheckedInner",11446,11505],[5,"Iter",11506],[1,"usize"],[1,"fn"],[5,"Map",11507],[5,"Vec",11508],[5,"CompactString",11509],[5,"MetadataProperties",1266,11510],[10,"DoubleEndedIterator",11511],[1,"i64"],[5,"OffsetsBuffer",11512],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11513],[5,"Error",11513],[17,"Array"],[10,"IntoIterator",11514],[10,"PolarsAsRef",11515],[5,"Bitmap",11516],[10,"AsRef",11517],[10,"Borrow",11518],[10,"Send",11497],[10,"Sync",11497],[10,"NoOption",11519],[10,"IntoParallelIterator",11520],[10,"TrustedLen",11521],[6,"AnyValue",1993,11522],[1,"u32"],[5,"MetadataFlags",1266,11510],[10,"PolarsObjectSafe",1549,11490],[5,"BinaryArray",11523],[1,"f32"],[1,"u64"],[5,"Metadata",1266,11510],[5,"RwLockWriteGuard",11524],[5,"Int32Type",1993,11480],[5,"DateType",1993,11480],[5,"Logical",1993,11525],[5,"Int64Type",1993,11480],[6,"TimeUnit",1993,11526],[5,"DatetimeType",1993,11480],[5,"Int128Type",1993,11480],[5,"DecimalType",1993,11480],[5,"DurationType",1993,11480],[10,"ExactSizeIterator",11527],[5,"TimeType",1993,11480],[10,"PolarsFloatType",1993,11480],[6,"IsSorted",10965,11528],[10,"PolarsIterator",1209,11529],[6,"ChunkedArrayLayout",17,11481],[10,"NumCast",11487],[5,"Scalar",4251,11530],[1,"f64"],[6,"MetadataReadGuard",1266,11531],[5,"IMMetadata",1266,11532],[5,"Arc",4251,11533],[10,"MetadataTrait",1266,11534],[5,"RwLockReadGuard",11524],[5,"Int16Type",1993,11480],[1,"i16"],[1,"i128"],[5,"UInt8Type",1993,11480],[5,"UInt16Type",1993,11480],[1,"u16"],[5,"UInt64Type",1993,11480],[5,"Int8Type",1993,11480],[1,"i8"],[1,"i32"],[5,"Range",11535],[5,"Field",1993,11536],[10,"ParallelIterator",11520],[10,"IndexedParallelIterator",11520],[6,"QuantileInterpolOptions",4251,11537],[5,"RollingOptionsFixedWindow",4251,11538],[10,"PolarsOpsNumericType",11539],[10,"Sized",11497],[5,"ChunkId",4251,11540],[17,"IsStruct"],[5,"RandomState",11541],[5,"BytesHash",11542],[5,"ViewRepr",11543],[1,"array"],[5,"Dim",11544],[5,"ArrayBase",11543],[5,"OwnedRepr",11545],[6,"Either",11546],[5,"TypeId",11547],[5,"DataFrame",3584,11548],[5,"NullableIdxSize",4251,11540],[10,"FnOnce",11485],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",854,11549],[5,"AnonymousListBuilder",882,11550],[5,"AnonymousOwnedListBuilder",882,11550],[5,"ListBooleanChunkedBuilder",882,11551],[5,"ListPrimitiveChunkedBuilder",882,11552],[10,"ListBuilderTrait",882,11553],[10,"ChunkedBuilder",882,11554],[5,"ListStringChunkedBuilder",882,11555],[5,"ListBinaryChunkedBuilder",882,11555],[5,"ListNullChunkedBuilder",882,11556],[5,"BinViewChunkedBuilder",882,11557],[10,"ViewType",11558],[5,"BooleanChunkedBuilder",882,11559],[5,"NullChunkedBuilder",882,11560],[5,"PrimitiveChunkedBuilder",882,11561],[10,"Clone",11562],[5,"NullChunked",11563],[10,"NewChunkedArray",882,11554],[10,"Hasher",11564],[10,"ChunkedCollectInferIterExt",1189,11565],[10,"ChunkedCollectIterExt",1189,11565],[10,"Canonical",1203,11566],[10,"ChunkedCollectParIterExt",1205,11567],[10,"FromParIterWithDtype",1205,11567],[5,"BooleanArray",11568],[5,"BoolIterNoNull",1209,11529],[5,"FixedSizeListArray",11569],[5,"FixedSizeListIterNoNull",1209,11529],[5,"SomeIterator",1209,11529],[5,"MetadataEnv",1266,11570],[10,"MetadataCollectable",1266,11571],[5,"Iter",11572],[5,"IterNames",11572],[5,"File",11573],[5,"Mutex",11574],[6,"MetadataMerge",1266,11510],[5,"RwLock",11524],[5,"ObjectArray",1549,11490],[6,"ArrowDataType",1993,11575],[10,"Any",11547],[10,"Debug",11513],[5,"BitmapIter",11576],[6,"ZipValidity",11577],[5,"ObjectChunkedBuilder",1626,11578],[10,"AnonymousObjectBuilder",1649,11579],[5,"ObjectRegistry",1649,11579],[17,"FuncRet"],[10,"ChunkApply",1677,11580],[10,"ChunkApplyKernel",1677,11580],[10,"ChunkSort",1677,11580],[10,"ChunkUnique",1677,11580],[10,"ChunkCast",1677,11580],[6,"FillNullStrategy",1677,11580],[10,"ChunkCompare",10965,11580],[10,"ChunkExplode",1677,11580],[10,"ChunkFillNullValue",1677,11580],[10,"ChunkFilter",1677,11580],[10,"ChunkFull",1677,11580],[10,"ChunkFullNull",1677,11580],[10,"ChunkAnyValue",1677,11580],[10,"IsFirstDistinct",1677,11580],[10,"IsLastDistinct",1677,11580],[10,"ChunkAgg",1677,11580],[10,"ChunkQuantile",1677,11580],[10,"ChunkExpandAtIndex",1677,11580],[10,"Reinterpret",1677,11580],[10,"ChunkReverse",1677,11580],[10,"ChunkRollApply",1677,11580],[10,"ChunkSet",1677,11580],[10,"ChunkShift",1677,11580],[10,"ChunkShiftFill",1677,11580],[10,"SlicedArray",1677,11581],[10,"ChunkVar",1677,11580],[10,"ChunkTake",1677,11580],[10,"ChunkTakeUnchecked",1677,11580],[10,"ChunkBytes",1677,11580],[10,"ChunkZip",1677,11580],[10,"BinaryFnMut",1882,11582],[10,"StaticArray",1993,11583],[10,"TernaryFnMut",1882,11582],[10,"Error",11584],[10,"UnaryFnMut",1882,11582],[5,"PrimitiveArray",11585],[6,"SearchSortedSide",1923,11586],[5,"NoNull",4251,11587],[5,"RowsEncoded",11588],[5,"NaiveDateTime",11589],[6,"Tz",11590],[5,"NaiveTime",11591],[5,"CategoricalChunked",1993,11592],[5,"CategoricalChunkedBuilder",1993,11593],[10,"ArrayFromIter",1993,11594],[10,"ArrayFromIterDtype",1993,11594],[5,"Path",11595],[5,"OsStr",11596],[10,"AsRefDataType",1993,11501],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11597],[10,"From",11517],[5,"BinaryViewArrayGeneric",11558],[6,"RevMapping",1993,11598],[10,"CategoricalMergeOperation",1993,11599],[10,"LogicalType",1993,11525],[6,"CategoricalOrdering",1993,11598],[5,"OwnedObject",1993,11522],[6,"UnknownKind",1993,11501],[5,"CompatLevel",1993,11501],[5,"CategoricalType",1993,11480],[6,"ArrowTimeUnit",1993],[6,"Ordering",11600],[10,"ArrayCollectIterExt",1993,11594],[5,"GlobalRevMapMerger",1993,11599],[1,"char"],[10,"FromIterator",11514],[10,"Into",11517],[10,"NumericNative",1993,11480],[5,"ArrowField",4251],[6,"IntegerType",11601],[6,"PrimitiveType",11602],[5,"TimeDelta",11603],[5,"NaiveDate",11604],[10,"GetAnyValue",1993,11522],[10,"IntoScalar",1993,11605],[5,"CatIter",1993,11592],[6,"Expr",4251,11606],[1,"u128"],[6,"PhysicalType",11601],[6,"ToCompactStringError",11509],[5,"Arguments",11513],[5,"StringCacheHolder",3464,11607],[5,"ErrString",3485,11482],[6,"PolarsWarning",3485,11608],[6,"ParquetError",11609],[5,"Error",11610],[5,"Utf8Error",11611],[6,"Error",11612],[5,"Error",11613],[5,"TryReserveError",11614],[10,"Display",11513],[5,"Schema",4251,11615],[10,"IntoSeries",10965,11616],[6,"NullStrategy",3584,11548],[6,"UniqueKeepStrategy",3584,11548],[5,"HashSet",11617],[5,"ArrowSchema",4251,11618],[5,"Row",4139,11619],[5,"GroupBy",3881,11620],[5,"DynamicGroupOptions",4251,11621],[5,"RangeToInclusive",11535],[5,"RangeTo",11535],[5,"RangeFrom",11535],[5,"RangeInclusive",11535],[5,"RangeFull",11535],[5,"RecordBatchIter",3584,11548],[5,"PhysRecordBatchIter",3584,11548],[5,"LazyFrame",4251,11622],[5,"RollingGroupOptions",4251,11621],[10,"RangeBounds",11535],[10,"IntoVec",4251,11587],[6,"IndexOrder",4251,11623],[5,"RecordBatchT",11624],[5,"StructArray",4251,11625],[5,"Duration",4251,11626],[5,"UnpivotArgsIR",3852,11627],[5,"GroupsIdx",3881,11489],[5,"UnitVec",11628],[6,"GroupByMethod",3881,11620],[5,"SlicedGroups",3881,11489],[5,"GroupsProxyParIter",3881,11489],[10,"UnindexedConsumer",11629],[6,"GroupsIndicator",3881,11489],[6,"IRAggExpr",11630],[10,"IntoGroupsProxy",3881,11631],[5,"Copied",11632],[5,"Zip",11633],[5,"GroupsProxyIter",3881,11489],[10,"IsFloat",11634],[10,"NativeType",11635],[10,"AggList",4123,11636],[10,"TakeExtremum",4123,11637],[10,"PhysicalAggExpr",4136,11638],[6,"AnyValueBuffer",4139,11639],[6,"AnyValueBufferTrusted",4139,11639],[5,"Node",11640],[6,"IR",11641],[5,"Arena",11640],[6,"AExpr",11630],[10,"JoinDispatch",4251,11642],[5,"JoinArgs",4251,11643],[5,"StructNameSpace",4251,11644],[10,"DfTake",4251,11645],[10,"DataFrameOps",4251,11646],[5,"CsvReader",4251,11647],[10,"PhysicalIoExpr",11648],[10,"MmapBytesReader",11649],[10,"LhsNumOps",11425,11488],[6,"Selector",4251,11650],[10,"NumOpsDispatch",11425,11488],[5,"LazyGroupBy",4251,11622],[5,"OptFlags",4251,11651],[10,"Allocator",11652],[5,"JoinBuilder",4251,11622],[10,"AnonymousScan",4251,11653],[5,"ScanArgsAnonymous",4251,11654],[10,"FunctionOutputField",4251,11655],[5,"SpecialEq",4251,11655],[6,"VisitRecursion",11656],[6,"FunctionExpr",4251,11657],[10,"ArgAgg",4251,11658],[5,"ArrayNameSpace",4251,11659],[5,"ListNameSpace",4251,11660],[10,"SeriesTrait",10965,11528],[5,"FieldsMapper",4251,11661],[5,"IpcStreamReader",4251,11662],[10,"Read",11663],[10,"SeriesUdf",4251,11655],[10,"AsBinary",4251,11664],[10,"StringMethods",9902,11665],[5,"BorrowedFd",11666],[10,"AsFd",11666],[10,"AsList",4251,11667],[10,"AsRawFd",11668],[6,"AggExpr",4251,11606],[10,"SeriesSealed",4251,11669],[10,"AsString",4251,11670],[20,"MaybeUninit",11671],[10,"StringNameSpaceImpl",4251,11672],[5,"OwnedBatchedCsvReader",4251,11673],[5,"CsvWriter",4251,11674],[5,"BatchedWriter",11674],[10,"Write",11663],[5,"IpcWriter",4251,11675],[5,"BatchedWriter",11675],[5,"ParquetReader",4251,11676],[5,"BatchedParquetReader",4251,11677],[5,"ParquetWriter",4251,11678],[5,"BatchedWriter",11679],[5,"BatchedCsvReader",4251,11673],[5,"BinaryNameSpace",9807,11680],[6,"Operator",4251,11606],[10,"RenameAliasFn",4251,11655],[5,"UserDefinedFunction",4251,11681],[10,"SeriesBinaryUdf",4251,11655],[5,"InProcessQuery",4251,11682],[5,"HashMap",11683],[5,"CategoricalNameSpace",4251,11684],[10,"RoundSeries",4251,11685],[10,"TemporalMethods",10850,11686],[10,"NumOpsDispatchChecked",11446,11505],[5,"LazyCsvReader",4251,11687],[5,"ScanArgsIpc",4251,11688],[5,"LazyJsonLineReader",4251,11689],[5,"ScanArgsParquet",4251,11690],[5,"RollingOptionsDynamicWindow",4251,11691],[5,"Bounds",4251,11692],[6,"ClosedWindow",4251,11693],[6,"Label",4251,11693],[6,"StartBy",4251,11693],[5,"Window",4251,11694],[5,"CsvReadOptions",4251,11695],[5,"CsvParseOptions",4251,11695],[6,"CsvEncoding",4251,11695],[6,"CommentPrefix",4251,11695],[6,"NullValues",4251,11695],[6,"JoinCoalesce",4251,11643],[6,"JoinType",4251,11643],[5,"CsvWriterOptions",4251,11696],[6,"JoinValidation",4251,11643],[5,"SerializeOptions",4251,11696],[6,"QuoteStyle",4251,11696],[5,"AsOfOptions",4251,11697],[5,"IpcScanOptions",4251,11698],[6,"AsofStrategy",4251,11697],[5,"IpcWriterOptions",4251,11675],[6,"IpcCompression",4251,11675],[6,"InterpolationMethod",4251,11699],[5,"JsonWriterOptions",4251,11700],[6,"ClosedInterval",4251,11701],[6,"RankMethod",4251,11702],[5,"RankOptions",4251,11702],[5,"ParquetOptions",4251,11703],[6,"ParallelStrategy",4251,11703],[5,"ParquetWriteOptions",4251,11704],[6,"ParquetCompression",4251,11704],[5,"GzipLevel",4251,11704],[5,"BrotliLevel",4251,11704],[5,"ZstdLevel",4251,11704],[6,"DslPlan",4251,11705],[5,"When",4251,11706],[5,"Then",4251,11706],[5,"ChainedWhen",4251,11706],[5,"ChainedThen",4251,11706],[6,"Excluded",4251,11606],[6,"BooleanFunction",4251,11707],[6,"CategoricalFunction",4251,11708],[6,"TemporalFunction",4251,11709],[6,"PowFunction",4251,11710],[6,"StringFunction",4251,11711],[6,"StructFunction",4251,11712],[5,"DatetimeArgs",4251,11713],[5,"StatisticsOptions",4251,11714],[5,"DurationArgs",4251,11713],[5,"RollingCovOptions",4251,11715],[5,"StrptimeOptions",4251,11715],[5,"JoinOptions",4251,11715],[6,"WindowType",4251,11715],[6,"WindowMapping",4251,11715],[6,"NestedType",4251,11715],[5,"UnpivotArgsDSL",4251,11715],[5,"FileMetaData",4251,11716],[6,"LiteralValue",4251,11717],[5,"AnonymousScanOptions",4251,11718],[5,"UnionArgs",4251,11718],[5,"RollingVarParams",4251,11719],[5,"RollingQuantileParams",4251,11719],[6,"NonExistent",4251,11720],[10,"LazyFileListReader",4251,11721],[5,"CloudOptions",10038,11722],[10,"Ord",11600],[6,"ColumnOrder",11723],[10,"BinaryNameSpaceImpl",4251,11724],[5,"JsonLineReader",4251,11725],[5,"PathBuf",11595],[10,"CrossJoin",4251,11726],[10,"ExprEvalExtension",4251,11727],[10,"DateMethods",9902,11728],[10,"DatetimeMethods",9902,11729],[10,"DurationMethods",9902,11730],[5,"IpcStreamWriterOption",4251,11662],[10,"BinaryUdfOutputField",4251,11655],[5,"CStr",11731],[10,"Default",11732],[5,"ColumnChunkMetaData",11733],[5,"ParquetStatistics",4251],[6,"NullBehavior",11452,11734],[5,"Weak",11533],[5,"DateLikeNameSpace",10413,11735],[10,"SchemaNamesAndDtypes",4251,11615],[10,"SeriesMethods",4251,11736],[10,"PartialEq",11600],[10,"Scalar",11737],[10,"ListNameSpaceExtension",4251,11738],[10,"Command",11739],[10,"SerReader",4251,11740],[10,"SerWriter",4251,11740],[5,"IpcReader",4251,11698],[5,"IpcStreamWriter",4251,11662],[5,"JsonWriter",4251,11700],[5,"JsonReader",4251,11700],[10,"UdfSchema",4251,11741],[6,"ListFunction",11742],[6,"RangeFunction",11743],[6,"BinaryFunction",11744],[6,"ArrayFunction",11745],[5,"MutableStatistics",11746],[5,"CString",11747],[1,"never"],[5,"OsString",11596],[10,"ToOwned",11498],[5,"MutableStructArray",11748],[5,"GrowableStruct",11749],[10,"FromData",10407,11750],[5,"Buffer",11751],[10,"FromDataUtf8",10407,11750],[10,"FromDataBinary",10407,11750],[5,"ListArray",11752],[6,"Ambiguous",4251,11720],[10,"NamedFromOwned",4251,11753],[10,"DataFrameJoinOps",4251,11754],[5,"FunctionOptions",11718],[10,"PartialOrd",11600],[6,"Context",11705],[10,"IndexOfSchema",4251,11615],[17,"DataType"],[5,"BoundsIter",4251,11694],[6,"ReaderBytes",11649],[10,"PolarsTemporalGroupby",4251,11621],[10,"Hash",11564],[10,"SeriesJoin",4251,11755],[10,"TimeMethods",9902,11756],[5,"NonZero",11757],[10,"IntoListNameSpace",4251,11738],[5,"FileMetaData",11758],[5,"StructValueIter",11759],[10,"AsofJoinBy",4251,11760],[10,"ListNameSpaceImpl",4251,11761],[5,"ExprNameNameSpace",4251,11762],[5,"KeyValue",11758],[10,"IntoLazy",4251,11622],[10,"Literal",4251,11717],[5,"Null",4251,11717],[10,"CloneToUninit",11562],[5,"SuperTypeOptions",11763],[5,"RowIndex",11764],[10,"ChunkAggSeries",4251,11765],[10,"QuantileAggSeries",4251,11766],[10,"IndexToUsize",4251,11767],[10,"NamedFrom",4251,11753],[6,"RowGroupFetcher",11677],[5,"SplitNChars",4251,11768],[5,"AnonymousScanArgs",4251,11653],[5,"Pin",11769],[5,"Request",11584],[10,"SeriesRank",4251,11702],[5,"BorrowedCursor",11770],[10,"VarInt",11771],[5,"IoSliceMut",11663],[10,"SeriesOpsTime",9902,11772],[10,"PolarsRound",4251,11773],[10,"ChunkedSet",4251,11539],[5,"SchemaDescriptor",11774],[6,"SeekFrom",11663],[10,"VarAggSeries",4251,11775],[5,"StringNameSpace",11776],[10,"TakeChunked",4251,11645],[5,"IRPlan",11641],[10,"ToDummies",4251,11777],[10,"PolarsTruncate",4251,11778],[5,"AllocError",11652],[5,"SchemaInferenceResult",10817,11779],[10,"PolarsUpsample",4251,11780],[10,"VecHash",4251,11781],[6,"JsonFormat",4251,11700],[5,"BTreeMap",11782],[10,"WriteDataFrameToFile",11740],[5,"IoSlice",11663],[5,"PartitionedColumnChunkMD",9721,11783],[5,"RowGroupMetaData",11784],[5,"MemSlice",11785],[6,"Filter",11786],[10,"ArrayNameSpace",9788,11787],[10,"AsArray",9788,11788],[6,"Buffer",9824,11789],[10,"AsString",9968,11665],[6,"Pattern",9968,11790],[5,"DatetimeInfer",10007,11791],[10,"StrpTimeParser",10007,11791],[17,"Error"],[10,"TryFromWithUnit",10007,11791],[6,"CloudType",10038,11722],[5,"AnonymousBuilder",10468,11792],[6,"RollingFunction",10710,11793],[6,"RollingFunctionBy",10741,11794],[5,"MutableNullArray",10786,11795],[5,"MutableBitmap",11796],[10,"AsSeries",10850,11686],[5,"Utf8Array",11797],[5,"SeriesIter",10965,11798],[5,"Rc",11799],[8,"FillNullLimit",1677],[10,"InitHashMaps",1993],[10,"InitHashMaps2",1993],[5,"TrueT",1993],[8,"PolarsResult",3485],[15,"IO",9701],[15,"Context",9701],[15,"Count",9695],[15,"Slice",9696],[8,"ChunkJoinOptIds",4251],[8,"DynArgs",4251],[10,"ListFromIter",4251],[15,"Quantile",9574],[15,"Min",9574],[15,"Max",9574],[15,"IsBetween",10663],[15,"Any",10663],[15,"All",10663],[15,"GroupBy",9584],[15,"Union",9584],[15,"Sort",9584],[15,"Cache",9584],[15,"ExtContext",9584],[15,"DataFrameScan",9584],[15,"IR",9584],[15,"Select",9584],[15,"HStack",9584],[15,"Scan",9584],[15,"MapFunction",9584],[15,"Filter",9584],[15,"Distinct",9584],[15,"Slice",9584],[15,"Sink",9584],[15,"Join",9584],[15,"HConcat",9584],[15,"SortBy",9638],[15,"Filter",9638],[15,"Cast",9638],[15,"Sort",9638],[15,"Gather",9638],[15,"RenameAlias",9638],[15,"Ternary",9638],[15,"Function",9638],[15,"Window",9638],[15,"AnonymousFunction",9638],[15,"Slice",9638],[15,"BinaryExpr",9638],[15,"Round",10666],[15,"RoundSF",10666],[15,"Clip",10666],[15,"BackwardFill",10666],[15,"ForwardFill",10666],[15,"Random",10666],[15,"GatherEvery",10666],[15,"ValueCounts",10666],[15,"Rank",10666],[15,"ReplaceStrict",10666],[15,"CumCount",10666],[15,"CumSum",10666],[15,"CumProd",10666],[15,"CumMin",10666],[15,"CumMax",10666],[15,"Range",9698],[15,"ConcatHorizontal",10688],[15,"ConcatVertical",10688],[15,"ExtractGroups",10688],[15,"SplitExact",10688],[15,"Contains",10688],[15,"Find",10688],[15,"Replace",10688],[15,"DatetimeFunction",10702],[5,"Utf8Field",9824],[5,"CategoricalField",9824],[5,"DatetimeField",9824],[15,"Datetime",9898],[10,"Utf8FromIter",10961],[10,"BinaryFromIter",10961],[6,"BitRepr",10965]],"r":[[1,11800],[2,11800],[3,11800],[4,11800],[6,11607],[7,11800],[8,11800],[9,11800],[13,11800],[14,11800],[16,11607],[17,11481],[18,11481],[19,11481],[24,11801],[115,11481],[138,11481],[139,11481],[167,11481],[169,11481],[223,11481],[275,11481],[424,11481],[474,11481],[579,11481],[582,11481],[723,11481],[854,11549],[882,11550],[883,11550],[884,11557],[885,11557],[886,11559],[887,11554],[888,11555],[889,11551],[890,11553],[891,11556],[892,11552],[893,11555],[894,11554],[895,11560],[896,11561],[897,11557],[1034,11554],[1050,11553],[1078,11554],[1143,11550],[1144,11550],[1145,11555],[1146,11551],[1147,11553],[1148,11556],[1149,11552],[1150,11555],[1158,11553],[1160,11504],[1189,11565],[1190,11565],[1203,11566],[1205,11567],[1206,11567],[1209,11529],[1210,11529],[1211,11529],[1212,11529],[1248,11529],[1264,11802],[1265,11802],[1271,11532],[1276,11510],[1277,11571],[1278,11570],[1279,11510],[1280,11510],[1281,11510],[1282,11531],[1283,11534],[1549,11490],[1550,11490],[1551,11490],[1552,11490],[1564,11490],[1594,11490],[1595,11803],[1626,11578],[1649,11579],[1650,11579],[1651,11579],[1652,11579],[1664,11579],[1665,11579],[1666,11579],[1669,11579],[1671,11579],[1678,11580],[1679,11580],[1680,11580],[1681,11580],[1682,11580],[1683,11580],[1684,11580],[1685,11580],[1686,11580],[1687,11580],[1688,11580],[1689,11580],[1690,11580],[1691,11580],[1692,11580],[1693,11580],[1694,11580],[1695,11580],[1696,11580],[1697,11580],[1698,11580],[1699,11580],[1700,11580],[1701,11580],[1702,11580],[1703,11580],[1704,11580],[1707,11580],[1708,11580],[1717,11580],[1718,11581],[1720,11503],[1721,11503],[1734,11580],[1779,11580],[1782,11580],[1791,11580],[1794,11580],[1837,11580],[1843,11580],[1880,11580],[1882,11582],[1886,11582],[1887,11582],[1888,11582],[1889,11582],[1890,11582],[1891,11582],[1892,11582],[1893,11582],[1894,11582],[1895,11582],[1896,11582],[1897,11582],[1898,11582],[1899,11582],[1900,11582],[1901,11582],[1902,11582],[1903,11582],[1904,11582],[1905,11582],[1906,11582],[1907,11582],[1908,11582],[1909,11582],[1910,11582],[1911,11582],[1912,11582],[1913,11582],[1914,11582],[1915,11582],[1916,11582],[1917,11582],[1918,11804],[1919,11804],[1920,11805],[1921,11805],[1922,11805],[1926,11586],[1928,11586],[1947,11586],[1953,11581],[1954,11806],[1955,11806],[1956,11806],[1957,11806],[1960,11807],[1961,11808],[1962,11808],[1963,11808],[1964,11808],[1965,11808],[1966,11808],[1967,11808],[1968,11808],[1969,11581],[1970,11503],[1971,11503],[1982,11809],[1983,11810],[1984,11810],[1985,11810],[1986,11809],[1987,11809],[1988,11811],[1989,11809],[1990,11810],[1991,11810],[1992,11810],[1994,11522],[1998,11480],[1999,11594],[2000,11594],[2001,11594],[2002,11575],[2004,11501],[2008,11480],[2010,11480],[2011,11480],[2013,11480],[2018,11480],[2019,11480],[2020,11592],[2023,11592],[2024,11593],[2025,11599],[2026,11598],[2027,11480],[2028,11501],[2029,11501],[2030,11501],[2031,11501],[2036,11812],[2037,11480],[2040,11813],[2041,11480],[2046,11814],[2047,11480],[2052,11815],[2053,11480],[2059,11480],[2060,11536],[2061,11536],[2064,11480],[2070,11480],[2071,11480],[2075,11480],[2076,11480],[2077,11522],[2079,11599],[2083,11816],[2084,11767],[2085,11816],[2086,11816],[2087,11817],[2088,11816],[2090,11480],[2091,11480],[2095,11480],[2096,11480],[2100,11480],[2101,11480],[2105,11480],[2106,11480],[2110,11480],[2111,11480],[2113,11605],[2124,11480],[2125,11480],[2127,11525],[2128,11525],[2140,11480],[2143,11480],[2145,11480],[2146,11522],[2150,11817],[2151,11817],[2152,11816],[2153,11817],[2154,11817],[2155,11817],[2156,11496],[2157,11480],[2158,11480],[2159,11480],[2160,11480],[2162,11598],[2164,11583],[2168,11480],[2170,11480],[2175,11480],[2180,11818],[2181,11480],[2182,11526],[2183,11501],[2186,11480],[2190,11480],[2191,11480],[2195,11480],[2196,11480],[2200,11480],[2201,11480],[2205,11480],[2206,11480],[2210,11501],[2385,11599],[2398,11525],[2522,11501],[3068,11599],[3069,11599],[3073,11501],[3441,11592],[3442,11592],[3443,11593],[3444,11599],[3445,11598],[3447,11599],[3451,11598],[3452,11599],[3454,11599],[3455,11599],[3456,11592],[3457,11592],[3458,11598],[3463,11598],[3464,11607],[3470,11607],[3473,11607],[3481,11607],[3491,11482],[3498,11482],[3499,11482],[3500,11608],[3516,11482],[3529,11482],[3545,11608],[3552,11482],[3554,11482],[3555,11482],[3556,11482],[3557,11482],[3558,11608],[3559,11482],[3581,11819],[3582,11819],[3583,11819],[3585,11548],[3590,11548],[3591,11548],[3593,11548],[3594,11548],[3668,11548],[3699,11548],[3767,11548],[3852,11627],[3881,11489],[3884,11620],[3885,11620],[3887,11489],[3888,11489],[3889,11489],[3890,11489],[3891,11489],[3892,11489],[3895,11489],[3897,11631],[3909,11489],[3918,11620],[3989,11620],[3999,11620],[4123,11636],[4124,11637],[4125,11637],[4126,11637],[4127,11637],[4128,11637],[4129,11637],[4130,11637],[4131,11637],[4132,11637],[4136,11638],[4141,11639],[4142,11639],[4162,11619],[4196,11619],[4217,11619],[4231,11619],[4232,11619],[4233,11619],[4249,11820],[4250,11821],[4254,11606],[4261,11651],[4263,11720],[4266,11653],[4267,11653],[4268,11718],[4274,11522],[4275,11533],[4276,11658],[4279,11549],[4284,11480],[4285,11594],[4287,11594],[4288,11594],[4289,11659],[4290,11492],[4291,11575],[4293,11618],[4295,11664],[4296,11667],[4298,11697],[4299,11501],[4300,11670],[4302,11697],[4303,11760],[4304,11697],[4307,11822],[4313,11673],[4314,11677],[4319,11480],[4320,11557],[4323,11724],[4325,11480],[4326,11480],[4328,11480],[4329,11655],[4336,11480],[4337,11559],[4338,11707],[4339,11480],[4340,11489],[4343,11692],[4344,11694],[4346,11704],[4354,11592],[4358,11592],[4359,11593],[4360,11708],[4361,11599],[4362,11684],[4363,11598],[4364,11480],[4368,11706],[4369,11706],[4370,11580],[4371,11765],[4372,11580],[4373,11580],[4374,11580],[4375,11580],[4376,11580],[4377,11580],[4378,11580],[4379,11580],[4380,11580],[4381,11580],[4382,11580],[4383,11580],[4384,11540],[4385,11643],[4386,11580],[4387,11580],[4388,11580],[4389,11580],[4390,11580],[4391,11580],[4392,11580],[4393,11580],[4394,11580],[4395,11580],[4396,11580],[4397,11580],[4398,11481],[4399,11554],[4400,11565],[4401,11565],[4402,11539],[4404,11701],[4405,11693],[4413,11695],[4414,11501],[4426,11726],[4427,11695],[4428,11695],[4429,11695],[4430,11647],[4431,11674],[4432,11696],[4439,11501],[4440,11501],[4441,11548],[4442,11754],[4443,11646],[4447,11501],[4455,11812],[4456,11728],[4458,11480],[4462,11713],[4463,11813],[4465,11729],[4466,11480],[4473,11814],[4474,11480],[4476,11645],[4483,11705],[4487,11626],[4493,11713],[4494,11815],[4495,11730],[4496,11480],[4497,11719],[4498,11621],[4508,11606],[4512,11606],[4513,11727],[4514,11762],[4523,11822],[4524,11822],[4525,11480],[4526,11536],[4530,11536],[4531,11661],[4532,11762],[4533,11716],[4534,11823],[4536,11580],[4537,11580],[4547,11480],[4555,11480],[4556,11480],[4561,11480],[4562,11480],[4570,11750],[4571,11750],[4572,11750],[4576,11657],[4577,11655],[4581,11522],[4583,11655],[4585,11599],[4586,11620],[4588,11620],[4590,11489],[4591,11489],[4592,11489],[4593,11489],[4594,11489],[4595,11489],[4600,11704],[4610,11816],[4611,11822],[4617,11767],[4618,11816],[4619,11489],[4620,11540],[4621,11816],[4624,11682],[4626,11615],[4627,11623],[4628,11767],[4629,11817],[4630,11816],[4632,11643],[4635,11480],[4636,11480],[4641,11480],[4642,11480],[4647,11480],[4648,11480],[4653,11480],[4654,11480],[4659,11480],[4660,11480],[4664,11699],[4666,11631],[4667,11622],[4668,11738],[4669,11605],[4670,11616],[4671,11587],[4673,11675],[4674,11698],[4675,11698],[4676,11662],[4677,11662],[4678,11662],[4679,11675],[4680,11675],[4683,11580],[4687,11580],[4701,11643],[4702,11622],[4703,11643],[4704,11642],[4705,11715],[4707,11643],[4708,11643],[4711,11700],[4712,11725],[4714,11700],[4715,11700],[4716,11700],[4720,11693],[4722,11824],[4724,11824],[4725,11824],[4731,11687],[4732,11721],[4733,11622],[4734,11622],[4735,11689],[4742,11643],[4747,11488],[4754,11555],[4755,11551],[4756,11553],[4757,11480],[4759,11825],[4760,11660],[4761,11738],[4762,11761],[4763,11552],[4764,11555],[4765,11480],[4766,11717],[4768,11717],[4770,11525],[4773,11525],[4822,11717],[4827,11753],[4828,11753],[4840,11715],[4842,11554],[4844,11587],[4845,11720],[4857,11717],[4865,11695],[4866,11540],[4867,11540],[4868,11488],[4869,11505],[4870,11480],[4873,11480],[4875,11480],[4880,11606],[4881,11651],[4889,11673],[4890,11522],[4892,11826],[4895,11703],[4896,11704],[4897,11703],[4898,11676],[4900,11704],[4901,11678],[4904,11817],[4905,11817],[4906,11816],[4907,11817],[4908,11817],[4909,11817],[4910,11496],[4912,11480],[4913,11482],[4914,11480],[4915,11480],[4916,11529],[4917,11480],[4918,11490],[4919,11482],[4920,11773],[4921,11621],[4922,11778],[4924,11780],[4926,11710],[4929,11561],[4932,11766],[4933,11537],[4935,11696],[4944,11702],[4945,11702],[4946,11580],[4948,11655],[4956,11598],[4966,11715],[4969,11621],[4970,11691],[4971,11538],[4972,11719],[4973,11827],[4974,11719],[4979,11685],[4980,11828],[4988,11530],[4991,11654],[4992,11688],[4993,11690],[4994,11615],[4997,11615],[4998,11615],[4999,11586],[5003,11650],[5005,11740],[5006,11740],[5007,11696],[5008,11484],[5010,11655],[5011,11755],[5012,11736],[5013,11772],[5014,11702],[5015,11669],[5016,11528],[5017,11655],[5030,11581],[5031,11489],[5038,11503],[5039,11503],[5040,11655],[5044,11768],[5046,11693],[5048,11583],[5049,11714],[5057,11607],[5059,11480],[5060,11557],[5062,11711],[5063,11665],[5064,11672],[5066,11480],[5073,11715],[5077,11625],[5078,11801],[5081,11712],[5082,11644],[5084,11480],[5094,11645],[5096,11709],[5097,11686],[5099,11706],[5107,11818],[5108,11756],[5110,11480],[5111,11526],[5112,11501],[5116,11777],[5130,11480],[5137,11480],[5138,11480],[5143,11480],[5144,11480],[5149,11480],[5150,11480],[5155,11480],[5156,11480],[5157,11829],[5158,11741],[5162,11718],[5164,11548],[5167,11501],[5168,11715],[5169,11627],[5172,11681],[5181,11775],[5182,11781],[5186,11706],[5188,11694],[5191,11715],[5192,11715],[5202,11704],[5297,11830],[5301,11831],[5302,11830],[5312,11832],[5323,11620],[5325,11833],[5328,11834],[5339,11834],[5350,11835],[5356,11836],[5359,11837],[5372,11838],[5377,11838],[5380,11580],[5390,11839],[5415,11840],[5419,11841],[5423,11842],[5431,11836],[5433,11706],[5698,11843],[5706,11599],[5711,11841],[5722,11836],[5737,11844],[5740,11845],[5742,11845],[5744,11845],[6032,11846],[6040,11834],[6044,11847],[6045,11833],[6047,11848],[6060,11833],[6069,11829],[6073,11848],[6075,11849],[6078,11848],[6079,11848],[6080,11849],[6081,11849],[6091,11825],[6092,11850],[6098,11851],[6099,11501],[6105,11852],[6107,11834],[6108,11852],[6110,11852],[6112,11852],[6114,11834],[6115,11852],[6122,11800],[6124,11837],[6125,11839],[6126,11713],[6128,11837],[6129,11837],[6130,11810],[6131,11810],[6132,11810],[6199,11825],[6200,11642],[6463,11746],[6465,11800],[6467,11853],[6613,11854],[6614,11836],[6620,11833],[6621,11833],[6623,11713],[6631,11626],[6632,11626],[6633,11615],[6901,11826],[6902,11826],[6903,11826],[6909,11620],[6931,11580],[6969,11836],[6973,11825],[6977,11580],[6982,11855],[7086,11620],[7090,11834],[7094,11849],[7321,11580],[7331,11836],[7333,11580],[7362,11826],[7384,11822],[7396,11693],[7397,11693],[7479,11856],[7490,11857],[7491,11858],[7492,11858],[7494,11859],[7506,11833],[7512,11767],[7513,11779],[7650,11837],[7651,11837],[7653,11860],[7654,11699],[7656,11860],[7657,11861],[7809,11701],[7811,11826],[7812,11862],[7821,11863],[7826,11864],[7829,11865],[7837,11841],[7840,11841],[7847,11850],[7883,11836],[7898,11836],[7909,11717],[7956,11599],[7957,11599],[7962,11835],[7973,11836],[7976,11836],[7984,11866],[7985,11822],[7986,11841],[7996,11822],[7997,11841],[8003,11841],[8016,11501],[8026,11841],[8047,11839],[8085,11839],[8096,11867],[8097,11868],[8146,11869],[8168,11841],[8173,11836],[8174,11825],[8207,11822],[8228,11482],[8229,11482],[8230,11482],[8231,11482],[8236,11754],[8245,11841],[8276,11834],[8284,11700],[8289,11870],[8290,11871],[8292,11872],[8299,11872],[8300,11872],[8302,11858],[8305,11826],[8394,11843],[8398,11580],[8412,11844],[8467,11580],[8484,11768],[8486,11768],[8504,11856],[8514,11839],[8515,11873],[8517,11873],[8519,11873],[8521,11873],[8523,11873],[8538,11841],[8562,11706],[8566,11837],[9162,11836],[9187,11825],[9351,11706],[9564,11874],[9572,11580],[9721,11783],[9732,11875],[9734,11876],[9739,11636],[9740,11637],[9741,11637],[9742,11637],[9743,11637],[9744,11637],[9745,11637],[9746,11637],[9747,11637],[9748,11637],[9752,11582],[9756,11582],[9757,11582],[9758,11582],[9759,11582],[9760,11582],[9761,11582],[9762,11582],[9763,11582],[9764,11582],[9765,11582],[9766,11582],[9767,11582],[9768,11582],[9769,11582],[9770,11582],[9771,11582],[9772,11582],[9773,11582],[9774,11582],[9775,11582],[9776,11582],[9777,11582],[9778,11582],[9779,11582],[9780,11582],[9781,11582],[9782,11582],[9783,11582],[9784,11582],[9785,11582],[9786,11582],[9787,11582],[9788,11787],[9789,11788],[9807,11680],[9825,11789],[9827,11789],[9830,11789],[9844,11789],[9876,11789],[9901,11684],[9902,11728],[9903,11729],[9904,11730],[9905,11691],[9906,11772],[9907,11665],[9908,11756],[9961,11877],[9968,11665],[9974,11790],[9975,11665],[9998,11665],[10007,11791],[10009,11791],[10010,11791],[10021,11791],[10040,11722],[10041,11722],[10077,11878],[10090,11722],[10091,11722],[10097,11862],[10098,11862],[10099,11879],[10100,11879],[10101,11879],[10102,11879],[10103,11879],[10105,11522],[10109,11480],[10110,11594],[10111,11594],[10112,11594],[10113,11575],[10115,11501],[10119,11480],[10121,11480],[10122,11480],[10124,11480],[10129,11480],[10130,11480],[10131,11592],[10134,11592],[10135,11593],[10136,11599],[10137,11598],[10138,11480],[10139,11501],[10140,11501],[10141,11501],[10142,11501],[10147,11812],[10148,11480],[10151,11813],[10152,11480],[10157,11814],[10158,11480],[10163,11815],[10164,11480],[10168,11480],[10169,11536],[10170,11536],[10173,11480],[10179,11480],[10180,11480],[10184,11480],[10185,11480],[10186,11522],[10188,11599],[10192,11816],[10193,11767],[10194,11816],[10195,11816],[10196,11817],[10197,11816],[10199,11480],[10200,11480],[10204,11480],[10205,11480],[10209,11480],[10210,11480],[10214,11480],[10215,11480],[10219,11480],[10220,11480],[10222,11605],[10233,11480],[10234,11480],[10236,11525],[10237,11525],[10249,11480],[10252,11480],[10254,11480],[10255,11522],[10259,11817],[10260,11817],[10261,11816],[10262,11817],[10263,11817],[10264,11817],[10265,11496],[10266,11480],[10267,11480],[10268,11480],[10269,11480],[10271,11598],[10273,11583],[10277,11480],[10279,11480],[10284,11480],[10289,11818],[10290,11480],[10291,11526],[10292,11501],[10295,11480],[10299,11480],[10300,11480],[10304,11480],[10305,11480],[10309,11480],[10310,11480],[10314,11480],[10315,11480],[10319,11501],[10332,11599],[10335,11525],[10340,11501],[10357,11599],[10358,11599],[10359,11501],[10377,11592],[10378,11592],[10379,11593],[10380,11599],[10381,11598],[10383,11599],[10387,11598],[10388,11599],[10390,11599],[10391,11599],[10392,11592],[10393,11592],[10394,11598],[10399,11598],[10400,11607],[10401,11607],[10402,11607],[10403,11607],[10404,11858],[10405,11858],[10406,11858],[10407,11750],[10408,11750],[10409,11750],[10413,11735],[10465,11638],[10468,11792],[10488,11804],[10489,11804],[10504,11707],[10507,11708],[10546,11657],[10589,11710],[10621,11711],[10629,11712],[10634,11709],[10659,11657],[10660,11657],[10661,11657],[10662,11657],[10704,11708],[10708,11710],[10714,11793],[10745,11794],[10772,11805],[10773,11805],[10774,11805],[10775,11699],[10778,11699],[10779,11861],[10780,11880],[10781,11881],[10782,11881],[10783,11881],[10784,11881],[10785,11881],[10786,11795],[10817,11779],[10828,11779],[10833,11779],[10834,11779],[10847,11586],[10848,11586],[10849,11586],[10850,11686],[10851,11686],[10872,11581],[10873,11806],[10874,11806],[10875,11806],[10876,11806],[10879,11807],[10880,11808],[10881,11808],[10882,11808],[10883,11808],[10884,11808],[10885,11808],[10886,11808],[10887,11808],[10888,11581],[10889,11503],[10890,11503],[10901,11670],[10902,11768],[10903,11672],[10922,11856],[10930,11768],[10932,11768],[10935,11856],[10941,11873],[10943,11873],[10945,11873],[10947,11873],[10949,11873],[10955,11681],[10961,11882],[10962,11882],[10966,11528],[10967,11580],[10969,11616],[10970,11528],[10974,11484],[10975,11798],[10976,11798],[10977,11528],[10987,11484],[10993,11484],[11182,11484],[11304,11484],[11401,11499],[11402,11499],[11425,11488],[11426,11488],[11427,11488],[11429,11488],[11433,11488],[11446,11505],[11447,11505],[11454,11734]],"b":[[28,"impl-Add-for-ChunkedArray%3CStringType%3E"],[29,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[30,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[31,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[32,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[34,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[35,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CT%3E"],[37,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[38,"impl-Add-for-ChunkedArray%3CT%3E"],[39,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[41,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[44,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CT%3E"],[47,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[48,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[58,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFixedSizeListType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[68,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[84,"impl-ChunkedArray%3CFixedSizeListType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[90,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[91,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[92,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[93,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[94,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[95,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[99,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[100,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[103,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[107,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[117,"impl-ChunkedArray%3CStringType%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[122,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[126,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[150,"impl-ChunkedArray%3CStructType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[159,"impl-ChunkedArray%3CT%3E"],[160,"impl-Container-for-ChunkedArray%3CT%3E"],[180,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[181,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[182,"impl-Div-for-%26ChunkedArray%3CT%3E"],[183,"impl-Div-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[193,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[207,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[215,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[219,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[224,"impl-Debug-for-ChunkedArray%3CListType%3E"],[225,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[226,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[227,"impl-Debug-for-ChunkedArray%3CT%3E"],[228,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[229,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[230,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[232,"impl-ChunkedArray%3CListType%3E"],[233,"impl-ChunkedArray%3CFixedSizeListType%3E"],[241,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[242,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[243,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[244,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[245,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[248,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[251,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[252,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[253,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[256,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[260,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[270,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[271,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[272,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[279,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[289,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[296,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[303,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[304,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[305,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[306,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[318,"impl-ChunkedArray%3CFixedSizeListType%3E"],[319,"impl-ChunkedArray%3CListType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[339,"impl-ChunkedArray%3CListType%3E"],[340,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[353,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[368,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[372,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[380,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[381,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[382,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[389,"impl-ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[399,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[408,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[448,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[450,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[455,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[457,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[459,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[460,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[465,"impl-ChunkedArray%3CBooleanType%3E"],[466,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[467,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[480,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkedArray%3CBooleanType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-ChunkedArray%3CT%3E"],[488,"impl-ChunkedArray%3CBooleanType%3E"],[489,"impl-Mul-for-ChunkedArray%3CT%3E"],[490,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[491,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[492,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[499,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[501,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[502,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[506,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[507,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[508,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[512,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[520,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[525,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[526,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[527,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[528,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[529,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[532,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[537,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[538,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[539,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[540,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[542,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[543,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[545,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[546,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[547,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[548,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[549,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[550,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[556,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[557,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[561,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[562,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[564,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[565,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[567,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[572,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[574,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[577,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[583,"impl-ChunkedArray%3CListType%3E"],[584,"impl-ChunkedArray%3CStringType%3E"],[585,"impl-ChunkedArray%3CListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[623,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[624,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[625,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[626,"impl-Rem-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[643,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[645,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[646,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[647,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[651,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[652,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[653,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[655,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[662,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[663,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[665,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[666,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[667,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[668,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[669,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[671,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[672,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[674,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[675,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[676,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[677,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[679,"impl-Container-for-ChunkedArray%3CT%3E"],[680,"impl-ChunkedArray%3CT%3E"],[681,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[683,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[684,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[685,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[686,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[690,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[691,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[693,"impl-Container-for-ChunkedArray%3CT%3E"],[694,"impl-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[697,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[698,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[700,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub-for-ChunkedArray%3CT%3E"],[702,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[703,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[705,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkedArray%3CBooleanType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[708,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[709,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[711,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[712,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[715,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[716,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[719,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[722,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[727,"impl-ChunkedArray%3CFixedSizeListType%3E"],[728,"impl-ChunkedArray%3CListType%3E"],[729,"impl-ChunkedArray%3CT%3E"],[730,"impl-ChunkedArray%3CListType%3E"],[735,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[739,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[740,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[742,"impl-ChunkedArray%3CFixedSizeListType%3E"],[743,"impl-ChunkedArray%3CListType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[760,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[761,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[768,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[769,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[776,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[783,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[785,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[789,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[798,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[853,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1029,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1030,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1304,"impl-MetadataProperties"],[1305,"impl-Flags-for-MetadataProperties"],[1306,"impl-Flags-for-MetadataFlags"],[1307,"impl-MetadataFlags"],[1369,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1370,"impl-Metadata%3CT%3E"],[1395,"impl-UpperHex-for-MetadataProperties"],[1396,"impl-Debug-for-MetadataProperties"],[1397,"impl-LowerHex-for-MetadataProperties"],[1398,"impl-Binary-for-MetadataProperties"],[1399,"impl-Octal-for-MetadataProperties"],[1400,"impl-LowerHex-for-MetadataFlags"],[1401,"impl-Debug-for-MetadataFlags"],[1402,"impl-Binary-for-MetadataFlags"],[1403,"impl-UpperHex-for-MetadataFlags"],[1404,"impl-Octal-for-MetadataFlags"],[1414,"impl-Flags-for-MetadataProperties"],[1415,"impl-MetadataProperties"],[1416,"impl-MetadataFlags"],[1417,"impl-Flags-for-MetadataFlags"],[1428,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1429,"impl-Metadata%3CT%3E"],[1472,"impl-Metadata%3CT%3E"],[1473,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1477,"impl-Metadata%3CT%3E"],[1478,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1555,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1556,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1590,"impl-ObjectArray%3CT%3E"],[1591,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1606,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1607,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1617,"impl-ObjectArray%3CT%3E"],[1618,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1620,"impl-ObjectArray%3CT%3E"],[1621,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1623,"impl-Array-for-ObjectArray%3CT%3E"],[1624,"impl-ObjectArray%3CT%3E"],[1627,"impl-ObjectChunkedBuilder%3CT%3E"],[1628,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1630,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1631,"impl-ObjectChunkedBuilder%3CT%3E"],[2284,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2285,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2286,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2287,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2389,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2390,"impl-Logical%3CDurationType,+Int64Type%3E"],[2392,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2393,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2394,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2395,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2396,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2683,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2684,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2685,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2686,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2687,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2697,"impl-PartialEq-for-DataType"],[2698,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2705,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2706,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2707,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2708,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2709,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2743,"impl-Debug-for-PlSmallStr"],[2744,"impl-Display-for-PlSmallStr"],[2748,"impl-Display-for-AnyValue%3C\'_%3E"],[2749,"impl-Debug-for-AnyValue%3C\'a%3E"],[2751,"impl-Display-for-DataType"],[2752,"impl-Debug-for-DataType"],[2755,"impl-Debug-for-TimeUnit"],[2756,"impl-Display-for-TimeUnit"],[2760,"impl-From%3CString%3E-for-PlSmallStr"],[2761,"impl-From%3C%26String%3E-for-PlSmallStr"],[2762,"impl-From%3C%26str%3E-for-PlSmallStr"],[2763,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2767,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2768,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2781,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2782,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2783,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2784,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2786,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2789,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2790,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2791,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2794,"impl-From%3C%26ArrowField%3E-for-Field"],[2795,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2819,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2820,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2827,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2828,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2829,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2830,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2831,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2832,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2833,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2834,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2852,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2853,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2854,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2855,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2856,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2859,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2860,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2861,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2862,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2863,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2899,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2900,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2901,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2902,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2903,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2904,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3009,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3010,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3011,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3012,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3013,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3062,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3063,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3064,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3065,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3066,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3067,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3102,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3103,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3104,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3105,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3106,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3107,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3108,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3109,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3115,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3116,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3117,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3118,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3119,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3120,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3123,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3124,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3144,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3145,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3151,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3152,"impl-Logical%3CDurationType,+Int64Type%3E"],[3158,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3159,"impl-Logical%3CTimeType,+Int64Type%3E"],[3160,"impl-Logical%3CDateType,+Int32Type%3E"],[3175,"impl-Logical%3CDurationType,+Int64Type%3E"],[3176,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3226,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3227,"impl-Logical%3CDateType,+Int32Type%3E"],[3228,"impl-Logical%3CTimeType,+Int64Type%3E"],[3233,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3234,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3531,"impl-Display-for-ErrString"],[3532,"impl-Debug-for-ErrString"],[3533,"impl-Display-for-PolarsError"],[3534,"impl-Debug-for-PolarsError"],[3538,"impl-From%3CParquetError%3E-for-PolarsError"],[3539,"impl-From%3CError%3E-for-PolarsError"],[3540,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3541,"impl-From%3CError%3E-for-PolarsError"],[3542,"impl-From%3CError%3E-for-PolarsError"],[3544,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3677,"impl-Display-for-DataFrame"],[3678,"impl-Debug-for-DataFrame"],[3710,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3711,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3712,"impl-Index%3C%26str%3E-for-DataFrame"],[3713,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3714,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3715,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3716,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3717,"impl-Index%3Cusize%3E-for-DataFrame"],[3736,"impl-DataFrame"],[3737,"impl-Container-for-DataFrame"],[3744,"impl-DataFrame"],[3745,"impl-Container-for-DataFrame"],[3787,"impl-DataFrame"],[3788,"impl-Container-for-DataFrame"],[3792,"impl-Container-for-DataFrame"],[3793,"impl-DataFrame"],[3816,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3817,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3997,"impl-Display-for-GroupByMethod"],[3998,"impl-Debug-for-GroupByMethod"],[4004,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4005,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4007,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4040,"impl-IntoIterator-for-GroupsIdx"],[4041,"impl-IntoIterator-for-%26GroupsIdx"],[4043,"impl-IntoParallelIterator-for-GroupsIdx"],[4044,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5383,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5384,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5388,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5389,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5417,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5418,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5441,"impl-Flags-for-OptFlags"],[5442,"impl-OptFlags"],[6175,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6176,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6177,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6187,"impl-Default-for-Arc%3CCStr%3E"],[6188,"impl-Default-for-Arc%3CT%3E"],[6189,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6190,"impl-Default-for-Arc%3Cstr%3E"],[6674,"impl-Expr"],[6675,"impl-PartialEq-for-Expr"],[6678,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6679,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6698,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6699,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6700,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6705,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6706,"impl-PartialEq-for-StructArray"],[6991,"impl-Debug-for-Duration"],[6992,"impl-Display-for-Duration"],[7007,"impl-Debug-for-JoinType"],[7008,"impl-Display-for-JoinType"],[7010,"impl-Display-for-JoinValidation"],[7011,"impl-Debug-for-JoinValidation"],[7031,"impl-Debug-for-Expr"],[7032,"impl-Display-for-Expr"],[7034,"impl-Debug-for-Operator"],[7035,"impl-Display-for-Operator"],[7037,"impl-Display-for-BooleanFunction"],[7038,"impl-Debug-for-BooleanFunction"],[7039,"impl-Debug-for-CategoricalFunction"],[7040,"impl-Display-for-CategoricalFunction"],[7041,"impl-Display-for-TemporalFunction"],[7042,"impl-Debug-for-TemporalFunction"],[7043,"impl-Display-for-PowFunction"],[7044,"impl-Debug-for-PowFunction"],[7045,"impl-Debug-for-StringFunction"],[7046,"impl-Display-for-StringFunction"],[7047,"impl-Debug-for-StructFunction"],[7048,"impl-Display-for-StructFunction"],[7049,"impl-Display-for-FunctionExpr"],[7050,"impl-Debug-for-FunctionExpr"],[7064,"impl-Debug-for-OptFlags"],[7065,"impl-UpperHex-for-OptFlags"],[7066,"impl-Binary-for-OptFlags"],[7067,"impl-LowerHex-for-OptFlags"],[7068,"impl-Octal-for-OptFlags"],[7071,"impl-Debug-for-Arc%3CT,+A%3E"],[7072,"impl-Display-for-Arc%3CT,+A%3E"],[7073,"impl-Pointer-for-Arc%3CT,+A%3E"],[7104,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7106,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7183,"impl-From%3Ci64%3E-for-Expr"],[7184,"impl-From%3C%26str%3E-for-Expr"],[7185,"impl-From%3Cu16%3E-for-Expr"],[7186,"impl-From%3Cf32%3E-for-Expr"],[7187,"impl-From%3Cu8%3E-for-Expr"],[7188,"impl-From%3Cbool%3E-for-Expr"],[7190,"impl-From%3Cu64%3E-for-Expr"],[7191,"impl-From%3Cf64%3E-for-Expr"],[7192,"impl-From%3Ci8%3E-for-Expr"],[7193,"impl-From%3CAggExpr%3E-for-Expr"],[7194,"impl-From%3Cu32%3E-for-Expr"],[7195,"impl-From%3Ci16%3E-for-Expr"],[7196,"impl-From%3Ci32%3E-for-Expr"],[7199,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7200,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7201,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7202,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7203,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7204,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7206,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7207,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7208,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7209,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7216,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7217,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7219,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7220,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7234,"impl-From%3CString%3E-for-Selector"],[7236,"impl-From%3C%26str%3E-for-Selector"],[7237,"impl-From%3CPlSmallStr%3E-for-Selector"],[7238,"impl-From%3CExpr%3E-for-Selector"],[7243,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7244,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7245,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7247,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7248,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7249,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7250,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7252,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7253,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7254,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7255,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7256,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7257,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7258,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7259,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7260,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7267,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7268,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7270,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7272,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7273,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7274,"impl-From%3CArrowSchema%3E-for-Schema"],[7275,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7276,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7285,"impl-OptFlags"],[7286,"impl-Flags-for-OptFlags"],[7291,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7292,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7301,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7302,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7315,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7316,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8456,"impl-StructArray"],[8457,"impl-Array-for-StructArray"],[8463,"impl-Array-for-StructArray"],[8464,"impl-StructArray"],[8726,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8727,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8731,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[8732,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9190,"impl-Array-for-StructArray"],[9191,"impl-StructArray"],[9445,"impl-LazyFileListReader-for-LazyCsvReader"],[9446,"impl-LazyCsvReader"],[9447,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9448,"impl-LazyJsonLineReader"],[9492,"impl-LazyCsvReader"],[9493,"impl-LazyFileListReader-for-LazyCsvReader"],[9494,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9495,"impl-LazyJsonLineReader"],[9536,"impl-StructArray"],[9537,"impl-Array-for-StructArray"],[10027,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10028,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10033,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10034,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10728,"impl-Debug-for-RollingFunction"],[10729,"impl-Display-for-RollingFunction"],[10759,"impl-Debug-for-RollingFunctionBy"],[10760,"impl-Display-for-RollingFunctionBy"],[10983,"impl-Add-for-%26Series"],[10984,"impl-Add%3CT%3E-for-Series"],[10985,"impl-Add-for-Series"],[10986,"impl-Add%3CT%3E-for-%26Series"],[11002,"impl-AsSeries-for-Series"],[11003,"impl-SeriesSealed-for-Series"],[11055,"impl-Div%3CT%3E-for-%26Series"],[11056,"impl-Div-for-Series"],[11057,"impl-Div%3CT%3E-for-Series"],[11058,"impl-Div-for-%26Series"],[11069,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11070,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11071,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11073,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11074,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11075,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11091,"impl-Debug-for-Series"],[11092,"impl-Display-for-Series"],[11097,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11098,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11099,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11100,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11102,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11108,"impl-FromIterator%3Cf64%3E-for-Series"],[11109,"impl-FromIterator%3C%26i8%3E-for-Series"],[11110,"impl-FromIterator%3C%26f64%3E-for-Series"],[11111,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11112,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11113,"impl-FromIterator%3Cu8%3E-for-Series"],[11114,"impl-FromIterator%3C%26u8%3E-for-Series"],[11115,"impl-FromIterator%3Cbool%3E-for-Series"],[11116,"impl-FromIterator%3C%26bool%3E-for-Series"],[11117,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11118,"impl-FromIterator%3C%26str%3E-for-Series"],[11119,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11120,"impl-FromIterator%3CString%3E-for-Series"],[11121,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11122,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11123,"impl-FromIterator%3C%26f32%3E-for-Series"],[11124,"impl-FromIterator%3Cf32%3E-for-Series"],[11125,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11126,"impl-FromIterator%3Cu16%3E-for-Series"],[11127,"impl-FromIterator%3C%26i64%3E-for-Series"],[11128,"impl-FromIterator%3C%26u16%3E-for-Series"],[11129,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11130,"impl-FromIterator%3Ci64%3E-for-Series"],[11131,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11132,"impl-FromIterator%3Cu32%3E-for-Series"],[11133,"impl-FromIterator%3C%26i32%3E-for-Series"],[11134,"impl-FromIterator%3Ci32%3E-for-Series"],[11135,"impl-FromIterator%3C%26u32%3E-for-Series"],[11136,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11137,"impl-FromIterator%3Cu64%3E-for-Series"],[11138,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11139,"impl-FromIterator%3C%26i16%3E-for-Series"],[11140,"impl-FromIterator%3C%26u64%3E-for-Series"],[11141,"impl-FromIterator%3Ci16%3E-for-Series"],[11142,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11143,"impl-FromIterator%3Ci8%3E-for-Series"],[11144,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11145,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11146,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11147,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11148,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11149,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11150,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11151,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11152,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11153,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11154,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11155,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11167,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11168,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11169,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11171,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11172,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11173,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11214,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11215,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11216,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11218,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11219,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11220,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11229,"impl-Mul%3CT%3E-for-%26Series"],[11230,"impl-Mul%3CT%3E-for-Series"],[11231,"impl-Mul-for-%26Series"],[11232,"impl-Mul-for-Series"],[11237,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11238,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11239,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11240,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11241,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11242,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11243,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11244,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11245,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11246,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11247,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11248,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11249,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11250,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11251,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11252,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11253,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11254,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11255,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11256,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11257,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11258,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11259,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11260,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11261,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11262,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11263,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11264,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11265,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11266,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11267,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11268,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11269,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11270,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11271,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11272,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11273,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11274,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11275,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11276,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11277,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11278,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11279,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11280,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11281,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11282,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11283,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11284,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11285,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11286,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11287,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11288,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11289,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11295,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11296,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11297,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11299,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11300,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11301,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11309,"impl-Rem%3CT%3E-for-Series"],[11310,"impl-Rem%3CT%3E-for-%26Series"],[11311,"impl-Rem-for-%26Series"],[11340,"impl-Sub-for-Series"],[11341,"impl-Sub%3CT%3E-for-Series"],[11342,"impl-Sub%3CT%3E-for-%26Series"],[11343,"impl-Sub-for-%26Series"],[11367,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11369,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11370,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11371,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAE4PmQ/VD9gP2Q/aD9sP3A/hD+QP6Q/qDxAQ","e":"OzAAAAEAAAAhZAQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAQBIAAsAVwAHAGAAAgBkAAYAbAAAAG8ABAB1ABYAjQAAAI8AEAChAAAApAADAKkAAgCwAA0AvwAVANcABwDgAAsA7gABAPIAHAAVARUALQETAEIBAwBHAREAWwEBAF8BAQBiAR4AgwECAIsBEACdAQMApAECAKkBAgCtAQYAtQEAALoBIQDhAQYA6gEIAPQBNQAtAhUARAICAEgCBABOAgUAWAIAAFoCGgB2AgcAggIRAJYCEACoAgAAqgIMALgCDgDKAgEA0AIAANICAQDVAgEA3AIAAOACBgDoAgAA6gICAO4CDQD9AgAA/wIoACoDAgAuAyMAVQM1AI0DCACaAxEArwNcABkEEgA3BAcAQARJAI0EDgCdBAEAoAQZALsEAAC+BA4A0AQCANYEAgDbBBwA+QQJAAQFCgAaBQEAIQUdAEMFEgBYBQAAWgUJAGYFAwBsBQEAcAUNAIcFAACKBQAAkQUHAJoFBwCvBQEAswUAALYFAwC+BQUAxQUEANEFCwDkBQQA6wUNAPsFBgAFBgcADgYBABIGFgAqBgcAMwYAADUGAAA4BgIAPgYQAFAGAABTBgAAVQYDAFoGAQBdBgIAYQYHAGoGAABsBgUAdAYBAHcGAAB5BgEAfAYDAIEGAwCGBgIAigYDAJAGAACTBgAAmwYAAKAGAACjBgEAqAYBAKsGAACuBgAAtgYAALwGAgDHBgYA0QYQAOQGBQDsBggA9wYDAPwGAQAABwAAAgcBAAgHBQARBwEAGgcBACYHAAAoBwEAKwcAAC4HAAAwBwAANAcAADYHAAA7BwwASgcCAFkHAABbBwcAZAcBAGcHAABrBwAAbQcDAHIHAQB1BwUAgQcWAJkHAQCdBwQAowcDAKoHBwC/BwMAxAcIAM4HBADVBwIA2QcFAOEHAADjBw0A9QcBAPkHAQD/BwEAAggBAAUIBQAMCAAADggAABEIAQAVCAAAFwgBABoIAAAcCAIAIAgMAC4IAAAwCAEAMwgAADUIAQA4CAAAOggBAD0IAAA/CAEAQggDAEkIAABNCAEAUQgAAFQIAABWCAAAWAgDAF0IAABgCAgAaggCAG8IBAB1CAEAeQgAAHsIAgB/CAEAhQgDAIoIAQCNCAAAjwgBAJIIAACUCAEAlwgAAJkIAQCcCAAAnggBAKEIAACjCAAApgglAM0IFwDmCG4AWAl5ANMJCADeCZwAfAoFAIMKMAC1ChIAyQoDANAKAQDeCgMA4woAAOYKAgDrCgEA7goAAAQLAQAHCwAADAsHABcLAAAaCwIAHgsFACULBAArCwUAMgsAADQLGgBUCw4AZQssAJMLAADACwcAyQsAAMsLAADNCwIA0QsDANYLAQDbCwAA3QsGAOULAADoCwIA7QsDAPILAAD1Cw4ABgwAAAkMDgAZDAAAHAwLACkMDQA4DAEAOwwAAD0MDQBMDAAAVAwAAFYMAABbDBAAbgwAAHAMAgB1DCEAmQwBAJ4MZgAGDTIAOg0BAD0NOQB4DQEAew0IAIUNAACHDQEAig0EAJANAQCVDQAAlw0CAJsNAACeDQQApA0EAKoNEgC+DREA0g0FANkNBADhDQUA6A0YAAQOAAAHDgoAEw4DABwOFAAzDg8ARA4AAE0OAQBRDgIAVQ4AAFcOAABcDgMAbQ4AAHQOAAB2DgAAeA4BAH8ODACSDgIAmg4AAJ0OAACiDgAAqA4BALcOAQC7DgAAwQ4AAMoOAQDNDgEA0Q4AANMOAQDbDgAA3Q4EAOUOBgDuDgoA+g4AAP0OAQACDwQADg8OAB4PAgAiDwoALg8BADEPAwA2DwMAOw8JAEYPBwBPDwEAUg8cAHAPKACaDwYApQ8BAKgPAACqDwAArQ8DALMPAAC3DwcAxw8NANYPAQDdDwMA4g8BAOYPAgDrDwAA7Q8gABEQDAAgEAUAJxAHADAQIwBWEA4AZhAOAHYQAAB4EAAAehADAIEQBgCLEA4AnBAGAKUQAACoEAgAshABALYQBAC8EAUAwxAAAMgQCQDTEAEA1xAEAN0QAQDgEAoA7BAAAO8QAADxEAkA/BAAAAERCQAMEQQAFREAABgRAAAgEQIAJxEAACoRAQAwEQoAPBESAFIRBwBbEQEAXhEFAGgRBABwEQQAehEDAH8RAACBEQsAjxEEAJURBQCdEQIAohEAAKURAACnEQIArBECALARBQC3EQQAvREDAMQRAgDKEQAAzBEBANARAADSEQQA2REPAOoRAADtEQEA8BEDAPYRAgD8ERYAFBIJACASAAAiEgEAJhIAACgSAQAsEgAALhIBADISAAA0EgUAPBICAEESAABEEgAARxIAAEkSAgBNEgIAURIKAF4SBwBnEgAAaRIAAG0SAQBxEgAAcxIAAHUSAQB4EgEAexIBAIASAACCEg0AkxIFAJoSBwCkEgIAqBIGALMSAQC2EgAAuBIBALsSBADBEgMAxhICAMoSAADMEgQA0hIAANQSBgDcEgQA4hIBAOUSAQDoEgEA6xIBAO4SAADwEgAA8hIAAPYSAgD7EgMAABMHAAoTAgAREwAAExMFABoTAwAgEwAAIhMAACUTAAAnEwMALBMCADATAAAyEwIANhMAADgTBwBBEwYAShMVAGETFAB5EwEAfBMGAIQTBQCMEwAAjhMBAJITAACUEwUAmxMEAKETAACjEwIAqBMBAK0TAQCyEwcAuxMDAMMTBgDLEwkA1xMDANwTCADmEwAA6BMCAO0TAgD0EwUA+xMSABAUAAASFAEAFhQAABgUAQAcFAAAHhQBACIUAAAkFAQAKxQDADAUAQAzFAEAORQJAEQUAABHFAYAUBQCAFQUXwC1FAQAvhQAAMAUAADDFAYAzBQAANQUAADYFAAA2hQAAN4UBQDoFAAA7BQAAPMUAAD3FAAAAxUCAAcVCAARFQAAExUBABYVAgAdFQEAIBUEACYVAQAuFQoAOxUAAD0VAABAFQAAQhUAAEQVAABGFQAASBX5AEMWAQBGFgEASRYAAEsWAgBRFgAAVRYAAFkWAABbFgAAXRYAAGMWAABmFgEAaRYAAHMWTwDEFgwA0ha7AI8XAQCVFwIAmxcCAKEXCgCwFwQAthcAALwXAAC+FwAAyRcBAM0XAADPFwAA1BcAANkXAQDoFwAA7hcAAPMXAgD5FwAA+xcFAAMYKAAwGAYBORkAAD4ZAQBBGQMASBkAAEoZAwBSGQgAXBlkAMIZDgDWGQEA2xkBAN8ZAADhGQAA4xkCAOcZKwAUGhYALBoMADwaswD0GgAA+xoAAP0aAQAAGwAAAhsAAAYbAAAKGwAADBsAABEbAAAUGwAAFxsAAB8bAAAiGwIAKRsGADEbAQA0GwAANhsDAD4bAABAGwAAQhsBAEcbaQCyGwAAtRsAAMEbAADDGwAA5hsAAO4bAADwGwAAEBwFABccBgAgHAUAJxwDADEcAQA0HAEANxwAAD8cAABDHAAARRwCAFEcAABUHAAAZBwBAGccAABpHAQAcBwAAHccAAB5HAAAfBwBAIAcAACGHAEAixwCAJEcBQCYHAIAnBwBAKAcAgCkHAAAphwAAKgcAACtHAAAthwAALkcAQC8HAIAwRwAAMQcAQDJHAEAzBwHANYcBADeHAEA4hwAAO0cAADvHEEANB0DADwdAAA+HQAAQB0EAEcdAABJHQAASx0BAE4dAABRHQEAVx0CAFwdgADfHQAA5R0CAOkdAQBrHgAAbR4HAHgeAwB9HgEAgB4DAIYeAQCKHgIAjh4BAJEeAACTHgAAlh4BAKMeAAClHgEAqR4BAKweAwCyHgIAwx4BAMYeAQDPHgAA0R4BANQeAADYHgIA3h4BAOEeAADoHgIA7R4BAPEeAgD1HgMA+x4OAA8fAAAVHwEAHB8AAB8fBQAoHwAAMB8CADwfAABHHwAATR8BAFEfAABUHwEAVx8AAFofAABfHwAAYR8AAGMfAABoHwAAbB8AAG4fAgB1HwYAgh8IAJAfAACSHwAAlh8AAJwfAACeHwQApx8BAKofAQCtHwAAsB8IALsfAQC+HwAAwR8BAMUfAADJHwAA0x8AANYfAQDhHwEA5B8EAO8fAgD3HwEA/h8CAAIgAgANIAAADyAEABUgBQAcIAMAJSADACogAAAsIAIAMiAAADQgAABAIAAAQyABAEYgAQBJIAMATyAFAFYgBABdIAAAYyAAAGkgAABvIAAAcSAAAHYgAAB6IAAAfCAAAH4gAQChIAAApiAAAK4gAwCzIAUAuyAAAMMgAADHIAIAyyAEANMgAADVIAEA2SABANwgAQDgIAAA5SADAOwgAAD3IAAA+SAAAPsgAAABIQMACiEBAA0hAAAPIQEAFCEAABYhAAAcIQMAISEHACohAAAsIQAAMCEAADYhAAA5IQAAPyEAAEMhCgBQIQIAVSEAAFghAgBjIQAAcyEAAHUhAAB4IQIAfCEDAIIhAQCFIQAAiCEAAIwhXwDuIQwA/CEAAAAiAQAFIgoAESIAABMiAQAWIo8AqCIAAKwifAAsIwAALiMDADkjAAA8IxAATiN7AMsjAADTIwAA2CMAANojAADcIwAA4iMFAOkjAQDtIwEA8SMAAPUjAAD7IwEA/iMAAAAkfACDJAMAjCQAAI8kAQCUJAEAmSQBAJwkAACkJAAAqCQBAK4kAAC0JAAAviQAAMUkAQDQJAMA1yQBAOYkAADoJAAA7CQAAO4kAADxJAAA9yQBAPokAwACJQAADyUAABYlAQAbJQAAIyUAACglAAA0JQAAOCUAADolAQBCJQIASCUUAF4lAQBkJQEAZyVIALIlAAC0JQAAtiUBALklAQC8JQYAxCU1APslBAABJgEABCYJABAmBQAXJgkAIiYBACUmAAApJgAAKyYDADAmAQAzJgUAPSYSAFEmAQBUJgIAWSYAAF0mFgB1JhcAkSYEAJomEwCvJgYAxiYAANQmAgDqJgAA8SYIAP4mAAAAJwwADicCABInEgAmJwEAKScPADonGQBWJwAAWCcCAF0nCgBpJwEAbCcFAHMnCAB9JwQAhCcCAIgnBQCQJwAAkicNAKQnAQCoJwEAricBALEnAQC0JwMAuScAALsnAAC+JwEAwicAAMQnAQDHJwAAyScCAM0nDADbJwAA3ScBAOAnAADiJwEA5ScAAOcnAQDqJwAA7CcBAO8nAwD2JwAA+icBAP4nAAABKAAAAygAAAUoAwAKKAAADSgIABcoAgAcKAQAIigBACYoAAAoKAIALCgBADIoAwA3KAEAOigAADwoAQA/KAAAQSgBAEQoAABGKAEASSgAAEsoAQBOKAAAUCgAAFMoEgBnKAYAcCgAAHMoEQCGKAgAkCgBAJMoCACdKAAAnygBAKUoAACnKAQAsCgBALkoAgC/KAAAwSgAAMsoAADaKAMA4igKAO4oAADwKAgA+yjvAOwpAQDvKRoACyoBAA4qEAAhKhIANSoAADcqFwBQKgEAVCoAAFYqCwBjKgIAaioAAHoqAwCBKgcAlioFAJ4qAACnKgAAqSoBALAqBgC4KgAAvioKANIqBQDZKgAA2yoDAOAqBQDoKgQA7ioBAPIqAAD4KgQAASsCAAUrCQASKwIAFisAABorAgAeKwMAJisRADsrAQA+KwEAQysBAEcrAgBTKwMAWisDAF8rAABiKwEAZSswAJkrAACbKwAAoCsAAKIrAACkKwAApisAAKgrAACuKwEAsSsDALkrAwDEKwIAyCsAAMorAADNKwAA0CsBANMrAADVKwAA2SsAAN4rAwDjKwAA5isxABksAQAdLAEAICwBACQsAAAmLAAAKSwBAC4sAgAzLAEANiwAADksAgA/LAEAQiwAAEQsAABGLAAASiwAAE0sAwBWLAAAXiwAAGAsAQBjLA8AdCwFAIAsAACDLAMAiCwAAIssCwCYLAAAmiwAAJwsBACiLBYAuywBAL8sDwDQLAEA0ywEAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPITTPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPFGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNCNNNNNNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNMNMNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","DurationType","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","eq","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","","gt_eq","","","","","","hash","","","","","","","hash_impl","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","","lt_eq","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","strict_cast","string_cache","sub","subtract","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_data_type","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","data_type","","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","eq","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","extract","fields","filter","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_names_owned","get_names_str","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","from","init","into","into_series","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","","","fmt","from","","","","","","","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","","get_names_and_dtypes","","get_names_owned","","get_names_str","","hash","index_of","","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","select","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","","BitRepr","ChunkCompare","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[441,"polars_core::chunked_array::arithmetic"],[469,"polars_core::chunked_array::builder"],[577,"polars_core::chunked_array::builder::list"],[731,"polars_core::chunked_array::cast"],[760,"polars_core::chunked_array::collect"],[774,"polars_core::chunked_array::float"],[776,"polars_core::chunked_array::from_iterator_par"],[780,"polars_core::chunked_array::iterator"],[817,"polars_core::chunked_array::iterator::par"],[819,"polars_core::chunked_array::metadata"],[1104,"polars_core::chunked_array::object"],[1181,"polars_core::chunked_array::object::builder"],[1204,"polars_core::chunked_array::object::registry"],[1232,"polars_core::chunked_array::ops"],[1357,"polars_core::chunked_array::ops::arity"],[1393,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1395,"polars_core::chunked_array::ops::gather"],[1398,"polars_core::chunked_array::ops::search_sorted"],[1428,"polars_core::chunked_array::ops::sort"],[1435,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1436,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1444,"polars_core::chunked_array::ops::sort::options"],[1521,"polars_core::chunked_array::temporal"],[1522,"polars_core::chunked_array::temporal::conversion"],[1525,"polars_core::config"],[1529,"polars_core::datatypes"],[2978,"polars_core::datatypes::categorical"],[3119,"polars_core::datatypes::categorical::revmap"],[3173,"polars_core::datatypes::categorical::string_cache"],[3192,"polars_core::datatypes::revmap"],[3198,"polars_core::datatypes::string_cache"],[3202,"polars_core::error"],[3269,"polars_core::error::PolarsError"],[3273,"polars_core::error::constants"],[3276,"polars_core::export"],[3283,"polars_core::fmt"],[3314,"polars_core::frame"],[3590,"polars_core::frame::explode"],[3619,"polars_core::frame::group_by"],[3858,"polars_core::frame::group_by::GroupByMethod"],[3859,"polars_core::frame::group_by::GroupsProxy"],[3861,"polars_core::frame::group_by::aggregations"],[3874,"polars_core::frame::group_by::expr"],[3877,"polars_core::frame::row"],[3974,"polars_core::functions"],[3976,"polars_core::hashing"],[4024,"polars_core::prelude"],[4662,"polars_core::prelude::PolarsError"],[4666,"polars_core::prelude::default_arrays"],[4672,"polars_core::prelude::list"],[4695,"polars_core::prelude::null"],[4726,"polars_core::prelude::revmap"],[4732,"polars_core::prelude::slice"],[4735,"polars_core::prelude::string_cache"],[4739,"polars_core::prelude::utf8"],[4743,"polars_core::random"],[4744,"polars_core::scalar"],[4770,"polars_core::scalar::reduce"],[4771,"polars_core::schema"],[4856,"polars_core::series"],[5272,"polars_core::series::amortized_iter"],[5296,"polars_core::series::arithmetic"],[5321,"polars_core::series::arithmetic::checked"],[5329,"polars_core::series::ops"],[5356,"polars_core::utils"],[5567,"polars_core::utils::flatten"],[5572,"dyn_clone::sealed"],[5573,"num_traits"],[5574,"num_traits::cast"],[5575,"polars_error"],[5576,"polars_core::series::arithmetic::borrowed"],[5577,"polars_core::frame::group_by::proxy"],[5578,"core::option"],[5579,"core::iter::traits::iterator"],[5580,"polars_utils::pl_str"],[5581,"core::ops::function"],[5582,"core::marker"],[5583,"alloc::string"],[5584,"polars_core::datatypes::dtype"],[5585,"polars_arrow::array::binview::view"],[5586,"polars_core::datatypes::aliases"],[5587,"polars_core::series::arithmetic::borrowed::checked"],[5588,"polars_arrow::array"],[5589,"alloc::vec"],[5590,"compact_str"],[5591,"core::iter::traits::double_ended"],[5592,"core::fmt"],[5593,"core::iter::traits::collect"],[5594,"polars_arrow::bitmap::immutable"],[5595,"rayon::iter"],[5596,"polars_arrow::trusted_len"],[5597,"polars_core::datatypes::any_value"],[5598,"polars_utils::index"],[5599,"std::sync::rwlock"],[5600,"polars_core::chunked_array::logical::decimal"],[5601,"core::iter::traits::exact_size"],[5602,"polars_core::series::series_trait"],[5603,"core::slice::iter"],[5604,"core::iter::adapters::map"],[5605,"core::convert"],[5606,"polars_core::chunked_array::metadata::guard"],[5607,"polars_core::chunked_array::metadata::interior_mutable"],[5608,"alloc::sync"],[5609,"polars_core::chunked_array::metadata::md_trait"],[5610,"core::ops::range"],[5611,"polars_core::datatypes::field"],[5612,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5613,"polars_core::chunked_array::ops::rolling_window"],[5614,"polars_utils::aliases"],[5615,"polars_utils::hashing"],[5616,"ndarray::aliases"],[5617,"either"],[5618,"core::result"],[5619,"core::any"],[5620,"polars_core::chunked_array::arithmetic::numeric"],[5621,"polars_core::chunked_array::builder::string"],[5622,"polars_arrow::array::binview"],[5623,"polars_core::chunked_array::builder::boolean"],[5624,"polars_core::chunked_array::builder::null"],[5625,"polars_core::chunked_array::builder::primitive"],[5626,"core::clone"],[5627,"polars_core::chunked_array::builder::list::anonymous"],[5628,"polars_core::chunked_array::builder::list::boolean"],[5629,"polars_core::chunked_array::builder::list::primitive"],[5630,"polars_core::chunked_array::builder::list::binary"],[5631,"polars_core::chunked_array::builder::list::null"],[5632,"alloc::boxed"],[5633,"core::hash"],[5634,"polars_arrow::array::boolean"],[5635,"polars_core::chunked_array::metadata::env"],[5636,"polars_core::chunked_array::metadata::collect"],[5637,"bitflags::iter"],[5638,"std::fs"],[5639,"std::sync::mutex"],[5640,"polars_arrow::datatypes"],[5641,"polars_arrow::bitmap::utils::iterator"],[5642,"polars_arrow::bitmap::utils::zip_validity"],[5643,"polars_arrow::offset"],[5644,"polars_arrow::array::static_array"],[5645,"core::error"],[5646,"polars_arrow::array::primitive"],[5647,"polars_arrow::legacy::array::slice"],[5648,"polars_row::row"],[5649,"polars_arrow::array::binary"],[5650,"chrono::naive::datetime"],[5651,"alloc::borrow"],[5652,"polars_arrow::array::static_array_collect"],[5653,"bytemuck::zeroable"],[5654,"polars_core::chunked_array::logical::categorical"],[5655,"polars_core::chunked_array::logical::categorical::merge"],[5656,"polars_core::chunked_array::logical"],[5657,"polars_core::datatypes::time_unit"],[5658,"polars_arrow::datatypes::physical_type"],[5659,"polars_arrow::types"],[5660,"core::borrow"],[5661,"polars_arrow::pushable"],[5662,"polars_core::datatypes::into_scalar"],[5663,"core::cmp"],[5664,"polars_core::chunked_array::logical::categorical::builder"],[5665,"polars_core::chunked_array::logical::categorical::revmap"],[5666,"polars_core::chunked_array::logical::categorical::string_cache"],[5667,"polars_error::warning"],[5668,"polars_core::series::from"],[5669,"polars_arrow::datatypes::schema"],[5670,"polars_core::chunked_array::ndarray"],[5671,"polars_arrow::array::struct_"],[5672,"polars_arrow::record_batch"],[5673,"polars_utils::idx_vec"],[5674,"rayon::iter::plumbing"],[5675,"polars_core::frame::group_by::into_groups"],[5676,"core::iter::adapters::copied"],[5677,"core::iter::adapters::zip"],[5678,"polars_arrow::legacy::kernels::rolling"],[5679,"polars_utils::float"],[5680,"polars_arrow::types::native"],[5681,"polars_core::frame::group_by::aggregations::agg_list"],[5682,"polars_core::frame::row::av_buffer"],[5683,"polars_core::hashing::identity"],[5684,"hashbrown::map"],[5685,"polars_core::hashing::vector_hasher"],[5686,"core::alloc"],[5687,"std::os::fd::owned"],[5688,"std::os::fd::raw"],[5689,"std::ffi::os_str"],[5690,"std::path"],[5691,"core::mem::maybe_uninit"],[5692,"polars_arrow::legacy::kernels::time"],[5693,"core::default"],[5694,"core::ffi::c_str"],[5695,"polars_arrow::scalar"],[5696,"std::io::error"],[5697,"alloc::collections"],[5698,"simdutf8::basic"],[5699,"regex::error"],[5700,"alloc::ffi::c_str"],[5701,"polars_arrow::legacy::array::default_arrays"],[5702,"polars_arrow::buffer::immutable"],[5703,"polars_arrow::array::list"],[5704,"polars_core::named_from"],[5705,"polars_core::chunked_array::ops::aggregate"],[5706,"polars_core::chunked_array::ops::aggregate::quantile"],[5707,"polars_arrow::legacy::index"],[5708,"core::pin"],[5709,"core::io::borrowed_buf"],[5710,"std::io"],[5711,"polars_core::chunked_array::ops::aggregate::var"],[5712,"alloc::collections::btree::map"],[5713,"polars_arrow::legacy::array::list"],[5714,"polars_arrow::legacy::array::null"],[5715,"polars_arrow::bitmap::mutable"],[5716,"polars_arrow::array::utf8"],[5717,"polars_core::series::iterator"],[5718,"alloc::rc"],[5719,"polars_core::utils::supertype"],[5720,"polars_arrow::legacy::utils"],[5721,"polars_arrow::legacy::trusted_len::rev"],[5722,"core::iter::sources::repeat"],[5723,"core::iter::adapters::take"],[5724,"polars_core::chunked_array::object::extension"],[5725,"polars_error::constants"],[5726,"polars_core::frame::horizontal"],[5727,"polars_arrow::legacy::prelude"],[5728,"polars_arrow::legacy::array"],[5729,"polars_arrow::legacy::array::utf8"],[5730,"polars_core::utils::any_value"],[5731,"polars_core::utils::schema"],[5732,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kd000l0000000000000000000000000000000000`00000000101``0000000000000`0`0000000101000000010000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`Ol00000000000000000000000000````````A@`A@dA@fA@hOn432140043143214321432143214321432143214321044A@lA@n5436543AA`00076547654`7654365476547654765476547654````````AAb0AAdAAfAAh0AAj43AAlAAn4AB`47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`El000000000000000000000000000``ABfABh1000101000`ABj``ABlABn```ACbACd101010101010101011010`1010101010``ADbIfFj0Hj`3Kl22````````42110Kn4ACf4343434343434433434321560432156043150431504315043ACh054542654332671543267154541Lb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADf00000Hn1111`11111111001111111111111111111``111111101111111110I`22222222222`AEd000000000000000000000````AEh00AEj0000000```00`0`10000AFl```````````````````````````0AFb``AFn22222CD`30332AFd033AFf0AFh`66AFj00777777755AG`0`AGdAGf`::`AGhAGj`AGl0;;===AGnAH`==AHb0AHd11;AHfAFn0;2AHhAHjAHl0`0AHnAI``AFf0AIb:AIdAIfAIhAFl000AFh51`AIj`AJdAJ`AIl`````````````````````````````````````AJh00`0`000000000000000000`00000`````AJj0````````````EbEf101010101010101010101011100010110010101010101010221010101010101010010010````````AMh`Bn``````HfDlADh`1``2`0210```21`````````100`1`2100``010`210```0040210``210```BBl`4CDbCDd``````7``543``543``543``543``3`666333BBn654``3``4AOdAMl1010n987`98`9``:3:```````````B@``3`<:9`:`8988```80`:98``:98``:98``:98``898`88AIn0<0AMdAMf=?<AMjMf7AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdDnIlFn0Cn00Eh00HfIjMbLnLhLfCjClDhDbAl?=<;AEf>>Dn0??0?>=100AKjAKlFnCnEh21010552106521061210AKb32103217AKn0AL`04HfDlMfALbAIn=::::::AMdCDfBljIjHlAMf;AMh;AMj;AMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdAMdCDfBljIjHlAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdDl`AMb0Hf2DnFnCnEhAKb6Il54321`IjMbLnLhLfCjClAMdAMf?AMhDlAMjMfAMlAMnAN`>=ANbANd>=<;ANfANhDhDbANjAlANlANnAO`AObADhAOdAMdAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdAMdAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdMfAOf000Dl00`2HfAMh26AMd0CDfBljIjHlAMf879AMj<AMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdAMd0CDfBljIjHlAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdIlIjMbLnLhLfCjClAMdCDfBlj:HlAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdAMbIlHfMf1AMhDl0AMj3AMl985DnFnCn0Eh0321100999777666555888444===<<<3AMd3121AEfAM`6431AMf==;::9<88ADhAOd95CDfBljIjHl7Hf00000AMhDl000AMjMf00AMl0AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADh00AOdDlDn00FnCn0Eh0AEf32104432211AKb01432154433225432143214AIn00654312065431260IlAMb08765341008765348BnjIjHlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObDnAEf0HfB@lAIn4CnAKb6Fn2Eh278133008133006AMhDlMfAMlADhAOd<4AMdCDfBljIjHlAMfHf=<AMj<;AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdDnDl3AMdCDfBljIjHlAMfHfAMh9AMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdB@n0DnFnCnEhAKbAEfBA`Il8HfDl001000010100000<1010100001000010<AIn:01:98877:98877``1AMh::98:AKjAKl10`<<;:<6IjMbLnLhLfCjClCnEhMf0CDbCDdBBf55554444AEf040DnFn87AKb333AMdAMj3343;;::43;;::404;4;HfAMl3Il4AKjAKl108IjMbLnLhLfCjClDnFnCnEhAKbAEf`?AMd54354354366Mf76543276543265436543AKjAKlHf`IlIjMbLnLhLfCjClFn0EhCn011Dl?AMl102DnADh1AMdAMfHfAMh7AMjMf8AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdDl2IlAMdHf3AMlEh2Dn0AKn0AL`0AOf00067CDfBljIjHlAMf<AMhDlAMjMf?AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdAMdCDfBljIjHlAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdHfDl10AMlDnAMdCDfBljIjHlAMf:AMh:AMjMf;AMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOd1FnCnEhAEfAIn0Dl1AKjAKl7BAhBAjAOjBAlBAnBB`BBbBBdB@n:9?>AKb>Fn:98765432<;CnEh3AEfAMdCDfBljIjHlAMfHfAMhDlAMjMfAMlAMnAN`MbLnANbANdLhLfCjClANfANhDhDbANjAlANlANnAO`AObADhAOdCDbCDdBBfEdAInHfDn`````BBl`BBn10`ALn00BBh10010BC`BBj32103`3333021032103221033333333AM`313214444444444444432143214244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCf0000`00`0000000`0`7676`````BCjAKf000Af`112101```11111112BCh3030`3003030`300300`3030`0``````0303003030CDhCDj10```````````BCn0000000000`0`````00`````00000BDh`0BDf11``0``01BCd0000000000000000BElBEn3421034222342342342224210342103422221034222222222242224442`222222342210342222222222222222`2224222222222222221034221034210222222222222222222222102222222222222222`22222222222222222102222222222222222222342222221034222221034221034222222210342222222`BFl000000000000000000000000000`BGb0``0``````BGjAj`2`22222222210`222BFn1BE`40`1023BHdBGfBGd453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BGn04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CDlCDn0``````````BI`BIb0`BId0BIfBIh``101010101010`10101010BDn211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BIjBIl10110101010100001010`101010BJb0002122222`````````BFf```````````AKf00`0`Bf0BNdAf4```BBl`Ml5``````5```3BBn`1``````211``1`6`BHj5BKj````582````````60````88`88``8`1`8`8````7ObBKdL`Mn=B@bBDl9BKfBKh85555????5?55AKfBf098776BNdBFf76?54<32;:981076?54<`98BKb03<;:9187Ml76>4=<;:298076>4=<;:298076>4;AOf0005<66`::`8<<5<<<<;3:91`655>=<<;43:9187?65>=<;43:9187?<`<<<65>=<<;43:9187?5><<<;3:91?555>>><<<333:::999111???=99AM`=7766?>===<4;:298BKj=8888877777Ob0BKdL`00000000000000000Mn:9B@bBDl09BKfBKh8BMjBMnBN`Bf00000009CE`0000:::11BNd2BNf<<<9999Fd=4=BFf<MlBKjObL`0?`AKf:2BKd2Mn:7B@bBDl8BKfBKh98506Bf9685?<43;21:88880369489883`8``8BO`0BOb67116:BOdBOf<8<<<<<<<<<<`=:4<<<````533<<2<<<<<`<`AJj0=C@b<`>55?6?<>;BFf;:Ml:9BKjAKf:L`AOf0002<ObBKd33MnBNd9B@bBDl:BKfBKh;:Bf87:65>43=21<BOd;;;;;;;;4<1;;<198;76?54>32=;`C@b=2:9<87BFf76Ml65BKj?;;9AKfL`7770CDhCDj10```BMjBMnBN``C@l000000000000000000000`CA`00000000000000000000000000000`BBlBBn10``AJj0``````CEbCEd``Kh0000000000000000`0000000`CAf0````BDb0000000000`000000000000000000CAj121010110111111111111111111111111111111111011111Jf0``00```CEf11````01Ad000000`0BNl000`10001001001110000001CB`3420342122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`20342034220BDd32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`3322233323325223333222331233222322223333333322332222333533331453333314533333314533333223222221453333``Cf000000000000000000000```CBf0CBhAh0`2100210021002100``BKbEn0100CBj0`000000000000000000000000CBl0``````````0CBnCCb```````211````22222222CCjAJl43210432CC`543543543``CCd06``6653322654322654632654``636533366655565`6666653265546666226CCh337333````4764376577743765375BFb6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}{{Af{b}}}{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}e}CnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Db}}}}c}{{l{Db}}}{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Ch{{f{Dj}}}{{C`{{f{Dj}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}Dlg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dn}}}}{{{f{{l{c}}}}g{f{Bh{Df{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Ch{E`{f{Dj}}}{{C`{E`}}}}Cd}}{{{f{{l{c}}}}Eb}Edn}{{{f{{l{c}}}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}n}{{{f{{l{c}}}}}{{Af{Ed}}}n}`{{{f{{l{Dh}}}}}Eh}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Dl}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEj{}}00{f{{f{c}}}{}}0{{{f{Bh}}}{{f{Bhc}}}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Dl}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Dl}}El}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}En}{{{f{{l{c}}}}e}{{Af{Ad}}}EnAb}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{F`}}}}}}}Bn}{{{f{{l{c}}}}}FbBn}{{{f{{l{c}}}}}{{f{{Ff{Fd}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Ff{Fd}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{f{f{Bhc}}}b{}}{fb}`{{{f{Bh{l{c}}}}}b{Bnn}}`{fFh}{{{f{{l{c}}}}}{{Af{{f{Df}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fj}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fj}bBnBn}{{{f{{l{c}}}}}{{`{{Fl{}{{B`{{f{Df}}}}}}}}}n}{{}{{l{c}}}Bn}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{F`b}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Dl}}}Bn}{{{f{{l{c}}}}e}FnnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fnn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}{{Af{b}}}n}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fn}}}{{Af{{l{c}}}}}{{Bn{}{{G`{Bl}}{Gb{Bl}}}}}}{{{f{{l{c}}}}}{{An{F`}}}Bn}`{{{f{{l{Al}}}}{f{BhGd}}}Gf}{{{f{{l{c}}}}{f{BhGd}}}Gfn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Gh{{Bn{}{{Gj{c}}}}}}{cc{}}0{{Bfc}{{l{e}}}Gl{{Bn{}{{Gj{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gj{}}}}Bn}Gl}{{Bf{Ff{Fd}}}{{l{c}}}Bn}{{Bf{Ff{Fd}}Dl}{{l{c}}}Bn}{c{{l{Al}}}{{Gl{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{c{{l{e}}}{{Gl{}{{B`{{H`{Ff{An{Gn}}}}}}}}}n}{{Bfc}{{l{e}}}{{Bd{}{{B`{An}}}}}n}32{{Bfc}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Hb{}{{B`{An}}}}}n}{{Bf{f{Df}}}{{l{c}}}n}{{Bf{f{{Df{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Hd{}{{B`{An}}}}}n}{{BfFf}{{l{c}}}n}{{BfFf{An{Gn}}}{{l{c}}}n}{{BfF`}{{l{c}}}n}0{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{BfF`{f{Dl}}}Dn}{{{f{{l{c}}}}F`}AnBn}{{{f{{l{c}}}}F`}{{Af{Hf}}}n}{{{f{{l{c}}}}F`}Hfn}{{{f{{l{j}}}}F`}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hh}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HjBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hl{c}}}}}}F`}{{An{{f{Hn}}}}}I`}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}F`dF`}AjEj}{{{f{{l{c}}}}{f{{l{c}}}}}Fnn}{{{f{{l{c}}}}e}FnnAb}108{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{}F`}0{{F`Ib{An{Id}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Dl}}}}{{{f{{l{c}}}}}{{Ih{{If{c}}}}}Bn}{{}c{}}0{{{l{Ij}}{An{F`}}F`}{{Af{Il}}}}{{{l{Ij}}{An{F`}}F`}Il}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{InJ`{Jb{}{{B`{}}}}FlHd}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FnJd}000{{{f{{l{c}}}}}FnBn}02{{{f{{l{c}}}}}JfBn}{{{f{{l{c}}}}}{{`{{Jh{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jj}}}}}}}}{{{f{{l{c}}}}}{{K`{{Jl{Fd}}{Jn{{f{Fd}}}{{C`{{An{{f{Gn}}}}}}}}}}}Bn}`{{fc}Fh{{Kb{Dj}}}}{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{F`}}}Bn}{{{f{{l{c}}}}}{{Kd{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}F`Bn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Kf}}00{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{{f{{l{c}}}}e}FnnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fnn}10{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Khn}{{{f{{l{c}}}}}{{An{Kj}}}n}{{{f{{l{Al}}}}}{{An{Kj}}}}{{{f{{l{c}}}}}{{An{Kj}}}Ej}{{{f{{l{c}}}}}KhEj}{{{f{Bh{l{c}}}}{If{c}}}bBn}`{{{f{{l{c}}}}}{{Kl{c}}}Bn}{{{f{{l{c}}}}}{{f{{L`{{Kn{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Ld{Lb}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{L`{{Kn{c}}}}}}}Bn}{{{f{{l{c}}}}}{{L`{{Kn{c}}}}}Bn};<{{{f{{l{c}}}}}{{An{H`}}}n};{{Bf{f{{Df{Dd}}}}F`F`}{{l{Al}}}}{{Bf{f{Df}}}{{l{c}}}n}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}F`Bn}{{{f{{l{c}}}}}{{Af{F`}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{Bfc}{{l{Lf}}}{{Kb{{Df{{An{Jj}}}}}}}}{{Bfc}{{l{Lh}}}{{Kb{{Df{{An{Lj}}}}}}}}{{Bfc}{{l{Db}}}{{Kb{{Df{{Ff{Dd}}}}}}}}{{Bfc}{{l{Dh}}}{{Kb{{Df{D`}}}}}}{{Bfc}{{l{Cl}}}{{Kb{{Df{{An{Kj}}}}}}}}{{Bf{Ll{Jj}}}{{l{Lf}}}}{{Bf{Ll{Lj}}}{{l{Lh}}}}{{Bf{Ll{Id}}}{{l{Ln}}}}{{Bf{Ll{M`}}}{{l{Mb}}}}{{Bfc}{{l{Mb}}}{{Kb{{Df{M`}}}}}}{{Bfc}{{l{Ln}}}{{Kb{{Df{{An{Id}}}}}}}}{{Bfc}{{l{Ln}}}{{Kb{{Df{Id}}}}}}{{Bfc}{{l{Lh}}}{{Kb{{Df{Lj}}}}}}{{Bfc}{{l{Lf}}}{{Kb{{Df{Jj}}}}}}{{Bfc}{{l{Ij}}}{{Kb{{Df{Md}}}}}}{{Bfc}{{l{Cj}}}{{Kb{{Df{Ib}}}}}}{{Bfc}{{l{Cl}}}{{Kb{{Df{Kj}}}}}}{{Bfc}{{l{Dh}}}{{Kb{{Df{{An{D`}}}}}}}}{{Bfc}{{l{Db}}}{{Kb{{Df{{An{{Ff{Dd}}}}}}}}}}{{Bfc}{{l{Al}}}{{Kb{{Df{{An{d}}}}}}}}{{Bfc}{{l{Ij}}}{{Kb{{Df{{An{Md}}}}}}}}{{Bfc}{{l{Cj}}}{{Kb{{Df{{An{Ib}}}}}}}}{{Bfc}{{l{Al}}}{{Kb{{Df{d}}}}}}{{Bfc}{{l{Mb}}}{{Kb{{Df{{An{M`}}}}}}}}{Bf{{l{{Hl{c}}}}}I`}{{{f{{l{c}}}}F`F`}{{l{c}}}n}{{Bf{Ff{c}}}{{l{{Hl{c}}}}}I`}{{Bf{Ff{c}}Gn}{{l{{Hl{c}}}}}I`}{{BfFf}{{l{c}}}n}{{{L`{Mf}}{Ff{Fd}}HhHh}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jd}{{{f{{l{c}}}}e}FnnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fnn}01{{{f{{l{c}}}}}F`Bn}``{{{f{{l{j}}}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Mh{}{{B`{{An{{f{Dj}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mj{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Mj{}{{B`{{An{{f{Dj}}}}}}}}}}}}{{{f{{l{c}}}}}Khn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KjMl}{{Af{{An{Kj}}}}}Ej}{{{f{{l{c}}}}KjMl}{{Af{Kh}}}Ej}{{BfF`Kj}{{Af{{l{Al}}}}}}{{BfF`KjKj}{{Af{{l{c}}}}}n}{{BfF`}{{l{c}}}n}{{BfF`KjKj}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Mf}}}Bn}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}Bf}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mn}{{Af{Ad}}}n}{{{f{{l{c}}}}F`e}{{Af{{l{c}}}}}Jd{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Kjdd{An{Id}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}F`dd{An{Id}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gl{}{{B`{Hh}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gl{}{{B`{Hh}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fn}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Dl}b}{{{f{Bh{l{c}}}}Hh}bBn}{{{f{Bh{l{c}}}}Jf}bBn}{{{f{{l{c}}}}Jj}{{l{c}}}n}{{{f{{l{c}}}}JjAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JjF`}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Eb}{{l{c}}}n}{{{f{{l{c}}}}Jj}{{H`{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Dd}{{An{Kj}}}n}{{{f{{l{c}}}}Dd}KhEj}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hh}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Khn}{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{Ed}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kb{{Df{Hh}}}}N`}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{G`{Bl}}{Nb{Bl}}}}Bn}{{Kb{{Df{Hh}}}}N`}}{{{f{{l{c}}}}{f{Ed}}}{{l{c}}}{{Bn{}{{G`{Bl}}{Nb{Bl}}}}Bn}}`{{{f{{l{c}}}}dNd}{{Ff{{Ff{Nf}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jd}{{{f{{l{Dh}}}}F`}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Dl}b}{{{f{{l{j}}}}}{{Af{Nh}}}}{{{f{{l{c}}}}}{{Af{Nj}}}n}{fc{}}{{{f{{l{Db}}}}}Cn}{{{f{{l{c}}}}}{{Ff{An}}}n}{{{f{{l{c}}}}}{{Nl{Ff{Ff{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}g}{{Nn{Cne}}}Bn{}{{Ch{{f{BhD`}}}{{C`{{Nn{be}}}}}}}}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Nn{eg}}}}}}}Bn}{c{{Nn{e}}}{}{}}0{{Bfg}{{Nn{{l{i}}e}}}Gh{}{{Gl{}{{B`{{Nn{ce}}}}}}}{{Bn{}{{Gj{c}}}}Bn}}{{}{{Nn{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{fO`}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}F`}{}Bn}{{{f{{l{c}}}}Dd}{{An{Kj}}}n}{{{f{{l{c}}}}Dd}KhEj}{{}c{}}0{{Bfc}{{l{e}}}Gh{{Bn{}{{Gj{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Gh{{Bn{}{{Gj{c}}}}Bn}}{{{f{{l{c}}}}{Ff{Fd}}}{{l{c}}}Bn}{{{l{c}}Bf}{{l{c}}}Bn}{{{f{{Df{Ob}}}}e}c{}{{Od{{f{Ed}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jf}{{l{c}}}Bn}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2310{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}452310453267452310453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fn}}{f{{l{c}}}}}{{Af{{l{c}}}}}{{Bn{}{{Nb{Bl}}}}}}````{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}c}e{}{}{}}{{c{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}g{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}c}g{}{}{}}{{c{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}g{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BhOn}}}b}{{{f{Bh{A@`{c}}}}}b{A@bN`}}{{{f{BhA@d}}}b}{{{f{BhA@f}}}b}{{{f{Bh{A@h{c}}}}}bn}{{{f{Bh{A@`{c}}}}{An{e}}}b{A@bN`}{{Kb{c}}}}{{{f{BhOn}}{An{c}}}b{}}{{{f{BhOn}}c}b{}}{{{f{Bh{A@`{c}}}}e}b{A@bN`}{{Kb{c}}}}{{{f{BhA@d}}d}b}5{f{{f{c}}}{}}000{{{f{Bh}}}{{f{Bhc}}}{}}000{{{f{{A@`{c}}}}}{{A@`{c}}}{A@bN`}}{{{f{A@d}}}A@d}{{{f{A@f}}}A@f}{{{f{{A@h{c}}}}}{{A@h{c}}}{nA@j}}{{f{f{Bhc}}}b{}}000{fb}000{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{F`b}000{On{{l{c}}}Bn}{{{A@`{{Df{Dd}}}}}Eh}{{{A@`{Dj}}}Cn}{A@lCn}{A@nEh}{A@dFn}`{{{A@h{c}}}{{l{c}}}n}{cc{}}000{{Bfe}AA`{}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}AA`{}{{Bd{}{{B`{c}}}}}}{{Bf{f{{Df{c}}}}}AA`{}}{{Bf{f{{Df{{An{c}}}}}}}AA`{}}{{}F`}000{{}c{}}000`{{BfF`}{{A@`{c}}}{A@bN`}}{{BfF`}A@d}{{BfF`}A@f}{{BfF`}{{A@h{c}}}n}{{{f{BhOn}}}b}{{{f{BhA@d}}}b}{{{f{BhA@f}}}b}{{{f{Bh{A@h{c}}}}}bn}{fc{}}000{c{{Nn{e}}}{}{}}000{{}{{Nn{c}}}{}}000{fO`}000<<<<````````{{{f{BhAAb}}{f{Gh}}}b}{{{f{BhAAb}}}b}{{{f{BhAAd}}}b}{{{f{BhAAf}}c}b{{Bd{}{{B`{{An{d}}}}}}Hd}}{{{f{Bh{AAh{c}}}}e}bn{{Bd{}{{B`{An}}}}Hd}}{{{f{Bh{AAh{c}}}}e}bn{{Bd{}{{B`{}}}}Hd}}{{{f{BhAAj}}}b}54{{{f{BhAAl}}}b}{{{f{BhAAn}}}b}{{{f{BhAAf}}}b}{{{f{BhAB`}}}b}{{{f{Bh{AAh{c}}}}}bn}{{{f{BhAAb}}{An{{f{Gh}}}}}b}{{{f{BhAAb}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAj}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAh{c}}}}{An{{f{Df}}}}}bn}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAd}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAn}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhAB`}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAh{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAh{c}}}}{f{Df}}}bn}{{{f{BhAAl}}c}b{{Bd{}{{B`{{An{{f{Dj}}}}}}}}Hd}}{{{f{BhAAn}}c}b{{Bd{}{{B`{{An{{f{{Df{Dd}}}}}}}}}}Hd}}{{{f{BhAAl}}c}b{{Bd{}{{B`{{f{Dj}}}}}}}}{{{f{BhAAn}}c}b{{Bd{}{{B`{{f{{Df{Dd}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bh}}}{{f{Bhc}}}{}}000000`{{}AAb}{{}AAd}{F`{{f{c}}}{}}000000{F`{{f{Bhc}}}{}}000000{F`b}000000{{{f{AAl}}}d}{{{f{AAn}}}d}{{{f{AAf}}}d}{{{f{{AAh{c}}}}}dn}{{{f{AAj}}}d}{{{f{AAl}}}{{f{Mf}}}}{{{f{AAn}}}{{f{Mf}}}}{{{f{AAf}}}{{f{Mf}}}}{{{f{{AAh{c}}}}}{{f{Mf}}}n}{{{f{AAj}}}{{f{Mf}}}}{{{f{BhAAb}}}Dn}{{{f{BhAAd}}}Dn}{{{f{BhAB`}}}Dn}{{{f{BhAAj}}}Dn}{cc{}}000000{{{f{Dl}}F`F`Bf}{{Af{{ABb{AAj}}}}}}{{}F`}000000{{{f{BhAAl}}}Fd}{{{f{BhAAn}}}Fd}{{{f{BhAAf}}}Fd}{{{f{Bh{AAh{c}}}}}Fdn}{{{f{BhAAj}}}Fd}{{}c{}}000000{{BfF`{An{Dl}}}AAb}{{BfF`{An{Dl}}}AAd}{{BfF`F`}AAl}{{BfF`F`}AAn}{{BfF`F`}AAf}{{BfF`}AB`}{{BfF`F`Dl}{{AAh{c}}}n}{{BfF`F`DlDl}{{AAh{c}}}n}{c{{Nn{e}}}{}{}}000000{{}{{Nn{c}}}{}}000000{fO`}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{El}}}El}{{f{f{Bhc}}}b{}}{fb}{{}El}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{El}}{f{El}}}d}{{f{f{c}}}d{}}00{{{f{El}}{f{BhGd}}}Gf}{cc{}}{{{f{El}}{f{Bhc}}}bABd}{{}F`}{{}c{}}{{{f{El}}}d}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5``{{ABfBf}{{l{c}}}Bn}{{ABh{f{{l{c}}}}}{{l{c}}}Bn}10{{ABhBfDl}{{l{c}}}Bn}0{{ABfBf}{{Nn{{l{c}}e}}}Bn{}}{{ABh{f{{l{c}}}}}{{Nn{{l{c}}e}}}Bn{}}10{{ABhBfDl}{{Nn{{l{c}}e}}}Bn{}}0`{ABjABj}``{{ABlBfDl}e{}{{ABn{c}}}}{{eBfDl}ABn{}{{Hb{}{{B`{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bh}}}{{f{Bhc}}}{}}0{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{cc{}}0{{}F`}0{{}c{}}000{{{f{AC`}}}ACb}{{{f{BhACb}}}{{An{c}}}{}}{{{f{Bh{ACd{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{ACd{c}}}}}{{An{e}}}Fl{}}`{{{f{ACb}}}{{H`{F`{An{F`}}}}}}{{{f{{ACd{c}}}}}{{H`{F`{An{F`}}}}}Bd}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}099`````````````````````````{{fh}b}0000{{}Fj}{{}Hj}{{FjFj}Fj}{{HjHj}Hj}{{{f{BhFj}}Fj}b}{{{f{BhHj}}Hj}b}3210{{{f{Fj}}}M`}0{{{f{Hj}}}Dd}05432{f{{f{c}}}{}}000000{{{f{Bh}}}{{f{Bhc}}}{}}000000{{{f{{Kn{c}}}}}{{Kn{c}}}Bn}{{{f{{If{c}}}}}{{If{c}}}Bn}{{{f{ACf}}}ACf}{{{f{Fj}}}Fj}{{{f{Hj}}}Hj}{{f{f{Bhc}}}b{}}0000{fb}0000{{{f{BhACh}}}b}0{FjFj}{HjHj}{{{f{Fj}}Fj}d}{{{f{Hj}}Hj}d}{{}{{Kn{c}}}Bn}{{}{{If{c}}}Bn}{{}Fj}{{}Hj}{F`{{f{c}}}{}}{{{f{{Kl{c}}}}}{{f{e}}}Bn{}}111111{F`{{f{Bhc}}}{}}000000{{FjFj}Fj}{{HjHj}Hj}{{}d}{{{f{Lb}}}{{An{Hh}}}}{{{If{c}}Hh}{{If{c}}}Bn}{{{f{{If{c}}}}}{{An{Hh}}}Bn}{{{If{c}}{An{Hh}}}{{If{c}}}Bn}{F`b}000000<;5{{{f{Fj}}{f{Fj}}}d}{{{f{Hj}}{f{Hj}}}d}7{{{f{BhFj}}c}b{{Gl{}{{B`{Fj}}}}}}{{{f{BhHj}}c}b{{Gl{}{{B`{Hj}}}}}}{{{If{c}}d}{{If{c}}}Bn}{{{If{c}}{An{d}}}{{If{c}}}Bn}{{{f{{If{c}}}}Fj}{{If{c}}}Bn}{{{f{{If{c}}}}Fj}{{If{e}}}BnBn}{{{If{c}}Hj}{{If{c}}}Bn}{{{If{c}}{An{Hj}}}{{If{c}}}Bn}{{{f{{If{c}}}}{f{BhGd}}}GfBn}{{{f{ACf}}{f{BhGd}}}Gf}{{{f{Fj}}{f{BhGd}}}Gf}0000{{{f{Hj}}{f{BhGd}}}Gf}0000{cc{}}000000{M`{{An{Fj}}}}{Dd{{An{Hj}}}}{M`Fj}0{DdHj}010{cFj{{Gl{}{{B`{Fj}}}}}}{cHj{{Gl{}{{B`{Hj}}}}}}{{{f{Dj}}}{{An{Fj}}}}{{{f{Dj}}}{{An{Hj}}}}{{{f{{If{c}}}}}{{An{Hh}}}Bn}{{{f{{If{c}}}}}dBn}{{{f{Hj}}}d}{{{f{Lb}}}Hj}{{{f{{If{c}}}}}HjBn}0{{{f{{If{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kn{c}}}}}{{f{Bh{If{c}}}}}Bn}{{{f{Hj}}}Jf}{{}F`}000000{{{f{BhFj}}Fj}b}{{{f{BhHj}}Hj}b}{{FjFj}Fj}{{HjHj}Hj}{{{f{Fj}}Fj}d}{{{f{Hj}}Hj}d}{{}c{}}000000{Fjc{}}{Hjc{}}{{{f{Fj}}}d}{{{f{Hj}}}d}{{{f{{If{c}}}}}dBn}21{{{f{{If{c}}}}}JfBn}111{{{f{Fj}}}{{ACj{Fj}}}}{{{f{Hj}}}{{ACj{Hj}}}}{{{f{Fj}}}{{ACl{Fj}}}}{{{f{Hj}}}{{ACl{Hj}}}}{{}d}{{}{{f{{AD`{ACn}}}}}}{{{f{Lb}}}{{An{Kh}}}}{{{f{{If{c}}}}}{{An{Kh}}}Bn}{{{If{c}}}{{If{c}}}Bn}{{{If{c}}An}{{If{c}}}Bn}{{{f{{If{c}}}}{If{c}}}{{ADb{c}}}Bn}4231{{{If{c}}}{{Kn{c}}}Bn}{FjFj}{HjHj}{{{f{{Kn{c}}}}}{{Ld{{If{c}}}}}Bn}{{{f{BhFj}}Fj}b}{{{f{BhHj}}Hj}b}{{{f{BhFj}}Fjd}b}{{{f{BhHj}}Hjd}b}{{{f{Bh{If{c}}}}{An{Hh}}}bBn}{{{f{Bh{If{c}}}}d}bBn}{{{f{BhHj}}d}b}{{{f{Bh{If{c}}}}Hj}bBn}{{{f{Bh{If{c}}}}An}bBn}033{{{f{Bh{If{c}}}}Jf}bBn}{{{f{BhHj}}Jf}b}{{{If{c}}Jf}{{If{c}}}Bn}{{{If{c}}{An{Jf}}}{{If{c}}}Bn}{{FjFj}Fj}{{HjHj}Hj}>=10{{{Kn{c}}}{{If{c}}}Bn}{fc{}}0000{{{f{BhFj}}Fj}b}{{{f{BhHj}}Hj}b}{c{{Nn{e}}}{}{}}000000{{}{{Nn{c}}}{}}000000{{{f{{Kn{c}}}}}{{An{{Ld{{If{c}}}}}}}Bn}{{{f{{Kn{c}}}}}{{An{{Ih{{If{c}}}}}}}Bn}{fO`}000000:9{{{f{{Kn{c}}}}}{{f{{ADd{Lb}}}}}Bn}{{}c{}}000000{AChACh}0{{{f{{Kn{c}}}}}{{Ih{{If{c}}}}}Bn}````{{fh}b}{{{f{{ADf{c}}}}F`}{{H`{{ADf{c}}{ADf{c}}}}}I`}{e{{ADf{c}}}I`{{Gl{}{{B`{{An{{f{c}}}}}}}}}}{e{{ADf{c}}}I`{{Gl{}{{B`{{f{c}}}}}}}}{{ADhe}g{}{{Gl{}{{B`{c}}}}}{}}0{{{f{Hn}}}{{f{ADj}}}}{{{f{{ADf{c}}}}}{{f{ADj}}}I`}{{{f{Bh{ADf{c}}}}}{{f{BhADj}}}I`}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}`{{{f{{ADf{c}}}}F`}dI`}{{{f{{ADf{c}}}}}{{ADf{c}}}{I`A@j}}{{f{f{Bhc}}}b{}}{fb}{{{f{{ADf{c}}}}}{{f{ADh}}}I`}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{{f{Hn}}}}{f{{f{Hn}}}}}d}{{{f{Hn}}{f{Hn}}}d}{{{f{{ADf{c}}}}{f{BhGd}}}Gf{I`ADl}}{cc{}}{{F`ADh}{{ADf{c}}}I`}{{{f{{ADf{c}}}}F`}{{An{{f{c}}}}}I`}{{}ADh}{{{f{Gn}}{f{{ADf{c}}}}{f{{ADf{c}}}}}{{ADf{c}}}I`}{{ADh{f{Gn}}cc}{{ADf{e}}}{}I`}{{{f{Gn}}{f{{ADf{c}}}}e}{{ADf{c}}}I`{}}{{{f{Gn}}c{f{{ADf{e}}}}}{{ADf{e}}}{}I`}{{}F`}{{}c{}}{{{f{{ADf{c}}}}}eI`{}}{{{f{{ADf{c}}}}F`}dI`}{{fF`}d}1{{{f{{ADf{c}}}}}{{AE`{egADn}}}I`{}{}}{{{f{{ADf{c}}}}}{{AE`{{f{c}}{AEb{c}}ADn}}}I`}{{{f{{ADf{c}}}}}F`I`}0`{db}{{{f{Bh{ADf{c}}}}{An{Gn}}}bI`}{{{f{Bh{ADf{c}}}}F`F`}bI`}{{fF`F`}c{}}01{{{f{{ADf{c}}}}F`}{{H`{{ABb{Gh}}{ABb{Gh}}}}}I`}0{{{f{Hn}}}{{ABb{Hn}}}}{{{f{{ADf{c}}}}}{{ABb{Gh}}}I`}{fc{}}{g{{Nn{{ADf{c}}e}}}I`{}{{Gl{}{{B`{{Nn{{f{c}}e}}}}}}}}{g{{Nn{{ADf{c}}e}}}I`{}{{Gl{}{{B`{{Nn{{An{{f{c}}}}e}}}}}}}}{{ADhg}{{Nn{ie}}}{}{}{{Gl{}{{B`{{Nn{ce}}}}}}}{}}0{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{Hn}}}{{f{Dj}}}}{{}{{f{Dj}}}}{{{f{{ADf{c}}}}}{{An{{f{Gn}}}}}I`}{{{f{{ADf{c}}}}F`}{{f{c}}}I`}{{{f{{ADf{c}}}}F`}eI`{}}1{{{f{{ADf{c}}}}}{{f{{L`{{Ff{c}}}}}}}I`}{{{f{{ADf{c}}}}}eI`{}}{{{f{{ADf{c}}}}}{{AEb{c}}}I`}{{}c{}}{{{f{{ADf{c}}}}{An{Gn}}}{{ABb{Gh}}}I`}{{{ADf{c}}{An{Gn}}}{{ADf{c}}}I`}0`{{{f{Bh{AEd{c}}}}}bI`}0{{{f{Bh{AEd{c}}}}{An{c}}}bI`}{{{f{Bh{AEd{c}}}}{f{ADj}}}bI`}{{{f{Bh{AEd{c}}}}c}bI`}{{{f{Bh{AEd{c}}}}{f{ADj}}}{{Af{b}}}I`}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{}{{AEd{c}}}I`}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{AEd{c}}}{{AEf{c}}}I`}{cc{}}{{}F`}{{}c{}}{{BfF`}{{AEd{c}}}I`}{{{f{Bh{AEd{c}}}}}AdI`}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5````{{{f{BhAEh}}}b}{{{f{BhAEh}}{An{{f{ADj}}}}}b}{{{f{BhAEh}}{f{ADj}}}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}`{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AEj}}{f{BhGd}}}Gf}{cc{}}{{BfF`}{{ABb{AEh}}}}{{}AEl}{{}ADh}{{}F`}{{}c{}}{{}d}`{{AEnAElADh}b}{{{f{BhAEh}}}Ad}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}6``````````````````````````````````````````{{fh}b}{{{f{{AFb{}{{AF`{c}}}}}}g}{{AFb{}{{AF`{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AFd}}{f{Cb}}}AFd}{{{f{AFd}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AFb{}{{AF`{c}}}}}}i{f{Bh{Df{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AFb{}{{AF`{c}}}}}}g}{{AFb{}{{AF`{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFf}}Eb}Ed}{{{f{AFf}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}}{{{f{AFh}}}{{Af{Ed}}}}`{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{AFj}}{f{Dl}}}{{Af{Ad}}}}0{{{f{AFj}}{f{Dl}}El}{{Af{Ad}}}}{{{f{AFl}}}AFl}{{f{f{Bhc}}}b{}}{fb}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AFl}}{f{AFl}}}d}{{{f{{AFn{}{{B`{c}}}}}}e}c{}{}}0{{{f{AG`}}}{{Af{Ad}}}}{{{f{AG`}}}{{Af{{H`{Ad{AGb{Jj}}}}}}}}`{{{f{AGd}}c}{{Af{AGd}}}{}}{{{f{AGf}}{f{Fn}}}{{Af{{l{c}}}}}Bn}`{{{f{AFl}}{f{BhGd}}}Gf}{cc{}}`{{BfcF`}AGh{}}{{BfF`}AGj}`{{{f{AGl}}F`}{{Af{Hf}}}}{{{f{AGl}}F`}Hf}::{{{f{AFl}}{f{Bhc}}}bABd}{{}F`}{{}c{}}{{{f{AGn}}}{{Af{Fn}}}}{{{f{AH`}}}{{Af{Fn}}}}??{{{f{AHb}}}{{An{c}}}{}}{{{f{AHb}}}{{An{Kj}}}}{{{f{AHd}}}{{An{c}}}{}}2{{{f{AHb}}}{{An{{H`{cc}}}}}{}}{{{f{AFh}}}{{Af{F`}}}}{{{f{AHf}}F`F`}{{l{c}}}Bn}{{{f{{AFn{}{{B`{c}}}}}}e}c{}{}}0{{{f{AG`}}}{{Af{{AGb{Jj}}}}}}{{{f{AHd}}KjMl}{{Af{{An{c}}}}}{}}{{{f{AHh}}}AHh}{{{f{AHj}}{f{Cb}}Mn}{{Af{Ad}}}}{{{f{AHl}}c{An{e}}}{{Af{AHl}}}{{Gl{}{{B`{Hh}}}}}{}}{{{f{AHl}}ci}{{Af{AHl}}}{{Gl{}{{B`{Hh}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHl}}{f{Fn}}{An{c}}}{{Af{AHl}}}{}}{{{f{AHn}}Jj}{{l{c}}}Bn}{{{f{AI`}}Jjc}{{l{e}}}{}Bn}`{{{f{AFf}}d}{{l{c}}}Bn}{{{f{AFf}}Eb}{{l{c}}}Bn}{{{f{AIb}}Dd}{{An{Kj}}}}{{{f{AHb}}}{{An{c}}}{}}{{{f{AId}}{f{c}}}{{Af{AId}}}N`}{{{f{AIf}}{f{c}}}AIfN`}{{{f{AIh}}}{{Ff{{f{{Df{Dd}}}}}}}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{AFh}}}{{Af{AFh}}}}9{{}c{}}`{{{f{AIj}}{f{Fn}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnGh{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIl{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}CnBnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}iBf}{{l{k}}}BnBn{GhAIn}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBf}{{l{k}}}BnBnGh{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gj{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnGh{{Ch{}{{C`{g}}}}}{{Bn{}{{Gj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{ABb{Gh}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{ABb{Gh}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nn{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Nn{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AJ`{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nn{{l{m}}i}}}BnBnGhAJb{{Ch{ff}{{C`{{Nn{gi}}}}}}}{{Bn{}{{Gj{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBf}{{Nn{{l{m}}i}}}BnBnGhAJb{{Ch{ff}{{C`{{Nn{gi}}}}}}}{{Bn{}{{Gj{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Nn{{l{c}}g}}}BnBnAJb{{Ch{ff}{{C`{{Nn{{ABb{Gh}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Nn{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Nn{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Nn{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Nn{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}Bn{GhAIn}AJb{{Ch{f}{{C`{{Nn{eg}}}}}}}{{Bn{}{{Gj{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJd{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJdBn}{{{f{{l{c}}}}g}{{l{i}}}BnGh{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gj{e}}}}}}{{{l{c}}g}{{l{i}}}BnGh{{Ch{}{{C`{e}}}}}{{Bn{}{{Gj{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{GhAIn}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gj{e}}}}}}0{{{f{{l{c}}}}}F`n}0{{JfJf}Jf}{{{f{Ed}}Hh}{{Af{b}}}}{{{f{{AJf{Hh}}}}Hh}{{Af{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJhd}{{Ff{Hh}}}Bn{{Bd{}{{B`{An}}}}}}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{AJh}}}AJh}{{f{f{Bhc}}}b{}}{fb}{{}AJh}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AJh}}{f{AJh}}}d}{{f{f{c}}}d{}}00{{{f{AJh}}{f{BhGd}}}Gf}{cc{}}{{{f{AJh}}{f{Bhc}}}bABd}{{}F`}{{}c{}}{{{f{{Df{f}}}}cHhe}{{Ff{Hh}}}{{Bd{}{{B`{An}}}}}{{Cb{fF`f}{{C`{d}}}}}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5`{{F`{f{Bh{Ff{d}}}}}b}```{{{f{AJj}}F`F`}AJj}0{{F`{f{{Df{Ad}}}}{f{BhEf}}}{{Af{{AJl{Ed}}}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AJn}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{{AK`{Jj}}}}}}{{Bf{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AKb}}}}{{Bf{f{{Df{Ad}}}}}{{Af{AKb}}}}{{{f{Ad}}}{{Af{Fd}}}}{{{f{{Df{Ad}}}}}{{Af{AJn}}}}{{{f{{Df{Ad}}}}}{{Af{AKb}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bh}}}{{f{Bhc}}}{}}0{{{f{Eb}}}Eb}{{{f{Ef}}}Ef}{{f{f{Bhc}}}b{}}0{fb}0{{}Eb}{{}Ef}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0``{F`b}0{{{f{Eb}}{f{Eb}}}d}{{{f{Ef}}{f{Ef}}}d}{{f{f{c}}}d{}}00000{{{f{Eb}}{f{BhGd}}}Gf}{{{f{Ef}}{f{BhGd}}}Gf}{cc{}}{{{f{Ef}}}Eb}1{{{f{Eb}}}Ef}{{{f{Eb}}{f{Bhc}}}bABd}{{{f{Ef}}{f{Bhc}}}bABd}{{}F`}0{{}c{}}0````{{}Eb}{{}Ef}``{{{f{AJj}}F`F`}AJj}0{fc{}}0{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}077{{Ebd}Eb}{{Efd}Ef}1010{{Efc}Ef{{Gl{}{{B`{d}}}}}}210{EbEb}{EfEf}`{AKdJj}00{{}d}??0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000{{{f{Dn}}}d}{{{f{Il}}{f{Il}}}c{}}{{{f{Fn}}{f{Fn}}}c{}}{{FnFn}c{}}{{{f{Cn}}{f{Cn}}}c{}}{{CnCn}c{}}{{{f{Cn}}{f{Dj}}}c{}}{{{f{Eh}}{f{{Df{Dd}}}}}c{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Hf}}{f{Hf}}}Hf}{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}000000{{{f{Cn}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fn}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dn}}{f{Aj}}}Ad}{{{f{Fn}}{f{Aj}}}Ad}{{{f{Cn}}{f{Aj}}}Ad}{{{f{Eh}}{f{Aj}}}Ad}{{{f{{AEf{c}}}}{f{Aj}}}AdI`}{{{f{Fn}}}d}{{{f{Fn}}}{{An{d}}}}{{{f{Dn}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dn}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dn}}c}Dn{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fn}}c}Fn{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{An{{f{Dj}}}}}{{C`{{An{{AKh{Dj}}}}}}}}Cd}}{{{f{Eh}}c}Eh{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{AKh{{Df{Dd}}}}}}}}}}Cd}}{{{f{{AEf{c}}}}e}{{AEf{c}}}I`{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dn}}c}Dn{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dn}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKj}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKl}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fn}}{f{Cb}}}Fn}{{{f{Cn}}{f{Cb}}}Cn}{{{f{Eh}}{f{Cb}}}Eh}{{{f{Fn}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}c}Cn{{Ch{{f{Dj}}}{{C`{{f{Dj}}}}}}}}{{{f{Eh}}c}Eh{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{Dn}}{f{Cb}}}{{Af{Dn}}}}{{{f{Dn}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fn}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Cn}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{Dj}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eh}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{{Df{Dd}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEf{c}}}}g{f{Bh{Df{e}}}}}bI`{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dn}}c}Dn{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fn}}c}Fn{{Cb{d}{{C`{d}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{f{Dj}}}{{C`{{AKh{Dj}}}}}}Cd}}{{{f{Eh}}c}Eh{{Cb{{f{{Df{Dd}}}}}{{C`{{AKh{{Df{Dd}}}}}}}}Cd}}{{{f{{AEf{c}}}}e}{{AEf{c}}}I`{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Cn}}c}Cn{{Ch{E`{f{Dj}}}{{C`{E`}}}}Cd}}{{{f{Fn}}Eb}Ed}{{{f{Cn}}Eb}Ed}{{{f{Eh}}Eb}Ed}{{{f{AKb}}Eb}Ed}{{{f{Fn}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}}{{{f{Cn}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}}{{{f{Eh}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}}{{{f{AKb}}{f{{Df{Ad}}}}{f{Ef}}}{{Af{Ed}}}}{{{f{Fn}}}{{Af{Ed}}}}{{{f{Cn}}}{{Af{Ed}}}}{{{f{Eh}}}{{Af{Ed}}}}{{{f{{AEf{c}}}}}{{Af{Ed}}}I`}{eAKn{}{{Gl{}{{B`{c}}}}}}0{{ADhe}AL`{}{{Gl{}{{B`{c}}}}}}0{{{f{Cn}}}Eh}{{{f{Hf}}}Hf}{{{f{Dl}}}{{f{Dl}}}}{{{f{Mf}}}{{f{Dl}}}}{{{f{ALb}}}{{f{Dl}}}}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{An{{f{{Df{c}}}}}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Dn}}{f{{l{c}}}}{f{{l{e}}}}g}DnBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FnFn}c{}}{{{f{Fn}}{f{Fn}}}c{}}0101{f{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bh}}}{{f{Bhc}}}{}}0000000000000000000000000000000000{Dl{{ABb{Dl}}}}{{{f{ALn}}{f{ALn}}c}{{Af{ALn}}}AM`}{{{f{AMb}}{f{Dl}}}{{Af{Ad}}}}0{{{f{Hf}}{f{Dl}}}Hf}{{{f{Dl}}Dl}Dl}{{{f{Dn}}{f{Dl}}}{{Af{Ad}}}}{{{f{Fn}}{f{Dl}}}{{Af{Ad}}}}{{{f{Cn}}{f{Dl}}}{{Af{Ad}}}}{{{f{Eh}}{f{Dl}}}{{Af{Ad}}}}{{{f{AKb}}{f{Dl}}}{{Af{Ad}}}}{{{f{AMb}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Il}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Dn}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Fn}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Cn}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Eh}}{f{Dl}}El}{{Af{Ad}}}}{{{f{AKb}}{f{Dl}}El}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}0000{{{f{AKj}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKl}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AMd{ce}}}}}{{AMd{ce}}}BnBn}{{{f{AMf}}}AMf}{{{f{Hf}}}Hf}{{{f{AMh}}}AMh}{{{f{Dl}}}Dl}{{{f{AMj}}}AMj}{{{f{Mf}}}Mf}{{{f{AMl}}}AMl}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Mb}}}Mb}{{{f{Ln}}}Ln}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Lh}}}Lh}{{{f{Lf}}}Lf}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Dh}}}Dh}{{{f{Db}}}Db}{{{f{ANj}}}ANj}{{{f{Al}}}Al}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{ADh}}}ADh}{{{f{AOd}}}AOd}{{f{f{Bhc}}}b{}}00000000000000000000000000000{fb}00000000000000000000000000000{{{f{BhMf}}Dl}b}{AOfe{}{{AKn{c}}AIn}}0{{AOfADh}e{}{{AL`{c}}AIn}}0{{{f{Dl}}}d}00{AOhDl}{{{f{Mf}}}{{f{Dl}}}}{{}Hf}{{}AMh}{{}Dl}{{}ADh}{F`{{f{c}}}{}}{{{f{{AMd{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{{{f{Bh{AMd{ce}}}}}{{f{Bhg}}}BnBn{}}{F`{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}000000{F`b}0000000000000000000000000000000000{{{f{AMb}}}{{f{Dl}}}}{{{f{Il}}}{{f{Dl}}}}{{{f{Hf}}}Dl}`{{{f{Hf}}{f{Hf}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{Dl}}{f{Dl}}}d}{{{f{Dl}}{f{ADh}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{Mf}}{f{Mf}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{ADh}}{f{ADh}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Hf}}{f{Hf}}d}d}{{{f{Dn}}{f{Dn}}}Fn}{{{f{Fn}}{f{Fn}}}Fn}{{{f{Cn}}{f{Dj}}}Fn}{{{f{Cn}}{f{Cn}}}Fn}{{{f{Eh}}{f{{Df{Dd}}}}}Fn}{{{f{Eh}}{f{Eh}}}Fn}543201{{f{f{c}}}d{}}00000000000000000000000{{{f{Dn}}}{{Af{{H`{Ad{AGb{Jj}}}}}}}}{{{f{{AMd{ce}}}}}MfBnBn}{{{f{Fn}}d}{{Af{Fn}}}}{{{f{Eh}}{f{{Df{Dd}}}}}{{Af{Eh}}}}{{{f{Cn}}{f{Fn}}}{{Af{{l{Dh}}}}}}{{{f{Eh}}{f{Fn}}}{{Af{{l{Db}}}}}}{{{f{{AEf{c}}}}{f{Fn}}}{{Af{{l{{Hl{c}}}}}}}I`}{{AM`{f{AOj}}{f{AOj}}}{{Af{AOj}}}}{{{f{Dn}}{f{BhGd}}}Gf}{{{f{Cn}}{f{BhGd}}}Gf}{{{f{Eh}}{f{BhGd}}}Gf}{{{f{{AEf{c}}}}{f{BhGd}}}GfI`}{{{f{AMf}}{f{BhGd}}}Gf}{{{f{Hf}}{f{BhGd}}}Gf}0{{{f{AMh}}{f{BhGd}}}Gf}{{{f{Dl}}{f{BhGd}}}Gf}0{{{f{AMj}}{f{BhGd}}}Gf}{{{f{Mf}}{f{BhGd}}}Gf}{{{f{AMl}}{f{BhGd}}}Gf}0{{{f{ADh}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{AOd}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{Dn}}c}b{{Ch{{An{Cf}}}}}}{cc{}}000000{{{An{c}}}Hf{{AOn{Hf}}}}{cHfB@`}{{{f{{Df{Dd}}}}}Hf}{{{f{Dj}}}Hf}{dHf}55{{{f{Hf}}}Dl}{HfDl}7{{{f{ADh}}}Dl}8{{{f{Hf}}}Mf}{{{f{B@b}}}Mf}::{{{f{AOd}}}AMl};;;;;;;;;;;;;;;;;;;;{B@dADh}<{B@fADh}={{{f{ADh}}d}Dl}{eDn{{B@h{Ad}}}{{Gl{}{{B`{c}}}}}}{cDn{{Gl{}{{B`{{An{Ad}}}}}}}}{cDn{{Gl{}{{B`{{An{{ABb{Gh}}}}}}}}}}{cFn{{Gl{}{{B`{d}}}}}}{eCn{{Kb{Dj}}}{{Gl{}{{B`{{An{c}}}}}}}}{eCn{{`{Dj}}}{{Gl{}{{B`{c}}}}}}{eEh{{`{{Df{Dd}}}}}{{Gl{}{{B`{c}}}}}}{eEh{{Kb{{Df{Dd}}}}}{{Gl{}{{B`{{An{c}}}}}}}}{e{{AEf{c}}}I`{{Gl{}{{B`{{An{c}}}}}}}}{{Bfc}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{Bfe}Cn{{Kb{Dj}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}Eh{{Kb{{Df{Dd}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}{{AEf{c}}}I`{{Bd{}{{B`{{An{c}}}}}}}}<;98756{eAKb{{`{{Df{Dd}}}}}{{Gl{}{{B`{c}}}}}}{eAKb{{Kb{{Df{Dd}}}}}{{Gl{}{{B`{{An{c}}}}}}}}6{{Bfc}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{Bfe}Cn{{Kb{Dj}}}{{Bd{}{{B`{c}}}}}}{{Bfe}Eh{{Kb{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{{Bfe}{{AEf{c}}}I`{{Bd{}{{B`{c}}}}}}{cDn{{Hb{}{{B`{{An{Ad}}}}}}}}{cFn{{Hb{}{{B`{{An{d}}}}}}}}{cFn{{Hb{}{{B`{d}}}}}}{eCn{{`{Dj}}InJ`B@j}{{Hb{}{{B`{c}}}}}}{eCn{{Kb{Dj}}InJ`}{{Hb{}{{B`{{An{c}}}}}}}}{eEh{{Kb{{Df{Dd}}}}InJ`}{{Hb{}{{B`{{An{c}}}}}}}}{eEh{{`{{Df{Dd}}}}InJ`B@j}{{Hb{}{{B`{c}}}}}}{{cBfDl}Dn{{Hb{}{{B`{{An{Ad}}}}}}}}{{Bf{f{{Df{d}}}}}Fn}{{Bf{f{{Df{c}}}}}Cn{{Kb{Dj}}}}{{Bf{f{{Df{c}}}}}Eh{{Kb{{Df{Dd}}}}}}{{Bf{f{{Df{c}}}}}{{AEf{c}}}I`}{{Bf{f{{Df{{An{d}}}}}}}Fn}{{Bf{f{{Df{{An{c}}}}}}}Cn{{Kb{Dj}}}}{{Bf{f{{Df{{An{c}}}}}}}Eh{{Kb{{Df{Dd}}}}}}{{Bf{f{{Df{{An{c}}}}}}}{{AEf{c}}}I`}{cFn{{Hd{}{{B`{{An{d}}}}}}}}{{{Ff{c}}ADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{Ff{c}}ADh}{{AIn{}{{ALd{e}}{ALf{c}}{ALh{g}}}}}{ALj{ALl{e}}}A@j{{Fl{}{{B`{e}}}}HdInJ`}}{{F`cADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{Bf{f{Ad}}F`}Dn}{{BfdF`}Fn}{{Bf{f{Dj}}F`}Cn}{{Bf{f{{Df{Dd}}}}F`}Eh}{{Bf{f{{Df{Dd}}}}F`}AKb}{{BfcF`}{{AEf{c}}}I`}{{F`ADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{BfF`}Dn}{{BfF`}Fn}{{BfF`}Cn}{{BfF`}Eh}{{BfF`}AKb}{{BfF`}{{AEf{c}}}I`}{{BfF`{f{Dl}}}Dn}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}F`}{{An{c}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Il}}F`}{{Af{Hf}}}}{{{f{AMb}}F`}{{Af{Hf}}}}0{{{f{Dn}}F`}{{Af{Hf}}}}{{{f{Fn}}F`}{{Af{Hf}}}}{{{f{Cn}}F`}{{Af{Hf}}}}{{{f{Eh}}F`}{{Af{Hf}}}}{{{f{AKb}}F`}{{Af{Hf}}}}{{{f{{AEf{c}}}}F`}{{Af{Hf}}}I`}{{{f{Il}}F`}Hf}{{{f{AMb}}F`}Hf}0{{{f{Dn}}F`}Hf}{{{f{Fn}}F`}Hf}{{{f{Cn}}F`}Hf}{{{f{Eh}}F`}Hf}{{{f{AKb}}F`}Hf}{{{f{{AEf{c}}}}F`}HfI`}{{{f{Dn}}F`}{{An{Ad}}}}{{}Dl}00000000000000000000000{{{f{Dn}}}Ad}{{{f{{AEf{c}}}}F`}{{An{{f{Hn}}}}}I`}0{{{f{Hf}}}{{An{{f{Dj}}}}}}{{{f{B@l}}F`}Hf}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}F`}{{An{c}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Dn}}}F`}{{{f{Cn}}}F`}{{{f{AKb}}}F`}{{{f{Dn}}dd}{{Af{Aj}}}}{{{f{Fn}}dd}{{Af{Aj}}}}{{{f{Cn}}dd}{{Af{Aj}}}}{{{f{Eh}}dd}{{Af{Aj}}}}{{{f{AKb}}dd}{{Af{Aj}}}}{{{f{{AEf{c}}}}dd}{{Af{Aj}}}I`}{{{f{Dn}}{f{Dn}}}Fn}{{{f{Fn}}{f{Fn}}}Fn}{{{f{Cn}}{f{Cn}}}Fn}{{{f{Cn}}{f{Dj}}}Fn}{{{f{Eh}}{f{Eh}}}Fn}{{{f{Eh}}{f{{Df{Dd}}}}}Fn}543210{{{f{Hf}}{f{Bhc}}}bABd}{{{f{AMh}}{f{Bhc}}}bABd}{{{f{Dl}}{f{Bhc}}}bABd}{{{f{Mf}}{f{Bhc}}}bABd}{{{f{AMl}}{f{Bhc}}}bABd}{{{f{ADh}}{f{Bhc}}}bABd}{{{f{AOd}}{f{Bhc}}}bABd}{{{f{Hf}}{f{Bhc}}d}bABd}{DlDl}{{}F`}0000000000000000000000000000000000{{{f{Dn}}}{{f{Dl}}}}{{{f{Dl}}}{{An{{f{Dl}}}}}}{{{f{ADh}}}{{An{{f{ADh}}}}}}{{}c{}}0000000000000000000000000000000000{{B@n{An{F`}}F`}{{Af{Il}}}}{{B@n{An{F`}}F`}Il}{{{f{Dn}}}c{}}{{{f{Fn}}}c{}}{{{f{Cn}}}c{}}{{{f{Eh}}}c{}}{{{f{AKb}}}c{}}{{{f{{AEf{c}}}}}eI`{}}{{BA`Dl}{{Af{Kh}}}}{IlAd}{B@nAd}{Hf{{Af{Hf}}}}{{{f{Dl}}}d}00{{{f{Hf}}}d}111101011111{{{f{ADh}}}d}12121222212222120{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{AE`{cgADn}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Dn}}}{{`{{Bd{}{{B`{Jj}}}}}}}}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{An{c}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Dl}}}{{f{Dl}}}}{{{f{Dn}}{f{Dn}}}Fn}{{{f{Fn}}{f{Fn}}}Fn}{{{f{Cn}}{f{Cn}}}Fn}{{{f{Cn}}{f{Dj}}}Fn}{{{f{Eh}}{f{Eh}}}Fn}{{{f{Eh}}{f{{Df{Dd}}}}}Fn}542301{{{f{ALn}}{f{ALn}}}{{Af{{H`{ALnALn}}}}}}{{DnDn}{{Af{{H`{DnDn}}}}}}{{{f{Dl}}{f{Dl}}}{{Af{d}}}}{{{f{AMh}}}{{An{Dl}}}}{{{f{Fn}}}{{An{d}}}}{{{f{Fn}}}Kh}{{{f{Cn}}}Kh}{{{f{Eh}}}Kh}{{{f{Fn}}}{{An{Kj}}}}{{{f{AKj}}}{{An{Ib}}}}{{{f{AKl}}}{{An{Kj}}}}{{{f{AKj}}}Kh}{{{f{AKl}}}Kh}{{{f{Dl}}{f{Dl}}}{{Af{Dl}}}}9876{{Bf{f{{Df{Dd}}}}F`F`}Fn}{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}000000{{{f{Cn}}}{{Af{F`}}}}{{{f{Eh}}}{{Af{F`}}}}{{{f{Mf}}}{{f{Bf}}}}`{{}c{}}00{{Bfc}Cn{{Kb{{Df{{An{{AKh{Dj}}}}}}}}}}{{Bfc}Cn{{Kb{{Df{{f{Dj}}}}}}}}{{Bfc}Cn{{Kb{{Df{{An{{f{Dj}}}}}}}}}}{{Bfc}Cn{{Kb{{Df{{AKh{Dj}}}}}}}}{{Bfc}Eh{{Kb{{Df{{AKh{{Df{Dd}}}}}}}}}}{{Bfc}Eh{{Kb{{Df{{f{{Df{Dd}}}}}}}}}}{{Bfc}Eh{{Kb{{Df{{An{{AKh{{Df{Dd}}}}}}}}}}}}{{Bfc}Eh{{Kb{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{Bfe}{{AEf{c}}}I`{{Kb{{Df{{An{c}}}}}}}}{{Bf{f{{Df{c}}}}}{{AEf{c}}}I`}{{BfDl}Mf}{Bf{{AEf{c}}}I`}{{{f{Dn}}F`F`}Dn}{{{f{Fn}}F`F`}Fn}{{{f{Cn}}F`F`}Cn}{{{f{Eh}}F`F`}Eh}{{{f{AKb}}F`F`}AKb}{{{f{{AEf{c}}}}F`F`}{{AEf{c}}}I`}{{Bf{Ff{c}}}{{AEf{c}}}I`}{{Bf{Ff{c}}Gn}{{AEf{c}}}I`}{{{l{c}}}{{AMd{ec}}}BnBn}{{}AMj}{{{f{Fn}}}c{}}{Fnc{}}{{{f{Dn}}{f{Dn}}}Fn}{{{f{Fn}}{f{Fn}}}Fn}{{{f{Cn}}{f{Dj}}}Fn}{{{f{Cn}}{f{Cn}}}Fn}{{{f{Eh}}{f{Eh}}}Fn}{{{f{Eh}}{f{{Df{Dd}}}}}Fn}543210{{{f{Dn}}}{{Af{{AGb{Jj}}}}}}9{{{f{Dn}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mh{}{{B`{{An{{f{Dj}}}}}}}}}}}}{{{f{BhDn}}}{{`{{Mj{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mj{}{{B`{{An{{f{Dj}}}}}}}}}}}}{{{f{Hf}}{f{Hf}}}{{An{BAb}}}}{{{f{AMl}}{f{AMl}}}{{An{BAb}}}}{{{f{{AMd{ce}}}}}{{f{{l{e}}}}}BnBn}{{{f{Il}}}{{An{F`}}}}{{{f{{AMd{ANlIj}}}}}{{An{F`}}}}{{{f{AKj}}KjMl}{{Af{{An{Ib}}}}}}{{{f{AKl}}KjMl}{{Af{{An{Kj}}}}}}{{{f{AKj}}KjMl}{{Af{Kh}}}}{{{f{AKl}}KjMl}{{Af{Kh}}}}{{BfF`Kj}{{Af{Fn}}}}{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}000000{{{f{Dn}}}Dn}{{{f{Fn}}}Fn}{{{f{Cn}}}Cn}{{{f{Eh}}}Eh}{{{f{AKb}}}AKb}{{{f{{AEf{c}}}}}{{AEf{c}}}I`}`{{{f{Il}}}F`}{{{f{{AMd{ANlIj}}}}}F`}{{{f{Fn}}c{An{d}}}{{Af{Fn}}}{{Gl{}{{B`{Hh}}}}}}{{{f{Cn}}c{An{{f{Dj}}}}}{{Af{Cn}}}{{Gl{}{{B`{Hh}}}}}}{{{f{Eh}}c{An{{f{{Df{Dd}}}}}}}{{Af{Eh}}}{{Gl{}{{B`{Hh}}}}}}{{{f{Fn}}ce}{{Af{Fn}}}{{Gl{}{{B`{Hh}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Cn}}ce}{{Af{Cn}}}{{Gl{}{{B`{Hh}}}}}{{Cb{{An{{f{Dj}}}}}{{C`{{An{D`}}}}}}}}{{{f{Eh}}ce}{{Af{Eh}}}{{Gl{}{{B`{Hh}}}}}{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{Ff{Dd}}}}}}}}}}{{{f{Fn}}{f{Fn}}{An{d}}}{{Af{Fn}}}}{{{f{Cn}}{f{Fn}}{An{{f{Dj}}}}}{{Af{Cn}}}}{{{f{Eh}}{f{Fn}}{An{{f{{Df{Dd}}}}}}}{{Af{Eh}}}}{{{f{BhDn}}}b}{{{f{BhDn}}Dl}b}{{{f{BhMf}}Bf}b}{{{f{Dn}}Jj}Dn}{{{f{Fn}}Jj}Fn}{{{f{Cn}}Jj}Cn}{{{f{Eh}}Jj}Eh}{{{f{AKb}}Jj}AKb}{{{f{{AEf{c}}}}Jj}{{AEf{c}}}I`}{{{f{Dn}}Jj{An{{f{Ad}}}}}Dn}{{{f{Fn}}Jj{An{d}}}Fn}{{{f{Cn}}Jj{An{{f{Dj}}}}}Cn}{{{f{Eh}}Jj{An{{f{{Df{Dd}}}}}}}Eh}{{{f{AKb}}Jj{An{{f{{Df{Dd}}}}}}}AKb}{{{f{{AEf{c}}}}Jj{An{{Hl{c}}}}}{{l{{Hl{c}}}}}I`}{{{f{Fn}}d}Fn}{{{f{Cn}}d}Cn}{{{f{Eh}}d}{{l{Db}}}}{{{f{AKb}}d}AKb}{{{f{Fn}}Eb}{{l{Al}}}}{{{f{Cn}}Eb}{{l{Dh}}}}{{{f{Eh}}Eb}{{l{Db}}}}{{{f{AKb}}Eb}AKb}{{{f{AKj}}Dd}Kh}{{{f{AKl}}Dd}Kh}{{{f{Hf}}{f{Dl}}}{{An{Hf}}}}`{{{f{Il}}{f{Il}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nn{AdAKf}}}{}}000000{{{f{Fn}}}{{An{Hh}}}}{{{f{Fn}}}Kh}{{{f{Eh}}}Kh}{{{f{Cn}}{f{Ed}}}Cn}{{{f{Cn}}{f{c}}}Cn{{Kb{{Df{Hh}}}}N`}}{{{f{Eh}}{f{Ed}}}Eh}{{{f{Eh}}{f{c}}}Eh{{Kb{{Df{Hh}}}}N`}}{{{f{Dl}}AMj}ADh}{{{f{Mf}}AMj}B@b}{AMlAOd}{{{f{Dl}}BfAMj}B@b}{AMl{{f{Dj}}}}{{{f{Cn}}F`}{{Af{Ad}}}}{{{f{BhDn}}Dl}b}{{{f{ADh}}}{{f{ADh}}}}{{{f{Dn}}}{{Af{Nh}}}}{fc{}}00000000000000000000000000000{{{f{Dl}}}Dl}{{{f{ADh}}}BAd}{{{f{Il}}F`}{{Af{{AKh{Il}}}}}}{{{f{{AMd{ANlIj}}}}F`}{{Af{{AKh{{AMd{ANlIj}}}}}}}}{fD`}00{{{f{Eh}}}Cn}{{{f{Hf}}{f{Hf}}}d}{{{f{Dn}}c}{{Af{Dn}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dn}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Nn{AKne}}}{}{}{{Gl{}{{B`{{Nn{ce}}}}}}}}0{{ADhg}{{Nn{AL`e}}}{}{}{{Gl{}{{B`{{Nn{ce}}}}}}}}0{AOf{{Nn{eg}}}{}{{AKn{c}}AIn}{}}0{{AOfADh}{{Nn{eg}}}{}{{AL`{c}}AIn}{}}0{{{f{Hf}}}{{Af{c}}}Kf}{c{{Nn{e}}}{}{}}0000000000000000000000000000000000{{}{{Nn{c}}}{}}0000000000000000000000000000000000{{{f{Hf}}{f{Dl}}}{{Af{Hf}}}}{{{f{Dl}}AMj}{{Af{ADh}}}}{f{{Nn{FhBAf}}}}00{{{f{Dn}}{f{{l{c}}}}e}{{Af{Dn}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{fO`}0000000000000000000000000000000000{{{f{ADh}}}ADh}{{{f{Fn}}}{{Af{Fn}}}}{{{f{Cn}}}{{Af{Cn}}}}{{{f{Eh}}}{{Af{Eh}}}}{{{f{{AEf{c}}}}}{{Af{{l{{Hl{c}}}}}}}I`}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}F`}cA@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}0{{{f{Dl}}Hf}d}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}gA@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{AKj}}Dd}Kh}{{{f{AKl}}Dd}Kh}{{{f{Fn}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BAh}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BAj}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{AOj}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BAl}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BAn}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BB`}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BBb}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{BBd}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{B@n}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{AKj}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{AKl}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{Cn}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{Eh}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{AKb}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}{{{f{{AEf{c}}}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}I`}{{{f{Fn}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BAh}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BAj}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{AOj}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BAl}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BAn}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BB`}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BBb}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{BBd}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{B@n}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{AKj}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{AKl}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{Cn}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{Eh}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{AKb}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}{{{f{{AEf{c}}}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}I`}{{}c{}}0000000000000000000000000000000000{F`c{}}0{F`{{BBf{ce}}}{}{}}{{{f{{Df{Ob}}}}e}c{}{{Od{{f{Ed}}}{{C`{c}}}}}}{{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}{An{Gn}}}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fl{}{{B`{c}}}}HdInJ`}}{{{f{Dl}}}Hf}{{{f{Dn}}{f{{l{c}}}}e}DnBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{fh}b}{{{f{ALn}}}d}{{ALnd}ALn}{{{f{BhBBh}}{An{{f{Dj}}}}}b}{{{f{BhALn}}{f{ALn}}}{{Af{b}}}}{{{f{BhBBh}}}b}{{{f{BhBBh}}{f{Dj}}}b}{{{f{ALn}}Eb}Ed}{f{{f{c}}}{}}000{{{f{Bh}}}{{f{Bhc}}}{}}000{{{f{ALn}}{f{ALn}}c}{{Af{ALn}}}AM`}{{{f{ALn}}{f{Dl}}El}{{Af{Ad}}}}{{{f{ALn}}}ALn}{{f{f{Bhc}}}b{}}{fb}{{}BBj}{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{{BBhc}ALn{{Gl{}{{B`{{An{{f{Dj}}}}}}}}}}{F`b}000{{{f{ALn}}}{{f{Dl}}}}{{{f{ALn}}{f{ALn}}}c{}}{{{f{ALn}}{f{Cn}}}c{}}{{{f{ALn}}{f{Dj}}}c{}}120{{AM`{f{AOj}}{f{AOj}}}{{Af{AOj}}}}{BBhALn}{BBj{{L`{BBl}}}}{cc{}}000{{AOj{L`{BBl}}dBBn}ALn}{{AOjBBn}ALn}{{{f{Cn}}{f{AOh}}BBn}{{Af{ALn}}}}{{BfdF`BBn}ALn}{{{f{ALn}}F`}{{Af{Hf}}}}{{{f{ALn}}F`}Hf}{{{f{ALn}}}{{f{{L`{BBl}}}}}}<;=;<={{}F`}000{{}c{}}0000{ALnAd}{{{f{ALn}}}d}0{{{f{ALn}}}BC`}{{{f{ALn}}}F`}{{{f{ALn}}{f{ALn}}}c{}}{{{f{ALn}}{f{Cn}}}c{}}{{{f{ALn}}{f{Dj}}}c{}}021{{{f{ALn}}{f{ALn}}}{{Af{{H`{ALnALn}}}}}}{{DnDn}{{Af{{H`{DnDn}}}}}}{{{f{ALn}}}Kh}{{{f{BhBBj}}{f{{L`{BBl}}}}}{{Af{b}}}}1{{{f{ALn}}}{{Af{F`}}}}{{{f{ALn}}}{{f{Bf}}}}{{BfF`BBn}BBh}{{{L`{BBl}}}BBj}{{{f{BhBC`}}}{{An{c}}}{}}9;:;9:<{{{f{ALn}}}{{f{AOj}}}}{{{f{BhBBh}}{f{Dj}}}{{H`{M`d}}}}`{{{f{BC`}}}{{H`{F`{An{F`}}}}}}{{{f{ALn}}d}ALn}{{{f{ALn}}Eb}ALn}`{{{f{ALn}}AMjd}Fd}{{{f{ALn}}{f{AOh}}BCb}ALn}{{{f{ALn}}}{{Af{ALn}}}}{{{f{ALn}}}ALn}{fc{}}{c{{Nn{e}}}{}{}}000{{}{{Nn{c}}}{}}000{fO`}0005{{{f{ALn}}}d}{{{f{ALn}}}{{Af{BCd}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bh}}}{{f{Bhc}}}{}}0{AOhBBl}{{{f{BBn}}}BBn}{{{f{BBl}}}BBl}{{f{f{Bhc}}}b{}}0{fb}0{{}BBn}{{}BBl}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{BBn}}{f{BBn}}}d}{{{f{BBl}}{f{Dj}}}{{An{M`}}}}{{{f{BBn}}{f{BhGd}}}Gf}{{{f{BBl}}{f{BhGd}}}Gf}{cc{}}0{{{f{BBl}}M`}{{f{Dj}}}}{{{f{BBl}}}{{f{AOh}}}}{{{f{BBl}}M`}{{An{{f{Dj}}}}}}{{}F`}0{{}c{}}0{{{f{BBl}}}d}0{{{f{BBl}}}F`}{{{f{BBl}}{f{BBl}}}d}{fc{}}0{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}077`{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{}BCf}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{{}b}{{{f{BhBCf}}}b}{F`b}2{cc{}}6{{}F`}{{}c{}}=<;{{}d}1```````660````````````````````````{{{f{BCh}}}{{f{Dj}}}}<<;;`9{{{f{BCh}}}f}:9966`{{{f{BCj}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BCh}}{f{BhGd}}}{{Nn{bAOl}}}}077{cBCh{{AOn{{AKh{Dj}}}}}}{{}{{Jn{{f{Dj}}BCj}{{C`{b}}}}}}8877{cAKfAJb}{{{f{Dj}}}BCh}````{{{Jn{{f{Dj}}BCj}{{C`{b}}}}}b}{cAKfBCl}{fD`}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{f{{Nn{FhBAf}}}}{fO`}0{{}c{}}0`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{BCn}}}BCn}{{f{f{Bhc}}}b{}}{fb}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhGd}}MdF`}Gf}{cc{}}{{}BD`}{{}BCn}{{}{{An{F`}}}}{{}D`}{{}d}{{}F`}{{}c{}}{{{An{BD`}}}b}{BCnb}{{{An{F`}}}b}2{{{An{d}}}b}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}8```````````{{fh}b}00{{{f{BhBCd}}{Ff{Ad}}{f{BDb}}}{{Af{b}}}}{{{f{BCd}}{f{Cb}}}{{Ff{Ad}}}}0{{{f{BCd}}{f{Fn}}}{{Af{BCd}}}}{{{f{BCd}}{f{{Df{Bf}}}}}{{Af{BCd}}}}0{{{f{BCd}}{f{{Df{Bf}}}}{f{BDb}}d}{{Af{BCd}}}}{{{f{BCd}}JjF`}BCd}{{{f{BCd}}{f{Ad}}}c{}}{{BCd{f{Ad}}}c{}}{{{f{BCd}}{f{BCd}}}c{}}{{{f{BhBCd}}}{{f{BhBCd}}}}{{{f{BhBCd}}{f{Dj}}e}{{Af{{f{BhBCd}}}}}BDd{{Od{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBCd}}F`e}{{Af{{f{BhBCd}}}}}BDd{{Od{{f{Ad}}}{{C`{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bh}}}{{f{Bhc}}}{}}0000{{{f{BCd}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{BCd}}}BCd}{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}2{{f{f{Bhc}}}b{}}00{fb}00{{{f{BCd}}{f{Dj}}}{{Af{{f{Ad}}}}}}{{{f{BCd}}e}{{Af{{Ff{{f{Ad}}}}}}}{{Kb{Dj}}}{{Gl{}{{B`{c}}}}}}{{}BDh}{{}BCd}{F`{{f{c}}}{}}0000{F`{{f{Bhc}}}{}}0000{{{f{BCd}}{f{BCd}}}c{}}{{BCd{f{Ad}}}c{}}{{{f{BCd}}{f{Ad}}}c{}}{F`b}000{{{f{BCd}}{f{Dj}}}{{Af{BCd}}}}1{{{f{BhBCd}}{f{Dj}}}{{Af{Ad}}}}{{{f{BCd}}e}BCd{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BCd}}{f{{BDj{Bf}}}}}BCd}{{{f{BCd}}{An{{f{{Df{c}}}}}}}{{Af{BCd}}}{}}{{{f{BCd}}}{{Ff{Dl}}}}<{{{f{BDl}}}BCd}{{{f{BDb}}}BCd}{{{f{BDh}}{f{BDh}}}d}{{{f{BCd}}{f{BCd}}}d}00{{f{f{c}}}d{}}00{{{f{BCd}}}F`}`{{{f{BCd}}e}{{Af{BCd}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BCd}}{Ff{Ad}}}{{Af{BCd}}}}{{{f{BhBCd}}{f{BCd}}}{{Af{b}}}}{{{f{BCd}}}{{Ff{Mf}}}}{{{f{BCd}}AFl}{{Af{BCd}}}}{{{f{BCd}}{f{Fn}}}{{Af{BCd}}}}{{{f{BDf}}{f{BhGd}}}Gf}{{{f{BDh}}{f{BhGd}}}Gf}{{{f{BCd}}{f{BhGd}}}Gf}0{cc{}}0000{cBCd{{Gl{}{{B`{Ad}}}}}}{{{f{{Df{BDn}}}}}{{Af{BCd}}}}{{{f{{Df{BDn}}}}{f{BDb}}}{{Af{BCd}}}}{{c{f{BDb}}}{{Af{BCd}}}{{Bd{}{{B`{{f{BDn}}}}}}}}{{{f{BCd}}F`}{{An{{Ff{Hf}}}}}}{{{f{BCd}}{f{Dj}}}{{An{F`}}}}{{{f{BCd}}}{{Ff{{f{Bf}}}}}}{{{f{BCd}}}{{Ff{Bf}}}}{{{f{BCd}}}{{Ff{{f{Dj}}}}}}{{{f{BCd}}}{{f{{Df{Ad}}}}}}{{{f{BhBCd}}}{{f{Bh{Ff{Ad}}}}}}{{{f{BCd}}F`}{{Af{BDn}}}}{{{f{BCd}}F`{f{BhBDn}}}{{Af{b}}}}{{{f{BCd}}F`{f{BhBDn}}}b}{{{f{BCd}}}{{An{{Af{Dl}}}}}}`{{{f{BCd}}e}{{Af{BE`}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}0{{{f{BCd}}{Ff{Ad}}dd}{{Af{BE`}}}}{{{f{BDh}}{f{Bhc}}}bABd}{{{f{BhBCd}}{An{Nd}}}{{Af{BAl}}}}{{{f{BCd}}{An{F`}}}BCd}{{{f{BCd}}}F`}{{{f{BCd}}{f{{Df{Ad}}}}}{{Af{BCd}}}}{{{f{BhBCd}}{f{{Df{Ad}}}}}{{Af{{f{BhBCd}}}}}}{{{f{BhBCd}}{f{{Df{Ad}}}}}{{f{BhBCd}}}}{{{f{BCd}}{BEb{F`}}}{{f{c}}}{}}{{{f{BCd}}BEd}{{f{c}}}{}}{{{f{BCd}}{BEf{F`}}}{{f{c}}}{}}{{{f{BCd}}{BEh{F`}}}{{f{c}}}{}}{{{f{BCd}}F`}{{f{c}}}{}}{{{f{BCd}}{f{Dj}}}{{f{c}}}{}}{{{f{BCd}}{Ll{F`}}}{{f{c}}}{}}{{{f{BCd}}{BEj{F`}}}{{f{c}}}{}}{{}F`}0000{{{f{BhBCd}}F`c}{{Af{{f{BhBCd}}}}}BDd}{{}c{}}000000{{{f{BCd}}}{{Af{Fn}}}}{{{f{BCd}}}d}1{{{f{BCd}}}{{Jl{Ad}}}}{{{f{BCd}}}{{`{{Bd{}{{B`{BCd}}}}}}}}{{{f{BCd}}AMjd}BEl}{{{f{BCd}}}BEn}{{{f{BCd}}}F`}{{{f{BCd}}}{{Af{{An{Ad}}}}}}{{{f{BCd}}BDf}{{Af{{An{Ad}}}}}}1{{{f{BCd}}{f{BCd}}}c{}}{{BCd{f{Ad}}}c{}}{{{f{BCd}}{f{Ad}}}c{}}55{{{Ff{Ad}}}{{Af{BCd}}}}{{{Ff{Ad}}}BCd}111{{{f{BhBEl}}}{{An{c}}}{}}{{{f{BhBEn}}}{{An{c}}}{}}{{{f{BCd}}}BCd}{{{f{BCd}}ed}{{Af{{Ff{BCd}}}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}0{{BCde}{{Af{c}}}{}{{Cb{BCd}{{C`{{Af{c}}}}}}}}{{{f{BhBCd}}e}{{Af{c}}}{}{{Cb{{f{BhBCd}}}{{C`{{Af{c}}}}}}}}{{BCdgc}{{Af{e}}}{}{}{{Cb{BCdc}{{C`{{Af{e}}}}}}}}{{{f{BhBCd}}}{{An{Ad}}}}{{{f{BCd}}{f{BCd}}}d}=;<{{{f{BhBCd}}{f{Dj}}Bf}{{Af{{f{BhBCd}}}}}}{{{f{BhBCd}}{f{Dj}}c}{{Af{{f{BhBCd}}}}}BDd}{{{f{BhBCd}}F`c}{{Af{{f{BhBCd}}}}}BDd}{{{f{BhBCd}}Bfc}{{Af{{f{BhBCd}}}}}BDd}:`{{{f{BCd}}{f{Ad}}dd{An{Id}}}{{Af{BCd}}}}0{{{f{BCd}}F`dd{An{Id}}}{{Af{BCd}}}}{{{f{BCd}}}BDb}{{{f{BCd}}{f{BCd}}}{{Af{b}}}}{{{f{BCd}}e}{{Af{BCd}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BCd}}F`}{{An{{f{Ad}}}}}}{{{f{BCd}}c}{{Af{BCd}}}{{BF`{F`}}}}2{{{f{BCd}}c}{{Af{{Ff{Ad}}}}}{{BFb{Bf}}}}{{{f{BCd}}e{f{BFd}}}{{Af{BCd}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BCd}}e{f{BDb}}}{{Af{BCd}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BhBCd}}e}{{Af{b}}}{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{BCd}}}{{H`{F`F`}}}}{{{f{BCd}}Jj}BCd}{{{f{BCd}}}d}{{{f{BhBCd}}}b}{{{f{BEl}}}{{H`{F`{An{F`}}}}}}{{{f{BEn}}}{{H`{F`{An{F`}}}}}}{{{f{BCd}}JjF`}BCd}00{{{f{BCd}}cEf}{{Af{BCd}}}{{BFb{Bf}}}}{{{f{BhBCd}}cEf}{{Af{{f{BhBCd}}}}}{{BFb{Bf}}}}{{{f{BCd}}Jj}{{H`{BCdBCd}}}}0{{{f{BhBCd}}}{{`{{Bd{}{{B`{BCd}}}}}}}}{{BCdF`d}{{Ff{BCd}}}}{{{f{BCd}}{f{Ad}}}c{}}{{BCd{f{Ad}}}c{}}{{{f{BCd}}{f{BCd}}}c{}}{{{f{BCd}}BDf}{{Af{{An{Ad}}}}}}{{{f{BCd}}{An{F`}}}BCd}{{{f{BCd}}{f{Ed}}}{{Af{BCd}}}}{BCd{{Ff{Ad}}}}{{{f{BCd}}{f{Ed}}}BCd}{{{f{BCd}}{f{Ed}}d}BCd}{{{f{BCd}}BFf}{{Af{Nh}}}}{fc{}}00{fD`}{{{f{BhBCd}}{An{{f{Dj}}}}{An{{Nl{D`{Ff{D`}}}}}}}{{Af{BCd}}}}{{{f{BhBCd}}{An{{f{Dj}}}}{An{{Nl{Bf{Ff{Bf}}}}}}}{{Af{BCd}}}}{{{f{BhBCd}}{f{Dj}}e}{{Af{{f{BhBCd}}}}}BDd{{Od{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBCd}}F`e}{{Af{{f{BhBCd}}}}}BDd{{Od{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Nn{e}}}{}{}}000{BFh{{Af{BCd}}}}1{{{H`{BFj{f{{Df{B@b}}}}}}}{{Af{BCd}}}}{{c{f{BDb}}}{{Af{BCd}}}{{Bd{}{{B`{{Af{{f{BDn}}}}}}}}}}{{{f{BCd}}{f{Dj}}}{{Af{F`}}}}{{}{{Nn{c}}}{}}0000{f{{Nn{FhBAf}}}}{fO`}0000{{{f{BCd}}{An{{f{{Df{D`}}}}}}BDh{An{{H`{JjF`}}}}}{{Af{BCd}}}}{{{f{BCd}}d{An{{Ff{Bf}}}}BDh{An{{H`{JjF`}}}}}{{Af{BCd}}}}1{{{f{BCd}}{f{BCd}}}{{Af{BCd}}}}{{{f{BhBCd}}{f{BCd}}}{{Af{{f{BhBCd}}}}}}{{{f{BhBCd}}{f{BCd}}}b}{{}c{}}0000{{{f{BCd}}}F`}{{{f{BhBCd}}c}{{Af{{f{BhBCd}}}}}BDd}{{{f{BhBCd}}c{f{BDb}}}{{Af{{f{BhBCd}}}}}BDd}{{{f{BhBCd}}Ad}{{f{BhBCd}}}}{{{f{BCd}}Bf{An{Hh}}}{{Af{BCd}}}}{{{f{BhBCd}}Bf{An{Hh}}}{{f{BhBCd}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{BFl}}}BFl}{{f{f{Bhc}}}b{}}{fb}{{}BFl}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BFl}}{f{BFl}}}d}{{f{f{c}}}d{}}00{{{f{BFl}}{f{BhGd}}}Gf}{cc{}}{{{f{BFl}}{f{Bhc}}}bABd}`{{}F`}{{}c{}}`{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}``4````````````````````````````````{{fh}b}000{{{f{BE`}}}{{Af{BCd}}}}`{{{f{BFn}}}{{f{{Df{BG`}}}}}}{{{f{BE`}}c}{{Af{BCd}}}{{Ch{BCd}{{C`{{Af{BCd}}}}}}InJ`}}{{{f{Aj}}}Dn}{f{{f{c}}}{}}0000000{{{f{Bh}}}{{f{Bhc}}}{}}0000000{{{f{BFn}}}BFn}{{{f{Aj}}}Aj}{{{f{BE`}}}BE`}{{{f{BGb}}}BGb}{{f{f{Bhc}}}b{}}000{fb}000;{{}BFn}{{}Aj}{F`{{f{c}}}{}}00{{{f{BGd}}}{{f{c}}}{}}11111{F`{{f{Bhc}}}{}}0000000`{{BGfe}{}{}{{BGh{c}}}}{F`b}0000{{{f{BhBFn}}}b}111{{{f{BFn}}{f{BFn}}}d}{{{f{Aj}}{f{Aj}}}d}{{f{f{c}}}d{}}00000`{{{f{BGj}}}Hh}{{{f{BFn}}}{{f{{Df{Hh}}}}}}{{{f{BE`}}}{{Af{BCd}}}}{{{f{BhBFn}}}{{f{Bh{Ff{Hh}}}}}}{{{f{BFn}}{f{BhGd}}}Gf}{{{f{Aj}}{f{BhGd}}}Gf}{{{f{BE`}}{f{BhGd}}}Gf}{{{f{BGb}}{f{BhGd}}}Gf}0{{{f{Dj}}BGb}Bf}{cc{}}000{{{Ff{{H`{{Ff{Hh}}{Ff{BG`}}}}}}}BFn}{{{Ff{{Ff{BGl}}}}}BFn}2{{{Ff{BGl}}}BFn}{BFnAj}444{cBFn{{Gl{}{{B`{BGl}}}}}}{cBFn{{Hb{}{{B`{BGl}}}}}}{{{f{Aj}}F`}BGj}{{{f{BE`}}}{{f{Aj}}}}{{{f{BhBE`}}}{{f{BhAj}}}}{{{f{Aj}}}Ed}{{{f{BGn}}dd}{{Af{Aj}}}}0{{{f{BE`}}}{{Af{BCd}}}}{{{f{BhAj}}}{{f{BhBFn}}}}{{}F`}0000000{{}c{}}0000000{AjBFn}1{BFnc{}}{{{f{BFn}}}c{}}301{{{f{BGj}}}d}{{{f{Aj}}}d}{{{f{BFn}}}d}{{{f{BFn}}}{{BHb{{BH`{{Jl{Hh}}}}{Jl{BG`}}}}}}{{{f{Aj}}}BHd}{{{f{BE`}}}{{Ff{Ad}}}}{{{f{BE`}}{An{{H`{JjF`}}}}}{{Ff{Ad}}}}={{{f{BGj}}}F`}{{{f{Aj}}}F`}?????{{{Ff{Hh}}{Ff{BG`}}d}BFn}{{{f{BCd}}{Ff{Ad}}Aj{An{{Ff{Bf}}}}}BE`}{{{f{BhBHd}}}{{An{c}}}{}}{{{f{BhBHd}}F`}{{An{c}}}{}}{{{f{BE`}}c}{{Af{BCd}}}{{Cb{BCd}{{C`{{Af{BCd}}}}}}InJ`}}{f}{{{f{Aj}}}BGf}{{{f{BE`}}KjMl}{{Af{BCd}}}}{{BE`e}BE`{{AOn{Bf}}}{{Gl{}{{B`{c}}}}}}{{{f{Aj}}JjF`}BGd}{{{f{BhBFn}}}b}{{{f{BhAj}}}b}{{{f{BE`}}Dd}{{Af{BCd}}}}{{{f{BE`}}}{{Af{BCd}}}}{Aj{{Ff{Hh}}}}0{BE`Aj}{{{f{BhBE`}}}Aj}{fc{}}000{fD`}{c{{Nn{e}}}{}{}}0000000{{}{{Nn{c}}}{}}0000000{f{{Nn{FhBAf}}}}{fO`}0000000{AjAj}{{{f{Aj}}}{{f{BFn}}}}{{{f{Aj}}}{{f{BHf}}}}={{}c{}}0000000`````{{{f{BFn}}c}Ad{{Cb{{H`{Hh{f{BG`}}}}}{{C`{An}}}}InJ`}}{{{f{BFn}}c}Ad{{Cb{{H`{Hh{f{BG`}}}}}{{C`{}}}}InJ`}}{{{f{{Df{{BHh{Hh}}}}}}c}Ad{{Cb{{BHh{Hh}}}{{C`{An}}}}InJ`}}{{{f{{Df{{BHh{Hh}}}}}}c}Ad{{Cb{{BHh{Hh}}}{{C`{}}}}InJ`}}{{{f{{Df{c}}}}eBHj}{{AJf{c}}}{BHlBHn}{{Bd{}{{B`{{H`{HhHh}}}}}}Hd}}{{{f{{Df{c}}}}{f{Gn}}eBHj}{{AJf{c}}}{BHlBHn}{{Bd{}{{B`{{H`{HhHh}}}}}}Hd}}{{{f{{l{c}}}}HhHh}{{l{c}}}Bn}{{{f{BHf}}{f{{Df{Fd}}}}}d}{{{f{BI`}}{f{Aj}}}Ad}{{BIbBIb}BIb}0`{{{f{BId}}{f{BCd}}{f{Aj}}}{{Af{Ad}}}}{{{f{BId}}}{{Af{{f{Bf}}}}}}```````````````````````{{fh}b}00{{{f{BhBIf}}Hf}{{An{b}}}}{{{f{BhBIh}}{f{Hf}}}b}0{f{{f{c}}}{}}00{{{f{Bh}}}{{f{Bhc}}}{}}00{{{f{BIf}}}BIf}{{{f{BIh}}}BIh}{{{f{BDn}}}BDn}{{f{f{Bhc}}}b{}}00{fb}00{{{f{{Df{c}}}}}Dl{{B@h{Dl}}}}{{}BDn}{F`{{f{c}}}{}}00{F`{{f{Bhc}}}{}}00{F`b}00{{{f{BDn}}{f{BDn}}}d}{{f{f{c}}}d{}}00{{{f{BDn}}{f{BhGd}}}Gf}{cc{}}{{{H`{{f{Dl}}F`}}}BIf}{{{H`{{f{Dl}}F`}}}BIh}22{{gF`}BDb{{AOn{Bf}}}{{AOn{Dl}}}{{Bd{}{{B`{{Ff{{H`{ce}}}}}}}}}}{{}F`}00{{}c{}}00{BIfAd}{BIhAd}{{{f{Dl}}F`}BIf}{{{f{Dl}}F`}BIh}{{{Ff{Hf}}}BDn}{{{f{BhBIf}}F`}Ad}{{{f{BhBIh}}F`}Ad}{{{f{{Df{BDn}}}}{An{F`}}}{{Af{BDb}}}}0{{{f{{Df{BDn}}}}{An{F`}}}{{Af{{Ff{Dl}}}}}}{fc{}}00{c{{Nn{e}}}{}{}}00{{}{{Nn{c}}}{}}00{fO`}00==={{{f{{Df{BCd}}}}}{{Af{BCd}}}}{{{f{{Df{BCd}}}}d}{{Af{BCd}}}}`````{{IdId}Id}{{{f{{Df{BCd}}}}{An{Nd}}}{{Af{{H`{{Ff{BAl}}Nd}}}}}}{{{f{{AK`{Jj}}}}Nd{f{Bh{Ff{Id}}}}}b}{f{{f{c}}}{}}0{{{f{Bh}}}{{f{Bhc}}}{}}0{{}BIj}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{BIj}}}Id}{{{f{BIl}}{f{BhGd}}}Gf}{cc{}}0{{{f{BIl}}{f{Bhc}}}bABd}``{{}F`}0{{}c{}}0{{{f{Bh{BIn{BIlce}}}}HhId{f{BCd}}gi}b{}BJ`{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}0{{{f{BJb}}Nd{f{Bh{Ff{Id}}}}}{{Af{b}}}}0{{{f{BJb}}Nd{f{Bh{Df{Id}}}}}{{Af{b}}}}066{{{f{BhBIj}}{f{{Df{Dd}}}}}b}{{{f{BhBIj}}Lj}b}{{{f{BhBIj}}Jj}b}{{{f{BhBIj}}M`}b}{{{f{BhBIj}}Id}b}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{L`{ce}}}}}{{f{e}}}N`BJd}{{{f{{L`{c}}}}}BJf{BJhN`}}{{{f{{L`{ce}}}}}{}N`BJd}{{{f{{L`{c}}}}}LjBJj}{{{f{Bf}}}{{f{BJl}}}}{{{f{Bf}}}{{f{Dj}}}}{{{f{Bf}}}{{f{BJn}}}}{{{f{Bf}}}{{f{{Df{Dd}}}}}}{{{f{{L`{ce}}}}}{{f{c}}}N`BJd}3{{{L`{{Df{{BK`{c}}}}e}}}{{L`{{Df{c}}e}}}{}BJd}{{{L`{{BK`{c}}e}}}{{L`{ce}}}{}BJd}{f{{f{c}}}{}}060003000000000{{{f{Bh}}}{{f{Bhc}}}{}}0000000000000{{{f{ALn}}{f{ALn}}c}{{Af{ALn}}}AM`}{{{f{{L`{c}}}}}{{An{{f{AJb}}}}}{AJbN`}}`{{{f{BKb}}{f{Ad}}}{{Af{Ad}}}}{{{f{BKb}}c}{{Af{Ad}}}Ab}{{{f{Bf}}}Bf}{{{f{Ob}}}Ob}{{{f{BKd}}}BKd}{{{f{{L`{ce}}}}}{{L`{ce}}}N`{BJdA@j}}{{{f{Mn}}}Mn}{{{f{BFf}}}BFf}{{{f{B@b}}}B@b}{{{f{BDl}}}BDl}{{{f{Ml}}}Ml}{{{f{BKf}}}BKf}{{{f{BKh}}}BKh}{{{f{BKj}}}BKj}{{f{f{Bhc}}}b{}}00000000000{fb}00000000000{{{f{Bf}}{f{Bf}}}BAb}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}BAb{BKlN`}BJd}{AOfe{}{{AKn{c}}AIn}}0{{AOfADh}e{}{{AL`{c}}AIn}}0{{f{f{c}}}BAb{}}0{{AKfBCh}AKf}{AKfAKf}{{{f{Gh}}{f{ADh}}}{{ABb{Gh}}}}{{{f{B@b}}}{{f{ADh}}}}```{{}b}{cbBJd}{{}Bf}{{}{{L`{Dj}}}}{{}{{L`{{Df{c}}}}}{}}{{}{{L`{c}}}BKn}{{}{{L`{BL`}}}}{{}Mn}{{}BFf}{{}B@b}{{}BDl}{{}Ml}`{F`{{f{c}}}{}}0{{{f{Bf}}}f}11{{{f{{L`{ce}}}}}{{f{c}}}N`BJd}2222222222{F`{{f{Bhc}}}{}}0000000000000{{{f{{L`{c}}}}}{{f{Dj}}}{AJbN`}}`{{{L`{ADjc}}}{{Nn{{L`{ec}}{L`{ADjc}}}}}BJd{ADjInJ`}}{{{L`{ADjc}}}{{L`{ec}}}BJd{ADjInJ`}}{{{f{{L`{ce}}}}}{{BLb{ce}}}N`{A@jBJd}}{F`b}0000{{{f{Bh{L`{ce}}}}}bN`BJd}111111111{{{f{Bf}}{f{c}}}d{{Kb{Dj}}N`}}{{{f{Ob}}{f{Ob}}}d}{{{f{{L`{Gh}}}}{f{Gh}}}d}{{{f{{L`{BLd}}}}{f{BLd}}}d}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BLfN`}BJd}{{{f{Mn}}{f{Mn}}}d}{{{f{BFf}}{f{BFf}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{BDl}}{f{BDl}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{BKj}}{f{BKj}}}d}{{f{f{c}}}d{}}00000000000000000000000{BKd{{H`{M`M`}}}}`{{BDlc}BDl{{Cb{F`{f{B@b}}}{{C`{d}}}}}}{{AM`{f{AOj}}{f{AOj}}}{{Af{AOj}}}}{{{f{Bh{L`{ACn}}}}}{{Nn{bBLh}}}}{{{f{AKf}}{f{BhGd}}}{{Nn{bAOl}}}}0{{{f{Bf}}{f{BhGd}}}{{Nn{bAOl}}}}0{{{f{Ob}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BKd}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{{L`{ce}}}}{f{BhGd}}}{{Nn{bAOl}}}{BClN`}BJd}{{{f{{L`{ce}}}}{f{BhGd}}}{{Nn{bAOl}}}{ADlN`}BJd}{{{f{{L`{ce}}}}{f{BhGd}}}{{Nn{bAOl}}}N`BJd}{{{f{Mn}}{f{BhGd}}}Gf}{{{f{BFf}}{f{BhGd}}}Gf}{{{f{B@b}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BDl}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{Ml}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BKf}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BKh}}{f{BhGd}}}{{Nn{bAOl}}}}{{{f{BKj}}{f{BhGd}}}{{Nn{bAOl}}}}`{BLjAKf}{BLlAKf}{BLnAKf}{BLhAKf}{cc{}}0{{{f{Dj}}}Bf}{D`Bf}{{{f{D`}}}Bf}{FhBf}4{M`Ob}5{BM`{{L`{BJl}}}}{{{BHh{c}}}{{L`{{Df{c}}}}}{}}{c{{L`{c}}}{}}{{{ABb{ce}}}{{L`{ce}}}N`BJd}{Fh{{L`{Dj}}}}:{BMbc{}}{{{f{BJl}}}{{L`{BJl}}}}{{{f{BL`}}}{{L`{BL`}}}}{BMd{{L`{BJn}}}}{BMf{{L`{BL`}}}}{{{f{BJn}}}{{L`{BJn}}}}{{{f{{Df{c}}}}}{{L`{{Df{c}}}}}A@j}{{{f{Dj}}}{{L`{Dj}}}}{{{Ff{ce}}}{{L`{{Df{c}}e}}}{}{BJdA@j}}{{{L`{Dj}}}{{L`{{Df{Dd}}}}}}{D`{{L`{Dj}}}}{{{AKh{c}}}{{L`{c}}}{BMhN`}}{cc{}}0000{{{Ff{B@b}}}BDl}1111{{c{An{Gn}}}BMj{}}{{{BMl{Jj}}{BMl{Dd}}{An{Gn}}}BMn}{{{BMl{Jj}}{BMl{Dd}}{An{Gn}}}BN`}{cBf{{Gl{}{{B`{{f{Bf}}}}}}}}{cBf{{Gl{}{{B`{{f{Dj}}}}}}}}{cBf{{Gl{}{{B`{Bf}}}}}}{cBf{{Gl{}{{B`{D`}}}}}}{cBf{{Gl{}{{B`{BD`}}}}}}{cBf{{Gl{}{{B`{{AKh{Dj}}}}}}}}{cBf{{Gl{}{{B`{{f{BD`}}}}}}}}{cBf{{Gl{}{{B`{{ABb{Dj}}}}}}}}{e{{L`{{Df{c}}}}}{}{{Gl{}{{B`{c}}}}}}{{gF`}{{BNb{Jj}}}Kb{{Gl{}{{B`{{An{c}}}}}}}{{Gl{}{{B`{{An{e}}}}}}}}0{e{{BNb{Jj}}}{{Gl{}{{B`{{An{d}}}}}}}{{Gl{}{{B`{{An{c}}}}}}}}{{gADh}{{BNb{Jj}}}BHn{{Gl{}{{B`{{An{c}}}}}}}{{Gl{}{{B`{{An{e}}}}}}}}2{e{{L`{{Df{c}}}}}In{{Hb{}{{B`{c}}}}}}{{}{{L`{c}}}N`}{c{{L`{ec}}}BJdN`}{{{f{Dj}}}Bf}0{{{f{Dj}}}{{Nn{BNd}}}}{D`Bf}{{Bfc}BNf{}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BNhN`}BJd}{{{f{Bh{L`{ce}}}}}{{An{{f{Bhc}}}}}N`BJd}{{{f{Bh{L`{ce}}}}}{{f{Bhc}}}N`BJd}{{{f{BDl}}}{{Ff{{f{Bf}}}}}}{{{f{BDl}}}{{Ff{{H`{{f{Dj}}c}}}}}{}}{{{f{BDl}}}{{Ff{Bf}}}}{{{f{BDl}}}{{Ff{{f{Dj}}}}}}{{{f{Fd}}F`}Hf}7{{{f{Bf}}{f{Bhc}}}bABd}{{{f{{L`{ce}}}}{f{Bhg}}}b{BNjN`}BJdABd}{{{f{BFf}}{f{Bhc}}}bABd}{{{f{B@b}}{f{Bhc}}}bABd}{{{f{Ml}}{f{Bhc}}}bABd}{{{f{BKj}}{f{Bhc}}}bABd}{{{f{Ob}}}M`}{{}b}{cb{A@jBJd}}{{{f{BDl}}{f{Dj}}}{{An{F`}}}}{{{f{{Df{M`}}}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{}F`}0000000000000`{{{f{BhBKd}}}{{f{BhId}}}}`{{}c{}}0000000000000{{{L`{ce}}}{{An{c}}}{}BJd}{{{L`{ce}}}{}N`BJd}{{{L`{ce}}}{{H`{e}}}N`BJd}{{{L`{BNl}}}Ad}{BfD`}{{{f{BDl}}}d}{{{f{BKd}}}d}{{{f{Ob}}}d}`{{{f{{L`{ACn}}}}}d}{{{f{c}}}d{}}1{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BNhN`}BJd}{{{f{BDl}}}F`}`1{{{f{ALn}}{f{ALn}}}{{Af{{H`{ALnALn}}}}}}{{DnDn}{{Af{{H`{DnDn}}}}}}{{{f{Bh{L`{ce}}}}}{{f{Bhc}}}{BNnN`}{BJdA@j}}{{{f{BO`}}}Kh}0{{{f{BOb}}}Kh}``11`{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BLfN`}BJd}{{BOdF`}{{An{F`}}}}{{Bfc}BOf{}}{c{{L`{c}}}{}}{{BfADhd}B@b}{e{{L`{c}}}{}{{Od{{f{{BLb{c}}}}}{{C`{c}}}}}}{{ce}{{L`{ce}}}{}BJd}{{}{{L`{{BK`{c}}}}}{}}{c{{L`{{BK`{e}}c}}}BJd{}}{F`{{L`{{Df{{BK`{c}}}}}}}{}}{{F`c}{{L`{{Df{{BK`{e}}}}c}}}BJd{}}3210`{{}Ob}{{}BKd}{{{f{Bf}}{f{Bf}}}{{An{BAb}}}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}{{An{BAb}}}{BNhN`}BJd}{c{{BOh{{L`{c}}}}}{}}{{ce}{{BOh{{L`{ce}}}}}{}BJd}`````{{{f{BO`}}}Kh}0{{{f{{L`{c}}}}{f{BhBOj}}}b{AJbN`}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}dN`BJd}{{{f{BOb}}KjMl}{{Af{Kh}}}}{{{f{Bh{L`{ACn}}}}{f{Bh{Df{Dd}}}}}{{Nn{F`BLh}}}}{{{f{Bh{L`{ACn}}}}BOl}{{Nn{bBLh}}}}{{{f{Bh{L`{ACn}}}}{f{Bh{Ff{Dd}}}}}{{Nn{F`BLh}}}}{{{f{Bh{L`{ACn}}}}{f{BhD`}}}{{Nn{F`BLh}}}}{{{f{Bh{L`{ACn}}}}{f{Bh{Df{BOn}}}}}{{Nn{F`BLh}}}}`{{{f{Bh{L`{ACn}}}}C@`}{{Nn{IdBLh}}}}`{{{f{AJj}}F`F`}AJj}0{{{f{{L`{c}}}}}{{An{{f{AJb}}}}}{AJbN`}}{{{f{C@b}}Dd}Kh}{{M`M`}BKd}`{{{f{{L`{ce}}}}}F`N`BJd}>>{{{f{Ob}}}{{An{M`}}}}{fc{}}00000000000{fD`}00{AOf{{Nn{eg}}}{}{{AKn{c}}AIn}{}}0{{AOfADh}{{Nn{eg}}}{}{{AL`{c}}AIn}{}}0{c{{Nn{e}}}{}{}}000{{{L`{{Df{c}}e}}}{{Nn{{L`{{BHh{c}}e}}}}}{}BJd}1111111111{{}{{Nn{c}}}{}}0000000000000{{BOdF`}{{Nn{F`AKf}}}}{c{{Nn{{L`{c}}C@d}}}{}}{{ce}{{Nn{{L`{ce}}C@d}}}{}BJd}{{}{{Nn{{L`{{BK`{c}}}}C@d}}}{}}{c{{Nn{{L`{{BK`{e}}c}}C@d}}}BJd{}}10{c{{Nn{{BOh{{L`{c}}}}C@d}}}{}}{{ce}{{Nn{{BOh{{L`{ce}}}}C@d}}}{}BJd}{{{f{BDl}}{f{{Df{F`}}}}}{{Nn{BDlAKf}}}}{f{{Nn{FhBAf}}}}00{{{L`{ce}}}{{Nn{c{L`{ce}}}}}{}BJd}{fO`}0000000000000{{{L`{ce}}}cA@jBJd}`{{{f{C@b}}Dd}Kh}{{}c{}}0000000000000{{{f{{L`{ce}}}}}F`N`BJd}``{{B@b{C@f{BfBf}}}B@b}{{{f{AKf}}c}AKf{{Od{{f{Dj}}}{{C`{D`}}}}}}{{{f{Bh{L`{ACn}}}}{f{{Df{Dd}}}}}{{Nn{F`BLh}}}}{{{f{BhBf}}BD`}{{Nn{bAOl}}}}{{{f{BhBf}}C@h}{{Nn{bAOl}}}}{{{f{BhBf}}{f{Dj}}}{{Nn{bAOl}}}}{{{f{Bh{L`{ACn}}}}{f{{Df{C@j}}}}}{{Nn{F`BLh}}}}```````{{c{An{Gn}}}BMj{}}{{{BMl{Jj}}{BMl{Dd}}{An{Gn}}}BMn}{{{BMl{Jj}}{BMl{Dd}}{An{Gn}}}BN`}`{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{C@l{An{{f{ADh}}}}}{{Nn{{BNb{Jj}}AKf}}}}{cc{}}{{}F`}{{}c{}}{{{f{C@l}}}d}{F`C@l}{{{f{C@l}}}{{f{{Df{Jj}}}}}}{{{f{BhC@l}}{f{Gh}}}b}{{{f{BhC@l}}}b}{{{f{BhC@l}}{f{{Df{{ABb{Gh}}}}}}}b}1{{{f{BhC@l}}{An{{f{Gh}}}}}b}{C@l{{C@n{Jj}}}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`};`{{fh}b}{{{f{CA`}}}{{f{ADj}}}}{{{f{BhCA`}}}{{ABb{Gh}}}}{{{f{BhCA`}}}{{f{BhADj}}}}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{CA`}}}CA`}{{f{f{Bhc}}}b{}}{fb}{{{f{CA`}}}{{f{ADh}}}}{{}CA`}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhCA`}}F`}b}{{{f{CA`}}{f{BhGd}}}{{Nn{bAOl}}}}{cc{}}{{}F`}{{}c{}}{{{f{CA`}}}F`}{F`CA`}{{{f{BhCA`}}}b}70{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{CA`}}}{{An{{f{CAb}}}}}}8```````{{{f{AJj}}F`F`}AJj}0`{{}b}0{{}d}``{{eF`F`}{{CAd{Jj}}}{{Kb{Dj}}}{{Bd{}{{B`{c}}}}}}{{eF`F`}{{AK`{Jj}}}{{Kb{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{Idb}`{{fh}b}{{{f{Kh}}}Hf}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{Kh}}}Kh}{{f{f{Bhc}}}b{}}{fb}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{Kh}}}{{f{Dl}}}}{cc{}}{{}F`}{{}c{}}{{KhBf}Ad}{{{f{Kh}}}d}{{DlHf}Kh}`{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{BhKh}}Hf}b}{{{f{Kh}}}{{f{Hf}}}}9{{{An{Kj}}Dl}Kh}``````{{fh}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{BDb}}}BDb}{{f{f{Bhc}}}b{}}{fb}{{{f{BDb}}{f{Dj}}}d}{{}BDb}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{c}}{f{c}}}{{Af{b}}}CAf}{{{f{BDb}}{f{BDb}}}d}{{f{f{c}}}d{}}00{{{f{BDb}}{f{BhGd}}}Gf}{{{f{BDn}}}BDb}{{{f{CAh}}}BDb}{CAhBDb}{{{f{{Df{Ad}}}}}BDb}{BDlBDb}{{{f{BDl}}}BDb}{cc{}}{eBDb{{AOn{Mf}}}{{Gl{}{{B`{c}}}}}}{{{f{BDb}}{f{Dj}}}{{An{{f{Dl}}}}}}{{{f{BDb}}F`}{{An{{H`{{f{Bf}}{f{Dl}}}}}}}}{{{f{BhBDb}}F`}{{An{{H`{{f{BhBf}}{f{BhDl}}}}}}}}{{{f{BDb}}{f{Dj}}}{{An{Mf}}}}{{{f{BDb}}{f{Dj}}}{{An{{H`{F`{f{Bf}}{f{Dl}}}}}}}}{{{f{CAj}}}{{Ff{{f{Bf}}}}}}{{{f{BDb}}}{{Ff{{f{Bf}}}}}}{{{f{{CAf{}{{CAl{c}}}}}}}{{Ff{{H`{{f{Dj}}c}}}}}{ADlBLf}}{{{f{BDb}}}{{Ff{{H`{{f{Dj}}c}}}}}{}}{{{f{CAj}}}{{Ff{Bf}}}}{{{f{BDb}}}{{Ff{Bf}}}}{{{f{CAj}}}{{Ff{{f{Dj}}}}}}{{{f{BDb}}}{{Ff{{f{Dj}}}}}}{{{f{BDb}}{f{Bhc}}}bABd}{{{f{CAj}}{f{Dj}}}{{An{F`}}}}{{{f{BDb}}{f{Dj}}}{{An{F`}}}}{{}F`}{{{f{BhBDb}}F`BfDl}{{Af{{An{Dl}}}}}}{{}c{}}{BDbc{}}{{{f{BDb}}}d}{{{f{BDb}}}{{`{{Bd{}{{B`{{H`{{f{Bf}}{f{Dl}}}}}}}}}}}}{{{f{BDb}}}{{`{{Jb{}{{B`{{f{Dl}}}}}}}}}}{{{f{BhBDb}}}{{`{{Jb{}{{B`{{f{BhDl}}}}}}}}}}{{{f{BDb}}}{{`{{Jb{}{{B`{Mf}}}}}}}}{{{f{BDb}}}{{`{{Jb{}{{B`{{f{Bf}}}}}}}}}}{{{f{BDb}}}F`}{{{f{BhBDb}}BDb}b}{{{f{BhBDb}}{f{BDb}}}b}{{}BDb}{{{f{BDb}}F`BfDl}{{Af{BDb}}}}{{{f{BhBDb}}{f{Dj}}}{{An{Dl}}}}{{{f{BhBDb}}{f{Dj}}Bf}{{An{Bf}}}}{{{f{BhBDb}}F`}b}{{{f{BDb}}c}{{Af{BDb}}}Gl}{{{f{BhBDb}}{f{Dj}}Dl}{{An{Dl}}}}{{{f{BhBDb}}F`Dl}{{An{Dl}}}}5{{{f{BhBDb}}F`}{{An{{H`{BfDl}}}}}}{{{f{BDb}}AMj}BDl}{fc{}}{{{f{BhBDb}}{f{BDb}}}{{Af{d}}}}{c{{Nn{e}}}{}{}}{{{f{BDb}}{f{Dj}}}{{Af{{f{Dl}}}}}}{{{f{BDb}}F`}{{Af{{H`{{f{Bf}}{f{Dl}}}}}}}}{{{f{BDb}}{f{Dj}}}{{Af{Mf}}}}{{{f{BDb}}{f{Dj}}}{{Af{{H`{F`{f{Bf}}{f{Dl}}}}}}}}{{{f{BhBDb}}{f{Dj}}}{{Af{{f{BhDl}}}}}}{{{f{CAj}}{f{Dj}}}{{Af{F`}}}}{{}{{Nn{c}}}{}}{fO`}{{}c{}}{F`BDb}{{{f{BhBDb}}BfDl}{{An{Dl}}}}`````````````````{{fh}b}0{{Bf{Ff{Fd}}{f{ADh}}}{{Af{Ad}}}}{{Bf{Ff{Fd}}{f{ADh}}{An{{f{CAn}}}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Kf}{}}{{Adc}e{A`Kf}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNl}}Eb}Ed}0{{{f{BNl}}}{{Af{Ed}}}}0`{{{f{Ad}}F`}{{f{Fd}}}}{{{f{BNl}}}{{f{ADj}}}}{{{f{BhBNl}}}{{f{BhADj}}}}0{{{f{Ad}}}Dn}{{{f{BhBNl}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNl}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNl}}}}{{{f{BhBNl}}}{{Af{F`}}}}0{{{f{BhAd}}}{{Af{F`}}}}{{{f{Ad}}}{{Af{{f{Eh}}}}}}{{{f{Ad}}}{{Af{{f{AKb}}}}}}{{{f{BNl}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fn}}}}}}{f{{f{c}}}{}}000{{{f{Bh}}}{{f{Bhc}}}{}}000{{{f{BNl}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Ad}}{f{Dl}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Dl}}El}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALn}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNl}}}Fb}{{{f{Ad}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{BNl}}}{{f{{Ff{Fd}}}}}}{{{f{BhBNl}}}{{f{Bh{Ff{Fd}}}}}}{{{f{BhAd}}}{{f{Bh{Ff{Fd}}}}}}{{{f{Ad}}}Ad}{{{f{Jf}}}Jf}1{{{f{BNl}}}{{L`{BNl}}}}{{f{f{Bhc}}}b{}}0{fb}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Il}}}}}}{{}Ad}{F`{{f{c}}}{}}000{{{f{Ad}}}{{f{c}}}{}}{F`{{f{Bhc}}}{}}000{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Kf}{}}{{Adc}e{A`Kf}{}}{{{f{Ad}}{f{Ad}}}{{Af{Kj}}}}{F`b}000{{{f{BNl}}}Ad}0{{{f{BNl}}}{{f{Dl}}}}0{{{f{Jf}}{f{Jf}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}c}{{Af{Fn}}}B@`}{{{f{Ad}}{f{Dj}}}{{Af{Fn}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fn}}}}{{{f{Ad}}{f{Dj}}}c{}}{{{f{Ad}}c}eB@`{}}255{{f{f{c}}}d{}}00{{{f{Ad}}}F`}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HfF`}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKj}}}}}}{{{f{Ad}}}{{Af{{f{AKl}}}}}}{{{f{BNl}}}{{AKh{Mf}}}}0{{{f{Ad}}AFl}{{Af{Ad}}}}{{{f{BNl}}{f{Fn}}}{{Af{Ad}}}}{{{f{Jf}}{f{BhGd}}}Gf}{{{f{Ad}}{f{BhGd}}}Gf}0{{{f{Ad}}}D`}{cc{}}000{{{l{c}}}AdBn}{{Bf{f{{Df{Hf}}}}d}{{Af{Ad}}}}{{Bf{f{{Df{Hf}}}}{f{Dl}}d}{{Af{Ad}}}}{{BfFd}{{Af{Ad}}}}{{Bf{Ff{Fd}}}{{Af{Ad}}}}{{Bf{Ff{Fd}}{f{Dl}}}Ad}{cAd{{Gl{}{{B`{Lj}}}}}}{cAd{{Gl{}{{B`{{An{Lj}}}}}}}}{cAd{{Gl{}{{B`{D`}}}}}}{cAd{{Gl{}{{B`{d}}}}}}{cAd{{Gl{}{{B`{{An{d}}}}}}}}{cAd{{Gl{}{{B`{{f{Kj}}}}}}}}{cAd{{Gl{}{{B`{{An{M`}}}}}}}}{cAd{{Gl{}{{B`{Kj}}}}}}{cAd{{Gl{}{{B`{{An{Kj}}}}}}}}{cAd{{Gl{}{{B`{{f{Ib}}}}}}}}{cAd{{Gl{}{{B`{Ib}}}}}}{cAd{{Gl{}{{B`{{An{Ib}}}}}}}}{cAd{{Gl{}{{B`{{f{Jj}}}}}}}}{cAd{{Gl{}{{B`{Jj}}}}}}{cAd{{Gl{}{{B`{{An{Jj}}}}}}}}{cAd{{Gl{}{{B`{{f{Lj}}}}}}}}{cAd{{Gl{}{{B`{{f{d}}}}}}}}{cAd{{Gl{}{{B`{{An{D`}}}}}}}}{cAd{{Gl{}{{B`{{f{Dj}}}}}}}}{cAd{{Gl{}{{B`{M`}}}}}}{cAd{{Gl{}{{B`{{f{M`}}}}}}}}{cAd{{Gl{}{{B`{{An{Id}}}}}}}}{cAd{{Gl{}{{B`{Id}}}}}}{cAd{{Gl{}{{B`{{f{Id}}}}}}}}{cAd{{Gl{}{{B`{{An{{f{Dj}}}}}}}}}}{{Bf{Ff{Md}}}Ad}{{Bf{Ff{Ib}}}Ad}{{Bf{Ff{Kj}}}Ad}{{Bf{Ff{Jj}}}Ad}{{Bf{Ff{M`}}}Ad}{{Bf{Ff{Lj}}}Ad}{{Bf{Ff{Id}}}Ad}{{BfF`{f{Dl}}}Ad}{{{f{Ad}}F`F`}Ad}{{{f{BNl}}F`}{{Af{Hf}}}}{{{f{Ad}}}F`}{{{f{Ad}}}Hj}{{{f{Ad}}}Ad}{{{f{BNl}}}{{An{{Ld{Lb}}}}}}0{{{f{BNl}}F`}{{An{{f{Hn}}}}}}0{{{f{BNl}}F`F`}{{An{{f{Hn}}}}}}0{{{f{BNl}}F`}Hf}0{{{f{Ad}}{f{Dj}}}{{Af{Fn}}}}{{{f{Ad}}c}{{Af{Fn}}}B@`}{{{f{Ad}}{f{Ad}}}{{Af{Fn}}}}1{{{f{Ad}}{f{Dj}}}c{}}1{{{f{BNl}}}d}{{{f{Jf}}{f{Bhc}}}bABd}{{{f{Ad}}{An{F`}}}Ad}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BBb}}}}}}{{{f{Ad}}}{{Af{{f{BBd}}}}}}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}`{{{f{Ad}}}{{Af{Dn}}}}{{}F`}000{{}c{}}000{AdBCd}1{BDdAd}{AdAd}=={{{f{Ad}}}{{Af{Fn}}}}000{{{f{BNl}}}Fn}0{{}d}00{{{f{Ad}}}Jf}{{{f{Ad}}}CB`}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNl}}}F`}{{{f{Ad}}}F`}{{{f{BNl}}F`}Ad}0{{{f{Ad}}}{{Af{{f{Dn}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fn}}}}{{{f{Ad}}c}{{Af{Fn}}}B@`}{{{f{Ad}}{f{Dj}}}c{}}021{{{f{Ad}}}{{Af{{An{c}}}}}Kf}{{{f{BNl}}}{{Af{Kh}}}}0{{{f{BNl}}}{{An{Kj}}}}0{{{f{Ad}}}Kh}1122322{{{f{Ad}}c}e{A`Kf}{}}{{Adc}e{A`Kf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}>>={{{f{BNl}}}{{Af{F`}}}}0{{{f{BNl}}}{{f{Bf}}}}{{Bfc}Ad{{Kb{{Df{Kj}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Jj}}}}}}}}{{Bfc}AdBDd}{{Bfc}Ad{{Kb{{Df{{An{{AKh{{Df{Dd}}}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Jj}}}}}}{{Bfc}Ad{{Kb{{Df{{AKh{{Df{Dd}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Md}}}}}}{{Bfc}Ad{{Kb{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Hf}}}}}}{{Bfc}Ad{{Kb{{Df{{f{{Df{Dd}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Ib}}}}}}{{Bfc}Ad{{Kb{{Df{{An{{AKh{Dj}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Id}}}}}}{{Bfc}Ad{{Kb{{Df{{AKh{Dj}}}}}}}}{{Bfc}Ad{{Kb{{Df{M`}}}}}}{{Bfc}Ad{{Kb{{Df{{An{{f{Dj}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{D`}}}}}}}}{{Bf{f{Ad}}}Ad}{{Bfc}Ad{{Kb{{Df{{f{Dj}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Ad}}}}}}}}{{Bfc}Ad{{Kb{{Df{Ad}}}}}}{{Bf{Ll{M`}}}Ad}{{Bfc}Ad{{Kb{{Df{d}}}}}}{{Bf{Ll{Id}}}Ad}{{Bfc}Ad{{Kb{{Df{{An{{Ff{Dd}}}}}}}}}}{{Bfc}Ad{{Kb{{Df{Lj}}}}}}{{Bfc}Ad{{Kb{{Df{{An{d}}}}}}}}{{Bf{Ll{Jj}}}Ad}{{Bfc}Ad{{Kb{{Df{{An{M`}}}}}}}}{{Bfc}Ad{{Kb{{Df{{Ff{Dd}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Kj}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Id}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Ib}}}}}}}}{{Bfc}Ad{{Kb{{Df{D`}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Md}}}}}}}}{{Bfc}Ad{{Kb{{Df{{An{Lj}}}}}}}}{{Bf{Ll{Lj}}}Ad}{{Bf{f{Dl}}}Ad}{{{f{BNl}}F`F`}Ad}{{BfF`}Ad}{{{f{BhCB`}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Fn}}}}{{{f{Ad}}c}{{Af{Fn}}}B@`}{{{f{Ad}}{f{Dj}}}{{Af{Fn}}}}2{{{f{Ad}}c}eB@`{}}{{{f{Ad}}{f{Dj}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNl}}}F`}`{{{f{Ad}}}CBb}{{{f{Ad}}}{{Af{Kh}}}}{{{f{BNl}}KjMl}{{Af{Kh}}}}0{{{f{BNl}}}Ad}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Kf}{}}{{Adc}e{A`Kf}{}}{{{f{BhBNl}}Bf}b}{{{f{BhAd}}Bf}{{f{BhAd}}}}{{{f{Ad}}{f{{Df{Jj}}}}}{{Af{Ad}}}}6{JfJf}{{{f{BNl}}{f{Cb}}Mn}{{Af{Ad}}}}0{{{f{Ad}}Kjdd{An{Id}}}{{Af{Ad}}}}{{{f{Ad}}F`dd{An{Id}}}{{Af{Ad}}}}{{{f{Ad}}F`}Ad}{{{f{BhAd}}Jf}b}{{{f{BNl}}Jj}Ad}{{{f{BhBNl}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Id}}}Ad}{{{f{CB`}}}{{H`{F`{An{F`}}}}}}{{{f{BNl}}JjF`}Ad}{{{f{Ad}}JjF`}Ad}{{{f{Ad}}Eb}{{Af{Ad}}}}{{{f{BNl}}Eb}{{Af{Ad}}}}0{{{f{BNl}}Jj}{{H`{AdAd}}}}{{{f{Ad}}Jj}{{H`{AdAd}}}}{{{f{BNl}}Dd}{{An{Kj}}}}0{{{f{BNl}}Dd}{{Af{Kh}}}}0{{{f{Ad}}}{{Af{{f{Cn}}}}}}{{{f{Ad}}F`}{{Af{{AKh{Dj}}}}}}{{{f{Ad}}{f{Dl}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Kf}{}}{{{f{Ad}}c}e{A`Kf}{}}{{{f{Ad}}}{{Af{c}}}Kf}{{{f{BNl}}}{{Af{Kh}}}}0{{{f{Ad}}}{{Af{Kh}}}}{{{f{Ad}}{An{F`}}}Ad}{{{f{BNl}}{f{Ed}}}{{Af{Ad}}}}{{{f{BNl}}{f{{Df{Hh}}}}}{{Af{Ad}}}}{{{f{BNl}}{f{{Df{Hh}}}}}Ad}{{{f{BNl}}{f{Ed}}}Ad}{{{f{Ad}}{f{{Df{Hh}}}}}Ad}{{{f{Ad}}F`AMj}Fd}{{{f{Ad}}}{{Af{Ad}}}}{fc{}}0{{{f{Ad}}}{{AKh{Ad}}}}{fD`}{{AdAd}{{Af{Ad}}}}{c{{Nn{e}}}{}{}}00{{{H`{{f{B@b}}Fd}}}{{Af{Ad}}}}{{{H`{Bf{Ff{Fd}}}}}{{Af{Ad}}}}{{{H`{BfFd}}}{{Af{Ad}}}}3{{{H`{{f{B@b}}{Ff{Fd}}}}}{{Af{Ad}}}}{{}{{Nn{c}}}{}}0006{{Bfc}{{Nn{Ad}}}{}}{{{f{BhAd}}{If{c}}}dBn}8{f{{Nn{FhBAf}}}}{fO`}000{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{AOj}}}}}}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{BNl}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNl}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNl}}Dd}{{An{Kj}}}}0{{{f{BNl}}Dd}{{Af{Kh}}}}0{{}c{}}000{{AdBf}Ad}{{{f{Ad}}c}Ad{A`Kf}}{{{f{Ad}}{f{Fn}}{f{Ad}}}{{Af{Ad}}}}``{{fh}b}{{{f{Cf}}}{{f{Ad}}}}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{Cf}}}Cf}{{f{f{Bhc}}}b{}}{fb}{{{f{Cf}}}Ad}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{cc{}}{{}F`}{{}c{}}{{{CBd{Ad}}}Cf}{{{f{BhCf}}{f{BhFd}}}b}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}6{{{f{BhCf}}{f{BhFd}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CBf{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BKb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{En}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BKb}}c}{{Af{Ad}}}Ab}{{{f{{l{En}}}}c}{{Af{Ad}}}Ab}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bh}}}{{f{Bhc}}}{}}{{{f{CBj}}}CBj}{{f{f{Bhc}}}b{}}{fb}{{}CBj}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{CBj}}{f{CBj}}}d}{{f{f{c}}}d{}}00{{{f{CBj}}{f{BhGd}}}Gf}{cc{}}{{{f{CBj}}{f{Bhc}}}bABd}{{}F`}{{}c{}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}4````````````{{fh}b}006{{{Ff{BCd}}}{{Af{BCd}}}}{c{{Af{BCd}}}{{Gl{}{{B`{BCd}}}}}}{cBCd{{Gl{}{{B`{BCd}}}}}}{c{{An{BCd}}}{{Gl{}{{B`{BCd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{H`{{AKh{{l{c}}}}{AKh{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{H`{{AKh{{l{c}}}}{AKh{{l{e}}}}{AKh{{l{g}}}}}}}BnBnBn}{{}CBl}{{{f{CBn}}}d}0{c{{Af{Dl}}}{{Gl{}{{B`{{f{Hf}}}}}}}}{c{{Af{{H`{DlF`}}}}}{{Gl{}{{B`{{f{Hf}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gn}}}BnBn}{{CBlCBl}CBl}{{{f{BhCBl}}CBl}b}10{{{f{CBl}}}Dd}021{f{{f{c}}}{}}0000{{{f{Bh}}}{{f{Bhc}}}{}}0000{{{f{CC`}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{{CCb{ec}}}}}{{CCb{ec}}}A@j{A@j{Bd{}{{B`{c}}}}}}{{f{f{Bhc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{H`{{AKh{{l{c}}}}{AKh{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{H`{AdAd}}}}{CCde{}{{CCf{c}}}}{CCde{}{{CCh{c}}}}{CBlCBl}{c{{Af{BCd}}}{{Gl{}{{B`{{f{BCd}}}}}}}}{cBCd{{Gl{}{{B`{{f{BCd}}}}}}}}{{{f{CBl}}CBl}d}{{}CBl}{{}CBn}{{{f{{CCj{c}}}}}{{f{e}}}{}{}}{F`{{f{c}}}{}}0{{{f{{AJl{c}}}}}{{f{e}}}{}{}}111{F`{{f{Bhc}}}{}}{{{f{Bh{AJl{c}}}}}{{f{Bhe}}}{}{}}1111{{CBlCBl}CBl}{F`b}0000{cBDb{{Gl{}{{B`{Dl}}}}}}{c{{Af{Dl}}}{{Gl{}{{B`{{f{Dl}}}}}}}}:{{{f{{CCj{Ad}}}}{f{{CCj{Ad}}}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{f{f{c}}}d{}}00000000{{{f{BhCBl}}c}b{{Gl{}{{B`{CBl}}}}}}``{{{f{CBl}}{f{BhGd}}}Gf}0000{{{f{CBn}}{f{BhGd}}}Gf}{cc{}}00{CBlCBn}11{Dd{{An{CBl}}}}{DdCBl}00{c{{AJl{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AJl{Fn}}}{{Gl{}{{B`{d}}}}}}{cCBl{{Gl{}{{B`{CBl}}}}}}{eCCh{}{{Gl{}{{B`{c}}}}}}23{{{f{Dj}}}{{An{CBl}}}}{c{{AJl{{l{e}}}}}{{Hb{}{{B`{}}}}}n}{c{{AJl{{l{e}}}}}{{Hd{}{{B`{}}}}}n}{c{{AJl{Fn}}}{{Hd{}{{B`{d}}}}}}{{{f{Dl}}{f{Dl}}}{{An{Dl}}}}{{{f{Dl}}{f{Dl}}CBn}{{An{Dl}}}}{{{f{AMl}}{f{AMl}}}AMl}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCj{Ad}}}}{f{Bhc}}}bABd}{{{f{CBl}}{f{Bhc}}}bABd}{{{f{CBn}}{f{Bhc}}}bABd}{{}F`}0000{{{f{BhCBl}}CBl}b}{{CBlCBl}CBl}{{{f{CBl}}CBl}d}{{}c{}}0000{{{AJl{c}}}c{}}{CBlc{}}2{BFb{{Ff{c}}}{}}{{}{{Ff{Bf}}}}{{{f{CBl}}}d}0{{{f{CBl}}}{{ACj{CBl}}}}{{{f{CC`}}}{{`{{Bd{}{{B`{CC`}}}}}}}}{{{f{CBl}}}{{ACl{CBl}}}}{{{f{CC`}}}F`}{MdHf}1{c{{AJl{c}}}{}}{{eF`}{{CCb{ec}}}{}{{Bd{}{{B`{c}}}}}}{{cF`}{{CCb{{CCn{{CCl{c}}}}c}}}A@j}{{{f{Bh{CCb{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CCb{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fl}}{CBlCBl}{{{f{Dj}}}D`}`{{{f{BhCBl}}CBl}b}{{{f{BhCBl}}CBld}b}{{{f{{CCb{ec}}}}}{{H`{F`{An{F`}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CC`}}JjF`}CC`}{{{f{{Df{c}}}}JjF`}{{f{{Df{c}}}}}{}}{{{f{c}}F`}{{Ff{c}}}CC`}0{{{f{CC`}}Jj}{{H`{CC`CC`}}}}{{{f{BCd}}F`d}{{Ff{BCd}}}}{{CBlCBl}CBl}80{fc{}}009{{CCdF`}{{CCb{CCdc}}}{}}{c{{Nn{e}}}{}{}}0000{{{f{Dl}}{f{Dl}}}{{Af{Dl}}}}{{}{{Nn{c}}}{}}0000{fO`}00006{{}c{}}0000{{{f{Dl}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Df{{Ff{c}}}}}}}{{H`{F`{Ff{F`}}}}}{}}{{{f{BCd}}}{{`{{Bd{}{{B`{BCd}}}}}}}}{{{f{{Df{c}}}}}{{AJf{Hh}}}{{Kb{{Df{Ob}}}}InJ`}}{{{f{{Df{e}}}}}{{Ff{c}}}{InJ`Cd}{{Kb{{Df{c}}}}}}{{{f{Ad}}}{{Ff{Ad}}}}","D":"JJb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5572],[5,"ListType",1529],[5,"ChunkedArray",40],[10,"PolarsNumericType",1529],[10,"Num",5573],[10,"ToPrimitive",5574],[5,"Series",4856],[8,"PolarsResult",4024,5575],[10,"NumOpsDispatchInner",5296,5576],[6,"GroupsProxy",3619,5577],[5,"BooleanType",1529],[6,"Option",5578],[17,"Item"],[8,"ArrayBox",5272],[10,"Iterator",5579],[5,"PlSmallStr",4024,5580],[0,"mut"],[17,"IsNested"],[5,"FalseT",1529],[10,"PolarsDataType",1529],[17,"Output"],[10,"Fn",5581],[10,"Copy",5582],[5,"AmortSeries",5272],[10,"FnMut",5581],[5,"Float32Type",1529],[5,"Float64Type",1529],[8,"StringChunked",1529],[5,"String",5583],[5,"BinaryType",1529],[1,"u8"],[1,"slice"],[5,"StringType",1529],[1,"str"],[6,"DataType",1529,5584],[8,"ListChunked",1529],[5,"View",5585],[5,"SortOptions",1444],[8,"IdxCa",1529,5586],[5,"SortMultipleOptions",1444],[8,"BinaryChunked",1529],[10,"PolarsIntegerType",1529],[6,"CastOptions",731],[10,"NumOpsDispatchCheckedInner",5321,5587],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4024,5588],[5,"Vec",5589],[5,"CompactString",5590],[5,"MetadataProperties",819],[10,"DoubleEndedIterator",5591],[8,"BooleanChunked",1529],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5592],[8,"Result",5592],[10,"Array",5588],[17,"Array"],[10,"IntoIterator",5593],[5,"Bitmap",5594],[1,"tuple"],[10,"IntoParallelIterator",5595],[10,"TrustedLen",5596],[6,"AnyValue",1529,5597],[8,"IdxSize",4024,5598],[5,"MetadataFlags",819],[5,"ObjectType",1529],[10,"PolarsObjectSafe",1104],[10,"PolarsObject",1104],[1,"f32"],[1,"u64"],[5,"Metadata",819],[5,"RwLockWriteGuard",5599],[5,"Int128Type",1529],[8,"DecimalChunked",1529,5600],[10,"Send",5582],[10,"Sync",5582],[10,"ExactSizeIterator",5601],[10,"PolarsFloatType",1529],[6,"IsSorted",4856,5602],[10,"PolarsIterator",780],[1,"i64"],[5,"Iter",5603],[1,"fn"],[5,"Map",5604],[10,"AsRef",5605],[6,"ChunkedArrayLayout",40],[10,"NumCast",5574],[5,"Scalar",4744],[1,"f64"],[6,"MetadataReadGuard",819,5606],[5,"IMMetadata",819,5607],[5,"Arc",4024,5608],[10,"MetadataTrait",819,5609],[5,"RwLockReadGuard",5599],[5,"Int64Type",1529],[5,"Int32Type",1529],[1,"i32"],[5,"Range",5610],[5,"UInt64Type",1529],[1,"u32"],[5,"UInt32Type",1529],[1,"i128"],[5,"Field",1529,5611],[10,"ParallelIterator",5595],[10,"IndexedParallelIterator",5595],[6,"QuantileInterpolOptions",4024,5612],[5,"RollingOptionsFixedWindow",4024,5613],[10,"Sized",5582],[17,"IsStruct"],[8,"PlRandomState",1529,5614],[5,"BytesHash",5615],[8,"Array2",5616],[8,"ArrayView1",5616],[6,"Either",5617],[6,"Result",5618],[5,"TypeId",5619],[5,"NullableIdxSize",4024,5598],[10,"FnOnce",5581],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",441,5620],[10,"ChunkedBuilder",469],[5,"BinViewChunkedBuilder",469,5621],[10,"ViewType",5622],[5,"BooleanChunkedBuilder",469,5623],[5,"NullChunkedBuilder",469,5624],[5,"PrimitiveChunkedBuilder",469,5625],[10,"Clone",5626],[8,"StringChunkedBuilder",469,5621],[8,"BinaryChunkedBuilder",469,5621],[10,"NewChunkedArray",469],[5,"AnonymousListBuilder",577,5627],[5,"AnonymousOwnedListBuilder",577,5627],[5,"ListBooleanChunkedBuilder",577,5628],[5,"ListPrimitiveChunkedBuilder",577,5629],[10,"ListBuilderTrait",577],[5,"ListStringChunkedBuilder",577,5630],[5,"ListBinaryChunkedBuilder",577,5630],[5,"ListNullChunkedBuilder",577,5631],[5,"Box",5632],[10,"Hasher",5633],[10,"ChunkedCollectInferIterExt",760],[10,"ChunkedCollectIterExt",760],[10,"Canonical",774],[10,"ChunkedCollectParIterExt",776],[10,"FromParIterWithDtype",776],[5,"BooleanArray",5634],[5,"BoolIterNoNull",780],[5,"SomeIterator",780],[5,"MetadataEnv",819,5635],[10,"MetadataCollectable",819,5636],[5,"Iter",5637],[5,"IterNames",5637],[5,"File",5638],[5,"Mutex",5639],[6,"MetadataMerge",819],[5,"RwLock",5599],[5,"ObjectArray",1104],[6,"ArrowDataType",1529,5640],[10,"Any",5619],[10,"Debug",5592],[5,"BitmapIter",5641],[6,"ZipValidity",5642],[8,"ObjectValueIter",1104],[5,"ObjectChunkedBuilder",1181],[8,"ObjectChunked",1529],[10,"AnonymousObjectBuilder",1204],[5,"ObjectRegistry",1204],[8,"ObjectConverter",1204],[8,"BuilderConstructor",1204],[17,"FuncRet"],[10,"ChunkApply",1232],[10,"ChunkApplyKernel",1232],[10,"ChunkSort",1232],[10,"ChunkUnique",1232],[10,"ChunkCast",1232],[6,"FillNullStrategy",1232],[10,"ChunkCompare",1232],[10,"ChunkExplode",1232],[5,"OffsetsBuffer",5643],[10,"ChunkFillNullValue",1232],[10,"ChunkFilter",1232],[10,"ChunkFull",1232],[10,"ChunkFullNull",1232],[10,"ChunkAnyValue",1232],[10,"IsFirstDistinct",1232],[10,"IsLastDistinct",1232],[10,"ChunkAgg",1232],[10,"ChunkQuantile",1232],[10,"ChunkExpandAtIndex",1232],[10,"ChunkReverse",1232],[10,"ChunkRollApply",1232],[10,"ChunkSet",1232],[10,"ChunkShift",1232],[10,"ChunkShiftFill",1232],[10,"ChunkVar",1232],[10,"ChunkTake",1232],[10,"ChunkTakeUnchecked",1232],[10,"ChunkBytes",1232],[10,"ChunkZip",1232],[10,"BinaryFnMut",1357],[10,"StaticArray",1529,5644],[10,"TernaryFnMut",1357],[10,"Error",5645],[10,"UnaryFnMut",1357],[5,"PrimitiveArray",5646],[6,"SearchSortedSide",1398],[10,"SlicedArray",4024,5647],[5,"NoNull",5356],[5,"RowsEncoded",5648],[5,"BinaryArray",5649],[8,"BinaryOffsetChunked",1529],[5,"NaiveDateTime",5650],[6,"PolarsError",4024,5575],[6,"Cow",5651],[8,"Float32Chunked",1529],[8,"Float64Chunked",1529],[10,"ArrayFromIter",1529,5652],[10,"ArrayFromIterDtype",1529,5652],[10,"AsRefDataType",1529,5584],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5653],[10,"From",5605],[5,"CategoricalChunked",2978,5654],[10,"CategoricalMergeOperation",2978,5655],[10,"LogicalType",1529,5656],[5,"Logical",1529,5656],[5,"OwnedObject",1529,5597],[6,"UnknownKind",1529,5584],[5,"CompatLevel",1529,5584],[6,"TimeUnit",1529,5657],[5,"UInt8Type",1529],[5,"UInt16Type",1529],[5,"Int8Type",1529],[5,"Int16Type",1529],[5,"DateType",1529],[5,"TimeType",1529],[5,"BinaryOffsetType",1529],[5,"DecimalType",1529],[5,"DatetimeType",1529],[5,"DurationType",1529],[5,"CategoricalType",1529],[6,"ArrowTimeUnit",1529],[10,"ArrayCollectIterExt",4024,5652],[8,"Utf8ViewArray",5622],[8,"UInt32Chunked",1529],[5,"Error",5592],[10,"Into",5605],[10,"NumericNative",1529],[5,"ArrowField",4024],[6,"IntegerType",5658],[6,"PrimitiveType",5659],[10,"Borrow",5660],[10,"NoOption",5661],[10,"GetAnyValue",1529,5597],[8,"Int128Chunked",1529],[10,"IntoScalar",1529,5662],[6,"Ordering",5663],[6,"PhysicalType",5658],[6,"ToCompactStringError",5590],[8,"UInt8Chunked",1529],[8,"UInt16Chunked",1529],[8,"UInt64Chunked",1529],[8,"Int8Chunked",1529],[8,"Int16Chunked",1529],[8,"Int32Chunked",1529],[8,"Int64Chunked",1529],[8,"PlIdHashMap",1529,5586],[5,"CategoricalChunkedBuilder",2978,5664],[5,"GlobalRevMapMerger",2978,5655],[6,"RevMapping",3119,5665],[6,"CategoricalOrdering",3119,5665],[5,"CatIter",2978,5654],[1,"u128"],[5,"DataFrame",3314],[5,"StringCacheHolder",3173,5666],[5,"ErrString",3202,5575],[6,"PolarsWarning",3202,5667],[10,"Display",5592],[6,"FloatFmt",3283],[1,"char"],[5,"Schema",4771],[10,"IntoSeries",4856,5668],[6,"NullStrategy",3314],[6,"UniqueKeepStrategy",3314],[8,"PlHashSet",1529,5614],[5,"ArrowSchema",4024,5669],[5,"Row",3877],[5,"GroupBy",3619],[5,"RangeToInclusive",5610],[5,"RangeFull",5610],[5,"RangeTo",5610],[5,"RangeFrom",5610],[5,"RangeInclusive",5610],[5,"RecordBatchIter",3314],[5,"PhysRecordBatchIter",3314],[10,"RangeBounds",5610],[10,"IntoVec",5356],[8,"SchemaRef",4771],[6,"IndexOrder",4024,5670],[5,"StructArray",5671],[8,"RecordBatch",5672],[5,"UnpivotArgsIR",3590],[5,"GroupsIdx",3619,5577],[8,"IdxVec",5673],[6,"GroupByMethod",3619],[5,"SlicedGroups",3619,5577],[5,"GroupsProxyParIter",3619,5577],[10,"UnindexedConsumer",5674],[6,"GroupsIndicator",3619,5577],[8,"IdxItem",3619,5577],[10,"IntoGroupsProxy",3619,5675],[5,"Copied",5676],[5,"Zip",5677],[5,"GroupsProxyIter",3619,5577],[8,"GroupsSlice",3619,5577],[1,"array"],[8,"DynArgs",4024,5678],[10,"IsFloat",5679],[10,"NativeType",5680],[10,"AggList",3861,5681],[10,"TakeExtremum",3861],[10,"PhysicalAggExpr",3874],[6,"AnyValueBuffer",3877,5682],[6,"AnyValueBufferTrusted",3877,5682],[5,"IdHasher",3976,5683],[5,"IdxHash",3976,5683],[5,"HashMap",5684],[10,"BuildHasher",5633],[10,"VecHash",3976,5685],[10,"Allocator",5686],[5,"BorrowedFd",5687],[10,"AsFd",5687],[10,"AsRawFd",5688],[5,"OsStr",5689],[5,"Path",5690],[20,"MaybeUninit",5691],[10,"NumOpsDispatchChecked",4024,5587],[5,"ChunkId",4024,5598],[5,"RollingVarParams",4024,5678],[5,"RollingQuantileParams",4024,5678],[6,"NonExistent",4024,5692],[10,"Ord",5663],[10,"Default",5693],[5,"CStr",5694],[5,"Weak",5608],[10,"Scalar",5695],[10,"PartialEq",5663],[5,"Error",5696],[5,"TryReserveError",5697],[5,"Utf8Error",5698],[6,"Error",5699],[5,"OsString",5689],[1,"never"],[5,"PathBuf",5690],[5,"CString",5700],[10,"ToOwned",5651],[10,"FromData",4666,5701],[5,"Buffer",5702],[10,"FromDataUtf8",4666,5701],[10,"FromDataBinary",4666,5701],[5,"ListArray",5703],[6,"Ambiguous",4024,5692],[10,"NamedFromOwned",4024,5704],[10,"PartialOrd",5663],[10,"Hash",5633],[10,"SeriesTrait",4856,5602],[10,"CloneToUninit",5626],[10,"ChunkAggSeries",4024,5705],[10,"QuantileAggSeries",4024,5706],[10,"IndexToUsize",4024,5707],[10,"NamedFrom",4024,5704],[5,"Pin",5708],[5,"Request",5645],[5,"BorrowedCursor",5709],[5,"IoSliceMut",5710],[6,"SeekFrom",5710],[10,"VarAggSeries",4024,5711],[5,"AllocError",5686],[5,"BTreeMap",5712],[5,"Arguments",5592],[5,"IoSlice",5710],[5,"AnonymousBuilder",4672,5713],[5,"Offsets",5643],[5,"MutableNullArray",4695,5714],[5,"MutableBitmap",5715],[5,"Utf8Array",5716],[10,"SchemaNamesAndDtypes",4771],[8,"ArrowSchemaRef",5669],[10,"IndexOfSchema",4771],[17,"DataType"],[8,"Metadata",5640],[5,"SeriesIter",4856,5717],[8,"SeriesPhysIter",4856,5717],[5,"Rc",5718],[10,"LhsNumOps",5296,5576],[10,"NumOpsDispatch",5296,5576],[6,"NullBehavior",5329],[5,"SuperTypeFlags",5356,5719],[5,"SuperTypeOptions",5356,5719],[10,"Container",5356],[5,"TrustMyLength",5356,5596],[10,"CustomIterTools",5356,5720],[10,"FromIteratorReversed",5721],[10,"FromTrustedLenIterator",5356,5720],[5,"Wrap",5356],[5,"Repeat",5722],[5,"Take",5723],[8,"FillNullLimit",1232],[10,"InitHashMaps",1529],[10,"InitHashMaps2",1529],[5,"TrueT",1529],[15,"IO",3269],[15,"Context",3269],[15,"Count",3858],[15,"Slice",3859],[10,"ListFromIter",4024],[10,"Utf8FromIter",4739],[10,"BinaryFromIter",4739],[6,"BitRepr",4856]],"r":[[0,5683],[4,5666],[13,5666],[16,5666],[32,5666],[441,5620],[469,5621],[470,5621],[471,5623],[474,5624],[475,5625],[476,5621],[577,5627],[578,5627],[579,5630],[580,5628],[582,5631],[583,5629],[584,5630],[824,5607],[830,5636],[831,5635],[835,5606],[836,5609],[1150,5724],[1428,5647],[1444,5647],[1530,5597],[1532,5652],[1533,5652],[1534,5652],[1535,5640],[1537,5584],[1553,5654],[1556,5654],[1557,5664],[1558,5655],[1559,5665],[1561,5584],[1562,5584],[1563,5584],[1564,5584],[1575,5600],[1585,5611],[1586,5611],[1601,5597],[1603,5655],[1607,5586],[1608,5707],[1609,5586],[1610,5586],[1611,5614],[1612,5586],[1637,5662],[1651,5656],[1652,5656],[1670,5597],[1674,5614],[1675,5614],[1676,5586],[1677,5614],[1678,5614],[1679,5614],[1680,5580],[1686,5665],[1688,5644],[1700,5657],[1701,5584],[1728,5584],[1926,5655],[1943,5656],[2049,5584],[2570,5655],[2571,5655],[2583,5584],[2669,5654],[2707,5654],[2978,5654],[2979,5654],[2980,5664],[2981,5655],[2982,5665],[2984,5655],[2988,5665],[3005,5655],[3071,5655],[3072,5655],[3090,5654],[3094,5654],[3119,5665],[3124,5665],[3173,5666],[3179,5666],[3182,5666],[3190,5666],[3192,5665],[3197,5665],[3198,5666],[3199,5666],[3200,5666],[3201,5666],[3208,5575],[3215,5575],[3216,5575],[3217,5667],[3231,5575],[3239,5575],[3246,5667],[3251,5575],[3253,5575],[3254,5575],[3255,5575],[3256,5575],[3257,5667],[3258,5575],[3273,5725],[3274,5725],[3275,5725],[3276,3976],[3619,5577],[3625,5577],[3626,5577],[3627,5577],[3628,5577],[3629,5577],[3630,5577],[3633,5577],[3635,5675],[3647,5577],[3861,5681],[3879,5682],[3880,5682],[3975,5726],[3976,5683],[3977,5683],[3978,5683],[3979,5685],[3982,5685],[3983,5685],[4024,5692],[4025,5608],[4026,5620],[4027,5652],[4028,5588],[4030,5669],[4031,5621],[4032,5623],[4034,5654],[4035,5654],[4036,5664],[4037,5655],[4038,5665],[4039,5705],[4040,5598],[4041,40],[4042,469],[4043,760],[4044,760],[4048,3314],[4050,5678],[4056,5701],[4057,5701],[4058,5701],[4060,5655],[4063,5707],[4064,5598],[4065,5670],[4066,5707],[4067,5668],[4068,5356],[4070,5727],[4071,5727],[4072,5727],[4075,5576],[4077,5630],[4078,5628],[4079,577],[4080,5728],[4081,5629],[4082,5630],[4086,5704],[4087,5704],[4089,469],[4091,5692],[4095,5598],[4096,5598],[4097,5576],[4098,5587],[4102,5580],[4103,5575],[4104,780],[4105,1104],[4106,5575],[4107,5625],[4108,5706],[4109,5612],[4112,5665],[4113,5613],[4114,5678],[4115,5678],[4118,4744],[4121,4856],[4122,5602],[4124,5647],[4126,5666],[4128,5621],[4130,3314],[4131,3590],[4132,5711],[4133,5685],[4188,5655],[4239,5728],[4242,0],[4256,5728],[4288,0],[4450,5707],[4496,5728],[4498,5655],[4499,5655],[4524,5728],[4531,5575],[4532,5575],[4533,5575],[4534,5575],[4546,5654],[4548,5728],[4554,5654],[4636,5728],[4666,5701],[4667,5701],[4668,5701],[4672,5713],[4695,5714],[4726,5665],[4731,5665],[4732,5647],[4735,5666],[4736,5666],[4737,5666],[4738,5666],[4739,5729],[4740,5729],[4858,5602],[4859,1232],[4862,5668],[4863,5602],[4864,5602],[4869,5717],[4870,5717],[4871,5602],[5296,5576],[5297,5576],[5298,5576],[5304,5576],[5321,5587],[5322,5587],[5359,5720],[5360,5720],[5361,5720],[5364,5719],[5365,5719],[5366,5596],[5381,5730],[5382,5730],[5442,5731],[5443,5719],[5486,5719],[5487,5719],[5489,5732],[5517,5719],[5549,5719],[5566,5732]],"b":[[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CBinaryType%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkedArray%3CT%3E"],[101,"impl-Container-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-Debug-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-Container-for-ChunkedArray%3CT%3E"],[228,"impl-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkedArray%3CBooleanType%3E"],[238,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkedArray%3CT%3E"],[257,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[258,"impl-Mul-for-ChunkedArray%3CT%3E"],[259,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[260,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[265,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[266,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[267,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[270,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[271,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[272,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[273,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[278,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[280,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[287,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkedArray%3CListType%3E"],[304,"impl-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkedArray%3CListType%3E"],[306,"impl-ChunkedArray%3CStringType%3E"],[317,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[318,"impl-Rem-for-ChunkedArray%3CT%3E"],[319,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[320,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[339,"impl-ChunkedArray%3CT%3E"],[340,"impl-Container-for-ChunkedArray%3CT%3E"],[343,"impl-Container-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkedArray%3CT%3E"],[347,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[348,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[350,"impl-Sub-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CBooleanType%3E"],[353,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkedArray%3CListType%3E"],[366,"impl-ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[525,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[526,"impl-BinViewChunkedBuilder%3Cstr%3E"],[857,"impl-MetadataProperties"],[858,"impl-Flags-for-MetadataProperties"],[859,"impl-Flags-for-MetadataFlags"],[860,"impl-MetadataFlags"],[923,"impl-Metadata%3CT%3E"],[924,"impl-MetadataTrait-for-Metadata%3CT%3E"],[949,"impl-LowerHex-for-MetadataProperties"],[950,"impl-Debug-for-MetadataProperties"],[951,"impl-Octal-for-MetadataProperties"],[952,"impl-Binary-for-MetadataProperties"],[953,"impl-UpperHex-for-MetadataProperties"],[954,"impl-UpperHex-for-MetadataFlags"],[955,"impl-Octal-for-MetadataFlags"],[956,"impl-Binary-for-MetadataFlags"],[957,"impl-Debug-for-MetadataFlags"],[958,"impl-LowerHex-for-MetadataFlags"],[968,"impl-Flags-for-MetadataProperties"],[969,"impl-MetadataProperties"],[970,"impl-Flags-for-MetadataFlags"],[971,"impl-MetadataFlags"],[982,"impl-MetadataTrait-for-Metadata%3CT%3E"],[983,"impl-Metadata%3CT%3E"],[1026,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1027,"impl-Metadata%3CT%3E"],[1031,"impl-Metadata%3CT%3E"],[1032,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1110,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1111,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1145,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1146,"impl-ObjectArray%3CT%3E"],[1161,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1162,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1172,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1173,"impl-ObjectArray%3CT%3E"],[1175,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1176,"impl-ObjectArray%3CT%3E"],[1178,"impl-Array-for-ObjectArray%3CT%3E"],[1179,"impl-ObjectArray%3CT%3E"],[1182,"impl-ObjectChunkedBuilder%3CT%3E"],[1183,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1185,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1186,"impl-ObjectChunkedBuilder%3CT%3E"],[1767,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1768,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1769,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1770,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1771,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1772,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1773,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1774,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1849,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1850,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1851,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1852,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1853,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1854,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2176,"impl-PartialEq-for-DataType"],[2177,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2186,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2187,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2188,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2189,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2192,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2233,"impl-Debug-for-AnyValue%3C\'a%3E"],[2234,"impl-Display-for-AnyValue%3C\'_%3E"],[2236,"impl-Display-for-DataType"],[2237,"impl-Debug-for-DataType"],[2240,"impl-Debug-for-TimeUnit"],[2241,"impl-Display-for-TimeUnit"],[2252,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2253,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2254,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2255,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2256,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2259,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2260,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2262,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2264,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2265,"impl-From%3C%26Field%3E-for-Field"],[2289,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2291,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2294,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2295,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2296,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2298,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2299,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2300,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2301,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2307,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2308,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2310,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2311,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2312,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2313,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2314,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2315,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2322,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2323,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2324,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2325,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2326,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2327,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2416,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2417,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2418,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2419,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2422,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2423,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2424,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2425,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2560,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2561,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2562,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2563,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2566,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2567,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2568,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2569,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2604,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2605,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2606,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2607,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2608,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2609,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2610,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2611,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2612,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2613,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2626,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2627,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2630,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2631,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2632,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2633,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2636,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2637,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2638,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2639,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2719,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2721,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2722,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3025,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3026,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3027,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3028,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3029,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3030,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3047,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3048,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3049,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3050,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3065,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3066,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3067,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3068,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3069,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3070,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3081,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3082,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3083,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3084,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3085,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3086,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3241,"impl-Display-for-ErrString"],[3242,"impl-Debug-for-ErrString"],[3336,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3337,"impl-Add%3C%26Series%3E-for-DataFrame"],[3338,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3379,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3380,"impl-Div%3C%26Series%3E-for-DataFrame"],[3381,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3413,"impl-Debug-for-DataFrame"],[3414,"impl-Display-for-DataFrame"],[3446,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3447,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3448,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3449,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3450,"impl-Index%3Cusize%3E-for-DataFrame"],[3451,"impl-Index%3C%26str%3E-for-DataFrame"],[3452,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3453,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3471,"impl-Container-for-DataFrame"],[3472,"impl-DataFrame"],[3478,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3479,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3480,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3481,"impl-Container-for-DataFrame"],[3482,"impl-DataFrame"],[3498,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3499,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3500,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3526,"impl-Container-for-DataFrame"],[3527,"impl-DataFrame"],[3531,"impl-DataFrame"],[3532,"impl-Container-for-DataFrame"],[3535,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3536,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3537,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3557,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3559,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3735,"impl-Debug-for-GroupByMethod"],[3736,"impl-Display-for-GroupByMethod"],[3742,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3743,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3745,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3778,"impl-IntoIterator-for-GroupsIdx"],[3779,"impl-IntoIterator-for-%26GroupsIdx"],[3781,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3782,"impl-IntoParallelIterator-for-GroupsIdx"],[4150,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4151,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4152,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4153,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4156,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4157,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4247,"impl-Default-for-Arc%3Cstr%3E"],[4248,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4249,"impl-Default-for-Arc%3CT%3E"],[4250,"impl-Default-for-Arc%3CCStr%3E"],[4309,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4310,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4311,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4347,"impl-Debug-for-PolarsError"],[4348,"impl-Display-for-PolarsError"],[4349,"impl-Display-for-PlSmallStr"],[4350,"impl-Debug-for-PlSmallStr"],[4353,"impl-Display-for-Arc%3CT,+A%3E"],[4354,"impl-Debug-for-Arc%3CT,+A%3E"],[4355,"impl-Pointer-for-Arc%3CT,+A%3E"],[4365,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4366,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4367,"impl-From%3CError%3E-for-PolarsError"],[4368,"impl-From%3CError%3E-for-PolarsError"],[4371,"impl-From%3C%26str%3E-for-PlSmallStr"],[4372,"impl-From%3CString%3E-for-PlSmallStr"],[4373,"impl-From%3C%26String%3E-for-PlSmallStr"],[4374,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4378,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4379,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4380,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4381,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4382,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4385,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4386,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4387,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4388,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4389,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4390,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4391,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4392,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4393,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4394,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4395,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4409,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4410,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4411,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4412,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4413,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4414,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4415,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4416,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4794,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4795,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4796,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4797,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4798,"impl-From%3CArrowSchema%3E-for-Schema"],[4799,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4877,"impl-Add%3CT%3E-for-%26Series"],[4878,"impl-Add%3CT%3E-for-Series"],[4879,"impl-Add-for-Series"],[4880,"impl-Add-for-%26Series"],[4950,"impl-Div-for-Series"],[4951,"impl-Div-for-%26Series"],[4952,"impl-Div%3CT%3E-for-%26Series"],[4953,"impl-Div%3CT%3E-for-Series"],[4965,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4966,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4967,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4968,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4969,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4970,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4987,"impl-Display-for-Series"],[4988,"impl-Debug-for-Series"],[5000,"impl-FromIterator%3Ci32%3E-for-Series"],[5001,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5002,"impl-FromIterator%3CString%3E-for-Series"],[5003,"impl-FromIterator%3Cbool%3E-for-Series"],[5004,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5005,"impl-FromIterator%3C%26f64%3E-for-Series"],[5006,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5007,"impl-FromIterator%3Cf64%3E-for-Series"],[5008,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5009,"impl-FromIterator%3C%26f32%3E-for-Series"],[5010,"impl-FromIterator%3Cf32%3E-for-Series"],[5011,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5012,"impl-FromIterator%3C%26i64%3E-for-Series"],[5013,"impl-FromIterator%3Ci64%3E-for-Series"],[5014,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5015,"impl-FromIterator%3C%26i32%3E-for-Series"],[5016,"impl-FromIterator%3C%26bool%3E-for-Series"],[5017,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5018,"impl-FromIterator%3C%26str%3E-for-Series"],[5019,"impl-FromIterator%3Cu32%3E-for-Series"],[5020,"impl-FromIterator%3C%26u32%3E-for-Series"],[5021,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5022,"impl-FromIterator%3Cu64%3E-for-Series"],[5023,"impl-FromIterator%3C%26u64%3E-for-Series"],[5024,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5025,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5026,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5027,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5028,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5029,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5030,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5031,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5046,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5047,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5048,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5049,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5050,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5051,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5093,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5094,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5095,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5096,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5097,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5098,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5112,"impl-Mul%3CT%3E-for-%26Series"],[5113,"impl-Mul%3CT%3E-for-Series"],[5114,"impl-Mul-for-%26Series"],[5115,"impl-Mul-for-Series"],[5122,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5123,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5124,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5125,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5126,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5127,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5128,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5129,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5130,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5131,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5132,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5133,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5134,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5135,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5136,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5137,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5138,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5139,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5140,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5141,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5142,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5143,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5144,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5145,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5146,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5147,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5148,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5149,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5150,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5151,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5152,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5153,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5154,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5155,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5156,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5157,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5158,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5163,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5164,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5165,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5166,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5167,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5168,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5177,"impl-Rem-for-%26Series"],[5178,"impl-Rem%3CT%3E-for-%26Series"],[5179,"impl-Rem%3CT%3E-for-Series"],[5211,"impl-Sub-for-Series"],[5212,"impl-Sub-for-%26Series"],[5213,"impl-Sub%3CT%3E-for-Series"],[5214,"impl-Sub%3CT%3E-for-%26Series"],[5235,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5236,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5237,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5239,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5389,"impl-SuperTypeFlags"],[5390,"impl-Flags-for-SuperTypeFlags"],[5460,"impl-Binary-for-SuperTypeFlags"],[5461,"impl-Octal-for-SuperTypeFlags"],[5462,"impl-LowerHex-for-SuperTypeFlags"],[5463,"impl-UpperHex-for-SuperTypeFlags"],[5464,"impl-Debug-for-SuperTypeFlags"],[5473,"impl-SuperTypeFlags"],[5474,"impl-Flags-for-SuperTypeFlags"],[5476,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5477,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5480,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5481,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5484,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5485,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAEgOkw7PDtIO0w7UDtUO1g7bDt4O4w7kDgoP","e":"OzAAAAEAAHMQHwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADAA/AAAAQgABAEUABQBNAAEAUAAAAFIAAABUAAsAYgAEAGoAAwBvAAIAdgANAIUAAwCKAAEAjQAFAJUAAQCZAAUAoQADAKcAAwCsAAUAswABALgABQDAAAIAxwAEAM0AAwDUAAIA2QACAN0ABwDqAAwA/AADAAIBBgAKARsAKQEDAC4BAAAwAQQANgEBADwBAAA+AQQARAEAAEkBBQBRAQEAVQEDAFoBCQBqAQEAcAEAAHQBCAB+AQgAiAEAAIoBBQCSAQAAlAEjALkBKQDnAQIA7QEnABsCBQAlAgAAJwImAFACTACkAgwAuAIkAOACDgDwAgEA8wIZABADCQAcAwEAIAMBACMDFQA6AwkARQMKAFsDAQBiAx4AhQMSAJoDAACcAwkAqAMDAK4DAQCyAw0AyQMAAMsDAADTAwcA3AMHAPEDAQD1AwAA+AMDAAAEBQAHBAQAEwQLACYEBAAtBA0APQQGAEcECABRBAEAVQQWAG0EBwB2BAAAeAQAAHoEAAB8BAEAgQQQAJMEAACVBAAAmAQDAJ0EAQCgBAIApAQHAK0EAACvBAUAtwQBALoEAAC8BAEAvwQDAMQEAwDJBAIAzQQDANMEAADWBAAA3gQAAOMEAADmBAEA6wQBAO4EAADxBAAA+wQAAAQFAgAKBQYAEwUCABgFAQAbBQAAHQUBACMFAQAmBQEALQUBADMFAAA2BQAAOQUAADsFAAA9BQAAPwUAAEQFBABLBQEATgUHAFcFAQBaBQAAXgUAAGAFAwBlBQEAaAUFAHQFFgCMBQEAkAUEAJYFAwCdBQcAqAURALwFCwDJBQAAywUEANwFCQDyBQ0AAgYCAAYGBQAOBgAAEAYNACEGAAAjBgAAKAYBACsGAAAtBgIAMQYAADMGAAA2BgAAOQYAADsGAQA+BgAAQAYCAEQGDABSBgAAVAYBAFcGAABZBgEAXAYAAF4GAQBhBgAAYwYBAGYGAwBtBgAAcQYBAHUGAAB4BgAAegYAAHwGAwCBBgAAhAYIAI4GAgCTBgQAmQYBAJ0GAACfBgAApAYCAKgGAQCrBgAArQYBALAGAACyBgEAtQYAALcGAQC6BgAAvAYBAL8GAADBBgAAxAY7AAYHBAANBwkAGAcEAB4HAwAjBwQAKQcAACsHXwCMB20A+wcHAAQIdgB8CAAAfghHAM0IBADUCAEA1wgAANkIAQDdCAAA8ggAAPQIAAD2CBcAEgkjADgJBgBBCR4AZglAAKkJAADNCQoA2gkAANwJAgDgCQEA4wkAAOgJBgDwCQAA8wkCAPgJAwD9CQAA/wkdAB4KCQApCg0AOAoeAFgKBwBhChoAfQoVAJQKDACmCgAAqAoAAK0KHQDNCgQA0wpRACYLLQBVC0wAowsEAKkLAQCsCwIAsAsEALYLJADiCwIA5gsJAPQLAwD5CxcAEwwBABYMBAAcDA0AKwwFADIMAAA0DBcATQwBAFMMAgBYDAEAXAwJAGcMBABtDAEAcgwAAHQMAgB4DAEAewwAAH0MAQCDDAQAiQwEAI8MEAChDAoArgwDALQMBQC7DCUA4gwFAOkMCQD2DAAA+QwKAAUNBgARDRQAKA0SADwNAABFDQEASQ0CAE0NAABPDQAAVA0DAGUNAABsDQAAbw0BAHcNDACKDQEAkA0AAJMNAACXDQMAoQ0BAKsNAgCzDQAAtg0AALwNAADFDQIAyQ0AAM0NBQDaDQQA4g0GAOsNCgD3DQAA/A0EAAgODgAYDgIAHA4KACgOAQArDgMAMA4DADUOCQBADgcASQ4BAEwOHABqDigAlA4GAJ8OAQCiDgEApw4CAKwOAACxDgcAwQ4NANAOAQDXDgMA3A4BAOAOAgDlDgAA5w4gAAsPDAAaDwUAIQ8HACoPFgBDDw4AUw8OAGMPAQBnDwMAbg8GAHgPDgCJDwEAjA8RAKAPBACoDwUAsA8JALsPAgDADwcAyQ8NANgPAwDdDxYA9Q8HAP4PBQAFEAEACBAUACAQEgA0EAAANhAGAD8QHwBhEAMAZhAgAIgQBwCTEAEAlxAAAJwQJQDFEAQAyxAMANkQHgD6EBcAFBEDABkRAAAfEQAAIREAADIRAAA3EQAAOhEHAEgRAABLEQMAUxEEAFkRBgBiERIAhhEEAIwRAgCQEQEAkxEBAK0RAwC0EQQAuxEAAL4RBwDIEQAAyhEBAM8RMQAJEgMADhINAB0SAAAfEg0AMRINAEESBgBJEgAASxIdAGoSAABsEgsAeRIAAHsSAQCEEhAAlhIAAJgSDQCoEgcAsRIPAMISAADJEgAAyxIFANISAQDWEgEA6xIAAO0SAADvEgAA8xIDAPkSBQAAEwQABhMFAA4TBAAYEwAAHhMCACYTBQAtEwkAOhMDAD8TAABDEwIARxMDAE0TEgBkEwMAaRMBAG4TAgB7EwMAgxMAAIYTAQCJEyAArRMAAK8TAQC3EwEAuhMBAL4TAADEEwEAxxMDAM8TAwDbEwMA4BMAAOITAADnEwIA6xMAAPETAAD5EwMA/xMAAAMUBwAMFBsAKhQBAC0UAQAwFAEANBQBADoUAgA/FAAAQRQAAEUUAgBMFAEATxQAAFEUAQBUFAAAWhQAAFwUAwBsFAEAbxQPAIAUBQCNFAAAkhQDAJcUAACaFAsApxQAAKkUAACrFAQAsRQaAM8UAgDUFA8A5RQBAOgUBADvFAMA9RQIAAAVAAAEFQEACBUBAA8VAAASFRMAJxUCAC4VDgA+FQQARhULAFMVBwBeFQAAYxUAAGUVAQBoFQIAbBUDAHEVCQCDFQQAixUAAI0VAwCTFQEAlhUBAJoVAgCfFQAApBUCAKkVBACvFQkAuhUEAMAVBAA="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFNNNNNNNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHEHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCSSSSSPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_map","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","ensure_not_mapped","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","","deref_mut","","drop","","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","into_thrift","key_value_metadata","","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","check_schema","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","serialize","","set_low_memory","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","PartitionedColumnChunkMD","borrow","borrow_mut","deref","deref_mut","drop","from","get_partitions","init","into","new","read_this_row_group","set_partitions","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","is_compressed","materialize_projection","maybe_decompress_bytes","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[676,"polars_io::csv::read::buffer"],[750,"polars_io::csv::read::buffer::Buffer"],[753,"polars_io::csv::read::schema_inference"],[780,"polars_io::csv::write"],[925,"polars_io::file_cache"],[946,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1307,"polars_io::ndjson"],[1309,"polars_io::ndjson::core"],[1413,"polars_io::parquet"],[1416,"polars_io::parquet::metadata"],[1469,"polars_io::parquet::read"],[1611,"polars_io::parquet::read::_internal"],[1629,"polars_io::parquet::write"],[1853,"polars_io::partition"],[1854,"polars_io::path_utils"],[1861,"polars_io::pl_async"],[1883,"polars_io::predicates"],[1951,"polars_io::prelude"],[1962,"polars_io::utils"],[1975,"polars_io::utils::byte_source"],[2055,"polars_io::utils::compression"],[2057,"polars_io::utils::compression::magic"],[2062,"polars_io::utils::slice"],[2081,"dyn_clone::sealed"],[2082,"polars_io::options"],[2083,"core::result"],[2084,"serde::de"],[2085,"polars_io::shared"],[2086,"polars_core::frame"],[2087,"polars_error"],[2088,"core::fmt"],[2089,"core::hash"],[2090,"std::io"],[2091,"polars_arrow::record_batch"],[2092,"core::option"],[2093,"serde::ser"],[2094,"core::any"],[2095,"polars_io::avro::read"],[2096,"polars_arrow::datatypes::schema"],[2097,"polars_io::avro::write"],[2098,"polars_core::schema"],[2099,"alloc::string"],[2100,"alloc::vec"],[2101,"polars_io::cloud::glob"],[2102,"object_store"],[2103,"alloc::sync"],[2104,"polars_io::cloud::polars_object_store"],[2105,"object_store::path"],[2106,"tokio::io::async_write"],[2107,"core::marker"],[2108,"polars_io::cloud::adaptors"],[2109,"std::io::error"],[2110,"crossterm::command"],[2111,"url"],[2112,"bytes::bytes"],[2113,"core::ops::range"],[2114,"core::ops::function"],[2115,"parquet_format_safe::thrift::varint::decode"],[2116,"object_store::aws::builder"],[2117,"object_store::azure::builder"],[2118,"object_store::gcp::builder"],[2119,"core::convert"],[2120,"core::iter::traits::collect"],[2121,"polars_io::csv::read::reader"],[2122,"alloc::boxed"],[2123,"polars_io::csv::read::read_impl::batched"],[2124,"polars_io::csv::read::options"],[2125,"std::path"],[2126,"polars_utils::pl_str"],[2127,"std::fs"],[2128,"polars_core::datatypes::dtype"],[2129,"polars_core::series"],[2130,"polars_utils::aliases"],[2131,"polars_io::csv::write::writer"],[2132,"polars_io::csv::write::options"],[2133,"core::num::nonzero"],[2134,"polars_io::file_cache::entry"],[2135,"polars_io::ipc::ipc_stream"],[2136,"polars_io::ipc::write"],[2137,"futures_io::if_std"],[2138,"polars_io::ipc::ipc_file"],[2139,"polars_io::ipc::ipc_reader_async"],[2140,"polars_arrow::io::ipc::read::file"],[2141,"polars_utils::mmap::private"],[2142,"polars_arrow::array::struct_"],[2143,"polars_arrow::array"],[2144,"polars_arrow::datatypes"],[2145,"polars_arrow::datatypes::field"],[2146,"polars_arrow::array::struct_::mutable"],[2147,"polars_arrow::array::growable::structure"],[2148,"polars_arrow::bitmap::immutable"],[2149,"polars_arrow::scalar"],[2150,"polars_arrow::array::struct_::iterator"],[2151,"polars_arrow::bitmap::utils::iterator"],[2152,"polars_arrow::bitmap::utils::zip_validity"],[2153,"polars_parquet::parquet::metadata::file_metadata"],[2154,"polars_parquet::parquet::metadata::column_order"],[2155,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2156,"polars_parquet::arrow::read::statistics"],[2157,"parquet_format_safe::parquet_format"],[2158,"polars_parquet::parquet::metadata::schema_descriptor"],[2159,"polars_parquet::parquet::error"],[2160,"polars_io::parquet::read::reader"],[2161,"polars_io::parquet::read::read_impl"],[2162,"polars_io::parquet::read::options"],[2163,"polars_io::parquet::read::metadata"],[2164,"polars_utils::idx_vec"],[2165,"polars_parquet::parquet::metadata::row_metadata"],[2166,"polars_parquet::arrow::read::deserialize::utils::filter"],[2167,"polars_io::parquet::write::writer"],[2168,"polars_io::parquet::write::batched_writer"],[2169,"polars_io::parquet::write::options"],[2170,"polars_parquet::arrow::write"],[2171,"polars_parquet::parquet::write"],[2172,"core::iter::traits::iterator"],[2173,"polars_parquet::arrow::write::file"],[2174,"std::sync::mutex"],[2175,"core::future::future"],[2176,"tokio::runtime::task::join"],[2177,"polars_core::datatypes::field"],[2178,"avro_schema::file"],[2179,"polars_io::cloud::object_store_setup"],[2180,"polars_io::csv::read::parser"],[2181,"polars_io::file_cache::cache"],[2182,"polars_io::file_cache::utils"],[2183,"polars_io::parquet::read::utils"],[2184,"polars_io::parquet::read::predicates"],[2185,"polars_io::parquet::read::mmap"],[2186,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743`34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jh`0`00`0000000000000`00AG`AGbAGd32103210321032103321032103`210332103210321032103AGf00`Jd000000000`0000``000000000Kh```000``KdKf21K`0Kb324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Kn00000`0`000000000```````````M`0LjLlLn3L`Lb0MjMb3MlMh4Ld987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:79434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nj`0```Nb1NdNhNf342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Jn0`0`000000`00000Hh01111````O`00000000Oh10111111010101011110101110110010111110011111111111111111111111111010110111110100000000000111``````A@lAAb1011111110101`0010010010101111000111110110101101ABf`00````00ABd1`AAnABbAB`21340213421343434402134021343402134343334442103402134121340213402134003`020213210213422134021340213402134213021342212121212121`ABj000000000`0`0000`ACh`0`00````0`00`ACf1ACjAClACnAD`ACbACd16754320167543267543267543267543266672016754320167543267543220167543220675432666777555444333222016754320167543220675432016754320167543222622126675432166754326016754320167543254301675432016754321111060``````````AEb0000000`00AEf1111`11`````AElAEn`Hf21212121211212121212022121222221212102121121AEj233332323232322```AfAl10111```````````````AFf``0`AFd0`0AFjAFh32103222231032103210322103332AFl21402140214214321433321432143214342143```````AFn00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{nf}{{{b{hEj}}}f}11{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Il}}}{{Aj{{Hd{Jb}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jd}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jf}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJh}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJh}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jh}}}Jf}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jh}}}}}}{{}c{}}000{Jh{{Aj{Jj}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jd}}}Jd}{{b{b{hc}}}f{}}{bf}{{}Jd}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jl{Jf}}}}}Jf}{{{b{Jd}}{b{hAn}}}B`}{cc{}}{{{b{Jd}}}n}{{{b{Jd}}}Hl}{{{b{Df}}AdAd}Jf}{{{b{Jn}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{Jn}}{b{Ib}}}{{Aj{Jd}}}}{{}{{A`{c}}}{}}{bC`}5{{JdHl}Jd}`````````{{bd}f}00`{{{K`{c}}{b{D`}}}{{Aj{{Kb{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{b{b{hc}}}f{}}00{bf}00``{{}Kd}{{}Kf}{{}Kh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{nf}0000{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{K`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kb{c}}}}}{{Aj{f}}}Bf}``{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{cc{}}0000{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{K`{c}}Ad}{{K`{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{K`{c}}n}{{K`{c}}}Bf}{c{{K`{c}}}Bf}````{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{K`{c}}Kj}{{K`{c}}}Bf}{{{K`{c}}{Bl{Db}}}{{K`{c}}}Bf}0{{{K`{c}}{Bl{n}}}{{K`{c}}}Bf}{{{K`{c}}{Bl{Ad}}}{{K`{c}}}Bf}{{{K`{c}}Db}{{K`{c}}}Bf}0{{{K`{c}}G`}{{K`{c}}}Bf}{{{K`{c}}Kh}{{K`{c}}}Bf}15{{{b{h{Kb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kl}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kn}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Kn}}}{{Aj{Jb}}}}0{bC`}{{{b{Kn}}Kl}f}{{{b{Kn}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{L`{c}}}}}{{Aj{Cf}}}Bd}{{{Lb{c}}{b{D`}}}{{Aj{{Ld{c}}}}}Bf}{{{Lb{c}}{b{D`}}}{{Aj{{`{c}}}}}{LfEhLh}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{b{b{hc}}}f{}}000{bf}000`{{{b{Mb}}{Bl{{b{Md}}}}}{{Aj{Mf}}}}{{{b{Mb}}{Bl{{b{Md}}}}LlAd}{{Aj{Ah}}}}{{}Mh}{{}Ll}{{}Ln}{{}M`}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lj}}}Ab}{c{{A`{Ln}}}Ab}{c{{A`{M`}}}Ab}{nf}0000000000{{{b{Lj}}{b{Lj}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{b{b{c}}}Ad{}}00000{{{Mj{c}}}{{Aj{Ah}}}Hh}{{{L`{c}}}{{Aj{Ah}}}Bd}{{{b{h{Ml{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}}{{Aj{f}}}Bf}{{{Mj{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lj}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Mb}}}}{{{b{Lj}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000``{{{Mj{c}}{Bl{Il}}}{{Mj{c}}}Hh}{{{b{Mb}}}{{Aj{Md}}}}{c{{Mj{c}}}Hh}{c{{L`{c}}}Bd}{c{{Ml{c}}}Bf}{{}Mh}{c{{Lb{c}}}Bf}{c{{Lb{c}}}{LfEhLh}}{{{b{h{Mj{c}}}}}{{Aj{Mn}}}Hh}{{{b{h{L`{c}}}}}{{Aj{D`}}}Bd}{{{b{Lj}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{Mj{c}}Ad}{{Mj{c}}}Hh}{{{L`{c}}Ad}{{L`{c}}}Bd}{bc{}}000{{{b{Ln}}c}{{Lb{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Mj{c}}{Bl{{Dd{Db}}}}}{{Mj{c}}}Hh}{{{L`{c}}{Bl{{Dd{Db}}}}}{{L`{c}}}Bd}{{{Ml{c}}N`}{{Ml{c}}}{}}{{{Lb{c}}N`}{{Lb{c}}}Bf}{{{Ml{c}}{Bl{M`}}}{{Ml{c}}}{}}{{Mh{Bl{M`}}}Mh}{{{Lb{c}}{Bl{M`}}}{{Lb{c}}}Bf}{{MhIl}Mh}{{{Mj{c}}{Bl{{Dd{Jj}}}}}{{Mj{c}}}Hh}{{{Mj{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Mj{c}}}Hh}{{{Mj{c}}{Bl{n}}}{{Mj{c}}}Hh}{{{L`{c}}{Bl{n}}}{{L`{c}}}Bd}{{Llc}Ll{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mj{c}}{Bl{{Dd{n}}}}}{{Mj{c}}}Hh}{{{L`{c}}{Bl{{Dd{n}}}}}{{L`{c}}}Bd}{{Ll{Bl{{Dn{{Fh{J`}}}}}}}Ll}{{{Mj{c}}{Bl{j}}}{{Mj{c}}}Hh}{{{L`{c}}{Bl{j}}}{{L`{c}}}Bd}{{Llc}Ll{{Gn{{Bl{j}}}}}}{{Llc}Ll{{Gn{{Bl{n}}}}}}{{{b{h{Ld{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ln}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nb}}}Nb}{{b{b{hc}}}f{}}{bf}{{}Nb}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nb}}}Ab}{nf}0000{{{b{Nb}}{b{Nb}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nd{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nf{c}}}{{Aj{Ah}}}Hh}{{{b{Nb}}{b{hAn}}}B`}{cc{}}0000{{{b{Nb}}{b{hc}}}fBb}{{{Nf{c}}{Bl{Kj}}}{{Nf{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nd{c}}}Bf}{c{{Nh{c}}}Bf}{c{{Nf{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nb}}c}A`Bn}{{{Nf{c}}Ad}{{Nf{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nf{c}}Kj}{{Nf{c}}}Hh}5{{{Nd{c}}Nj}{{Nd{c}}}Bf}{{{Nf{c}}Nj}{{Nf{c}}}Hh}{{{Nf{c}}{Bl{{Dd{J`}}}}}{{Nf{c}}}Hh}{{{Nf{c}}Hl}{{Nf{c}}}Hh}{{{Nf{c}}{b{D`}}}{{Nf{c}}}Hh}{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{Jn}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{{{b{Jb}}}{{Aj{f}}}}{cc{}}{{{b{hc}}}JnHh}{{}n}{{}c{}}{JnNl}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jb}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kj}}}{{Aj{D`}}}Nn}``{{bd}f}{{{b{O`}}n}{{E`{O`O`}}}}{O`{{Dn{Ob}}}}{cO`{{Hb{}{{H`{f}}}}}}{cO`{{Hb{}{{H`{{Bl{f}}}}}}}}{{Odc}O`{{Hb{}{{H`{{Bl{f}}}}}}}}{{Odc}O`{{Hb{}{{H`{f}}}}}}{{{b{O`}}}{{b{Of}}}}{{{b{hO`}}}{{b{hOf}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{O`{{Hj{Ob}}}}{{{b{O`}}n}Ad}{{{b{O`}}}O`}{{b{b{hc}}}f{}}{bf}{{{Oh{c}}}{{Aj{n}}}Hh}{{{b{O`}}}{{b{Od}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{O`}}{b{{b{Ob}}}}}Ad}{{{b{O`}}{b{O`}}}Ad}{{{b{O`}}}{{b{{Fh{Oj}}}}}}{{{Oh{c}}}{{Aj{Ah}}}Hh}{{{b{O`}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{OlO`}{OnO`}{c{{Aj{{Oh{Jb}}}}}{{Gn{Il}}}}{{nOd}O`}{{{b{Od}}}{{b{{Fh{Oj}}}}}}{{{Oh{c}}{Bl{Kj}}}{{Oh{c}}}Hh}{{}n}0{{}c{}}0{O`{{E`{{Dd{Oj}}{Dd{{Hj{Ob}}}}{Bl{A@`}}}}}}{{{b{O`}}}}{{{b{O`}}}{{A@h{{Dd{{Hj{A@b}}}}A@dA@f}}}}{{{b{O`}}}n}{{{Oh{c}}Ad}{{Oh{c}}}Hh}{c{{Oh{c}}}Hh}{{Od{Dd{{Hj{Ob}}}}{Bl{A@`}}}O`}{OdO`}{{Odn}O`}{{{b{O`}}}O`}{{{b{hO`}}{Bl{A@`}}}f}{{{b{hO`}}nn}f}0{{bnn}c{}}011{{O`nn}O`}0{{{b{O`}}n}{{E`{{Hj{Ob}}{Hj{Ob}}}}}}0{{{b{hO`}}}{{Bl{A@`}}}}{{{b{O`}}}{{Hj{Ob}}}}{bc{}}{{{b{O`}}{b{O`}}}A@`}{{{b{O`}}b}A@`}10{e{{A`{O`c}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{O`c}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ode}{{A`{O`c}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ode}{{A`{O`c}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Od{Dd{{Hj{Ob}}}}{Bl{A@`}}}{{A`{O`A@j}}}}{bC`}0{{{b{O`}}}{{Bl{{b{A@`}}}}}}0{{{b{O`}}}{{b{{Fh{{Hj{Ob}}}}}}}}{{{b{O`}}}A@d}{{}c{}}0{{{Oh{c}}{Bl{Kj}}}{{Oh{c}}}Hh}{{{Oh{c}}Ad}{{Oh{c}}}Hh}{{{Oh{c}}{Bl{n}}}{{Oh{c}}}Hh}0{{{Oh{c}}{Bl{e}}}{{Oh{c}}}Hh{{Gn{Il}}}}{{{Oh{c}}{Bl{{Dn{Hf}}}}}{{Oh{c}}}Hh}{{{Oh{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oh{c}}}Hh}4{{{Oh{c}}{Bl{{b{hj}}}}}{{Oh{c}}}Hh}{{{Oh{c}}Hl}{{Oh{c}}}Hh}{{{Oh{c}}{b{D`}}}{{Oh{c}}}Hh}{{O`{Bl{A@`}}}O`}{{{b{O`}}{Bl{A@`}}}{{Hj{Ob}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@l}}}A@l}{{b{b{hc}}}f{}}{bf}{{{b{A@l}}n}A@n}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Oj}}{b{{Fh{{b{AA`}}}}}}}{{A`{AAbA@j}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@l}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAdAAb}1{{}n}0{{}c{}}0{A@lAAf}{{{b{A@l}}}{{b{{Bl{{Dd{AAh}}}}}}}}``````{{{b{A@l}}}{{b{AAj}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAf{{A`{A@lAAl}}}}{{}{{A`{c}}}{}}0{bC`}0`88``````````{{bd}f}0`{{{AAn{c}}n}{{Aj{AB`}}}Hh}{{ABbn}{{Aj{AB`}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{AAn{c}}{b{Cf}}}{{Aj{{AAn{c}}}}}Hh}{{ABb{b{Cf}}}{{Aj{ABb}}}}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{b{b{hc}}}f{}}0{bf}0{{}ABf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABd}}}Ab}{c{{A`{ABf}}}Ab}{nf}0000{{{b{ABd}}{b{ABd}}}Ad}{{{b{ABf}}{b{ABf}}}Ad}{{b{b{c}}}Ad{}}00000{{{AAn{c}}}{{Aj{Ah}}}Hh}{ABb{{Aj{Ah}}}}{{{b{AB`}}n}Ad}{{{b{ABd}}{b{hAn}}}B`}{{{b{ABf}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABh}}}{{Aj{ABb}}}}{{{b{h{AAn{c}}}}}{{Aj{{b{ABh}}}}}Hh}{{{b{hABb}}}{{Aj{{b{ABh}}}}}}{{{b{ABd}}{b{hc}}}fBb}{{{b{ABf}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AB`}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jj}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAn{c}}}Hh}{{{b{hAB`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAn{c}}}}}{{Aj{n}}}Hh}{{{b{hABb}}}{{Aj{n}}}}`{{{AAn{c}}ABf}{{AAn{c}}}Hh}{{ABbABf}ABb}{{{b{AB`}}}{{b{Mn}}}}{{{b{h{AAn{c}}}}}{{Aj{Mn}}}Hh}{{{b{hABb}}}{{Aj{Mn}}}}{{{b{ABd}}c}A`Bn}{{{b{ABf}}c}A`Bn}{{{AAn{c}}Ad}{{AAn{c}}}Hh}0{{ABbAd}ABb}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000054`{{}c{}}0000{{{AAn{c}}{Bl{{Dd{Db}}}}}{{AAn{c}}}Hh}{{{AAn{c}}{Bl{{Dd{Jj}}}}}{{AAn{c}}}Hh}{{ABb{Bl{{Dd{Jj}}}}}ABb}{{{AAn{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{AAn{c}}}Hh}{{ABb{Bl{{E`{J`{Dn{Df}}}}}}}ABb}{{{AAn{c}}{Bl{{Dn{Hf}}}}}{{AAn{c}}}Hh}{{ABb{Bl{{Dn{Hf}}}}}ABb}{{{AAn{c}}{Bl{{Dd{n}}}}}{{AAn{c}}}Hh}{{ABb{Bl{{Dd{n}}}}}ABb}{{{AAn{c}}{Bl{j}}}{{AAn{c}}}Hh}{{ABb{Bl{j}}}ABb}{{{AAn{c}}{Bl{{E`{nn}}}}}{{AAn{c}}}Hh}{{ABb{Bl{{E`{nn}}}}}ABb}`{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{ABj}}{b{Df}}}{{Bl{{ABl{{b{AA`}}}}}}}}{{}n}{{}c{}}{{{b{ABn}}}ABj}{{{Bl{{b{Hf}}}}{b{ABj}}{b{Cf}}}{{Aj{Ad}}}}{{{b{hABj}}{Bl{{b{{Jl{{b{Df}}}}}}}}}f}{{{Dd{{E`{{b{AA`}}Nl}}}}Oj{Bl{AC`}}}{{Aj{{Hj{Ob}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}7````````````````{{bd}f}00000{{{ACb{c}}{b{D`}}}{{Aj{{ACd{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACf}{{}ACh}{{}AD`}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACf}}}Ab}{c{{A`{ACh}}}Ab}{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}`{nf}00000009{{{b{{ACd{c}}}}{b{Ah}}}{{`{{ADd{}{{H`{{Aj{{ADb{A@j}}}}}}}}}}}Bf}{{{b{ACf}}{b{ACf}}}Ad}{{{b{ACh}}{b{ACh}}}Ad}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACd{c}}}}}{{Aj{Kl}}}Bf}{{{ACb{c}}{b{hAh}}}{{Aj{Kl}}}Bf}{{{b{ACf}}{b{hAn}}}B`}{{{b{ACh}}{b{hAn}}}B`}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}AD`}{{{b{{ACd{c}}}}}{{b{{ADh{{ADf{c}}}}}}}Bf}{{{b{ACf}}{b{hc}}}fBb}{{{b{ACh}}{b{hc}}}fBb}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AD`}}}Ad}0```{c{{ACb{c}}}{BfBf}}``{{{b{ACf}}c}A`Bn}{{{b{ACh}}c}A`Bn}{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{ACb{c}}Ad}{{ACb{c}}}Bf}`{bc{}}00000{{{b{ACf}}c}{{ACb{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACj}}}}{ADj{{Aj{ACl}}}}{ADl{{Aj{ACn}}}}{bC`}0000000{{}c{}}0000000{{{ACb{c}}ACh}{{ACb{c}}}Bf}{{{ACb{c}}{Bl{n}}}{{ACb{c}}}Bf}0{{{ACb{c}}AD`}{{ACb{c}}}Bf}{{{b{h{ACd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACf}}Ahc}{{Aj{f}}}Bf}{{{b{{ACd{c}}}}{Dd{{ADb{A@j}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADn}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLhAE`}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Dd{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Dd{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADn}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADn}}}}{{{b{ADn}}}Il}``{{{b{AEb}}c}{}AEd}{{{b{AEb}}c}{}{AEdLh}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEb}}}}{{}n}{{}c{}}{{{b{AEf}}}Kl}{{{b{AEb}}c}AEh{AEdLh}}{{{b{AEb}}e}{{AEh{c}}}Lh{{Fn{}{{Fl{c}}}}Lh}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADje}{}AEd{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEj}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{b{b{hc}}}f{}}0{bf}0{{{b{AEn}}}{{b{{Fh{AEl}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEl}}}Ab}{c{{A`{AEn}}}Ab}{nf}0{{{b{AEl}}}{{b{Jf}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jj}}}}{{{b{AEl}}}{{b{J`}}}}{{{b{AEl}}{b{hAn}}}B`}{{{b{AEn}}{b{hAn}}}B`}{cc{}}0{JjAEl}{AF`AEl}{{{b{AEl}}}{{Bl{{b{Jj}}}}}}00{{{b{AEn}}{b{Df}}}{{Aj{{b{AEl}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AF`{Bl{Jj}}{Bl{Jj}}{Bl{Jj}}}AEl}{{Hl{Dd{AEl}}{Bl{n}}}AEn}{{{b{AEl}}}{{Bl{n}}}}{{{b{AEn}}}{{Bl{n}}}}{{{b{AEn}}}{{b{Hl}}}}{{{b{AEl}}c}A`Bn}{{{b{AEn}}c}A`Bn}{{{b{AEj}}{b{AEn}}}{{Aj{Ad}}}}{{{b{hAEn}}{b{{Fh{n}}}}}f}=={{{b{AEl}}}{{Bl{Jj}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAEn}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{Jn}}}{BdHhAFb}}`{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jj}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFd}}}AFd}{{b{b{hc}}}f{}}{bf}{{}AFf}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFd}}{b{hAn}}}B`}{cc{}}00{AFhAFf}{AFjAFf}2{{{b{AFl}}{Ff{n}}}{{Aj{Nl}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nl}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nl}}}}{{{b{AFf}}{Ff{n}}}{{Aj{Nl}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nl}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nl}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nl}}}}}}{{{b{AFf}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nl}}}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{{b{AFf}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFd}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFf}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFf}}}{{b{Df}}}}6666{{{b{{Fh{G`}}}}}Ad}``````````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{AFn}}{b{hAn}}}B`}{cc{}}?>{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AFn}=<;{{}c{}}","D":"COh","p":[[1,"reference"],[5,"Private",2081],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2082],[5,"HiveOptions",0,2082],[1,"usize"],[6,"Result",2083],[10,"Deserializer",2084],[1,"bool"],[10,"SerReader",1951,2085],[5,"DataFrame",2086],[8,"PolarsResult",2087],[10,"SerWriter",1951,2085],[5,"Formatter",2088],[8,"Result",2088],[10,"Hasher",2089],[10,"Read",2090],[10,"Write",2090],[10,"ArrowReader",0,2085],[8,"RecordBatch",2091],[6,"Option",2092],[10,"Serializer",2093],[5,"TypeId",2094],[10,"WriteDataFrameToFile",0,2085],[5,"AvroReader",86,2095],[5,"ArrowSchema",2096],[10,"Seek",2090],[6,"AvroCompression",86],[5,"AvroWriter",86,2097],[5,"Error",2088],[5,"Schema",2098],[5,"String",2099],[5,"Vec",2100],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2101],[10,"ObjectStore",2102],[5,"Arc",2103],[1,"tuple"],[5,"PolarsObjectStore",153,2104],[5,"Path",2105],[10,"AsyncWrite",2106],[10,"Unpin",2107],[5,"CloudWriter",153,2108],[5,"Error",2109],[10,"Command",2110],[8,"Result",2109],[5,"Url",2111],[5,"Bytes",2112],[5,"Range",2113],[1,"slice"],[5,"ObjectMeta",2102],[17,"Output"],[10,"FnOnce",2114],[1,"u8"],[10,"VarInt",2115],[6,"AmazonS3ConfigKey",227,2116],[6,"AzureConfigKey",227,2117],[6,"GoogleConfigKey",227,2118],[6,"CloudType",227],[10,"AsRef",2119],[10,"Into",2119],[17,"Item"],[10,"IntoIterator",2120],[5,"CsvReader",416,2121],[10,"PhysicalIoExpr",1883],[10,"MmapBytesReader",1284],[5,"Box",2122],[8,"SchemaRef",2098],[5,"OwnedBatchedCsvReader",416,2123],[5,"BatchedCsvReader",416,2123],[5,"CsvReadOptions",416,2124],[5,"CsvParseOptions",416,2124],[6,"CsvEncoding",416,2124],[6,"CommentPrefix",416,2124],[6,"NullValues",416,2124],[5,"PathBuf",2125],[10,"Fn",2114],[5,"PlSmallStr",2126],[5,"File",2127],[5,"SchemaInferenceResult",753],[6,"DataType",2128],[6,"Buffer",676],[5,"Series",2129],[8,"PlHashSet",2130],[6,"ReaderBytes",1284],[5,"CsvWriter",780,2131],[5,"BatchedWriter",780,2131],[5,"CsvWriterOptions",780,2132],[5,"SerializeOptions",780,2132],[6,"QuoteStyle",780,2132],[8,"NonZeroUsize",2133],[1,"u64"],[5,"FileCacheEntry",925,2134],[5,"IpcStreamReader",946,2135],[5,"IpcWriter",946,2136],[5,"BatchedWriter",946,2136],[10,"AsyncWrite",2137],[10,"Send",2107],[5,"IpcScanOptions",946,2138],[5,"IpcReadOptions",946,2139],[5,"IpcWriterOptions",946,2136],[6,"IpcCompression",946,2136],[5,"IpcReaderAsync",946,2139],[5,"FileMetadata",2140],[1,"i64"],[5,"IpcStreamWriterOption",946,2135],[5,"IpcReader",946,2138],[5,"IpcStreamWriter",946,2135],[8,"ArrowSchemaRef",2096],[5,"CompatLevel",2128],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2141],[10,"BufRead",2090],[5,"StructArray",1309,2142],[10,"Array",2143],[6,"ArrowDataType",2144],[10,"Any",2094],[5,"JsonLineReader",1309],[5,"Field",2145],[5,"MutableStructArray",2146],[5,"GrowableStruct",2147],[5,"Bitmap",2148],[10,"Scalar",2149],[5,"StructValueIter",2150],[5,"BitmapIter",2151],[6,"ZipValidity",2152],[6,"PolarsError",2087],[5,"FileMetaData",1416,2153],[6,"ColumnOrder",2154],[5,"ColumnChunkMetaData",2155],[5,"ParquetStatistics",1416],[5,"MutableStatistics",2156],[5,"FileMetaData",2157],[5,"KeyValue",2157],[5,"SchemaDescriptor",2158],[6,"ParquetError",2159],[5,"ParquetReader",1469,2160],[5,"BatchedParquetReader",1469,2161],[5,"ParquetAsyncReader",1469,2160],[5,"ParquetOptions",1469,2162],[6,"ParallelStrategy",1469,2162],[8,"FileMetaDataRef",1416],[5,"PartitionedColumnChunkMD",1611,2163],[5,"UnitVec",2164],[5,"RowGroupMetaData",2165],[6,"Filter",2166],[5,"ParquetWriter",1629,2167],[5,"BatchedWriter",1629,2168],[5,"ParquetWriteOptions",1629,2169],[6,"ParquetCompression",1629,2169],[5,"GzipLevel",1629,2169],[5,"BrotliLevel",1629,2169],[5,"ZstdLevel",1629,2169],[5,"StatisticsOptions",1629,2170],[8,"RowGroupIterColumns",1629,2171],[10,"Iterator",2172],[5,"FileWriter",2173],[5,"Mutex",2174],[1,"u32"],[1,"i32"],[5,"Path",2125],[10,"Sync",2107],[5,"RuntimeManager",1861],[10,"Future",2175],[10,"GetSize",1861],[5,"JoinHandle",2176],[10,"StatsEvaluator",1883],[5,"ColumnStats",1883],[5,"BatchStats",1883],[5,"Field",2177],[10,"Sized",2107],[6,"DynByteSourceBuilder",1975],[6,"DynByteSource",1975],[5,"ObjectStoreByteSource",1975],[5,"MemSliceByteSource",1975],[10,"ByteSource",1975],[6,"SplitSlicePosition",2062],[5,"Utf8Field",676],[5,"CategoricalField",676],[5,"DatetimeField",676],[15,"Datetime",750]],"r":[[0,2085],[1,2082],[2,2082],[3,2085],[4,2085],[5,2085],[87,2095],[88,2097],[89,2178],[153,2101],[154,2108],[155,2104],[156,2104],[165,2179],[194,2101],[206,2179],[230,2116],[235,2117],[259,2118],[418,2123],[419,2124],[420,2124],[421,2124],[422,2124],[423,2121],[427,2124],[428,2123],[474,2180],[555,753],[781,2131],[782,2131],[783,2132],[787,2132],[788,2132],[925,2181],[926,2182],[927,2134],[934,2181],[936,2182],[946,2136],[947,2136],[948,2139],[949,2138],[950,2139],[951,2138],[952,2135],[953,2135],[954,2135],[955,2136],[956,2136],[1310,2142],[1416,2153],[1434,2156],[1470,2161],[1473,2162],[1474,2160],[1475,2162],[1476,2160],[1556,2183],[1611,2163],[1622,2184],[1624,2185],[1629,2168],[1631,2169],[1633,2169],[1636,2169],[1637,2169],[1638,2167],[1639,2171],[1641,2170],[1644,2169],[1951,2085],[1952,2085],[1953,0],[1961,1853],[1962,2186],[1963,2186],[1964,2186],[1965,2186],[1969,2186],[1970,2055],[1971,2186],[1972,2186],[1973,2186]],"b":[[1314,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1315,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1317,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1337,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1338,"impl-PartialEq-for-StructArray"],[1344,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1345,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1365,"impl-Array-for-StructArray"],[1366,"impl-StructArray"],[1369,"impl-StructArray"],[1370,"impl-Array-for-StructArray"],[1382,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1383,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1385,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1393,"impl-StructArray"],[1394,"impl-Array-for-StructArray"],[1410,"impl-StructArray"],[1411,"impl-Array-for-StructArray"],[2013,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2014,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUGugAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3AE4ABYCBAAiAgAAJAIRAD8CAABBAgIASAIrAHUCCAB/AgcAlwIAAKUCEgC5AhcA1QIEAN4CIAAAAwEABAMAAAYDBgAOAwAAFgMXADADIQBTAwAAVQMCAF0DAgBhAwAAYwMFAG8DAgB2AwMAewMWAJ4DBwCnAwIAqwMBAK8DBAC1AwAAuAMAALsDAAC9AwAAwAMDAMUDIwDqAzYAIgQDADEEDgBMBAAATgQGAFcENQCPBAEAlQQBAJkEAACcBAAAnwQBAKIEAQCpBCQAzwQAANUEAADXBAQA4wQZAP8EAQAFBQEACAUIABIFAQAVBQkAIAUBACMFCQAuBQ0APQUBAEEFAQBEBQAARgUCAEwFAABOBQAAVgUAAFgFAQBbBQAAXgUBAGEFDQBwBQEAcwUAAHYFAQB6BQgAhAUBAIoFAACMBQcAlwUDAJ0FBACjBQAApQUBALMFAgC3BQMAvAUBAL8FAADCBQAAxAUAAMgFDgDYBSUAAwYJABIGAAAUBgIAGAYAABoGAQAdBgEAIAYCACQGEgA5BgUAQAYFAEcGAABJBgEATQYEAFMGAQBWBgkAYQYAAGMGAQBmBgAAaAYBAGsGAQBuBigAmQY7ANcGBQDlBg8A/QYBAAAHAQADBwAABQcFAA0HKQA8BwEAPwcAAEYHAgBKBwQAUAcBAFMHAABVBwYAXgcEAGQHCQBvBwcAeQcCAIQHAQCOBwMAlQcNAKQHAACmBwAAqgcKALYHAwC7BwEAvgcAAMAHGgDeBwEA4gcOAPUHEgAJCA8AGggAAB0IBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNNNNNOMNNCNNMNNOONNNNNMNNOOONNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","data_type","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","not","null_count","on","optimize","parallel","paths","","","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","output_schema","paths","payload","predicate","","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1618,"polars_lazy::dsl::AggExpr"],[1625,"polars_lazy::dsl::BooleanFunction"],[1628,"polars_lazy::dsl::Expr"],[1663,"polars_lazy::dsl::FunctionExpr"],[1708,"polars_lazy::dsl::StringFunction"],[1728,"polars_lazy::dsl::TemporalFunction"],[1730,"polars_lazy::dsl::binary"],[1751,"polars_lazy::dsl::cat"],[1752,"polars_lazy::dsl::dt"],[1808,"polars_lazy::dsl::function_expr"],[2025,"polars_lazy::dsl::function_expr::BooleanFunction"],[2028,"polars_lazy::dsl::function_expr::FunctionExpr"],[2073,"polars_lazy::dsl::function_expr::StringFunction"],[2093,"polars_lazy::dsl::function_expr::TemporalFunction"],[2095,"polars_lazy::dsl::function_expr::cat"],[2097,"polars_lazy::dsl::function_expr::pow"],[2101,"polars_lazy::dsl::function_expr::rolling"],[2135,"polars_lazy::dsl::function_expr::rolling_by"],[2168,"polars_lazy::dsl::function_expr::trigonometry"],[2212,"polars_lazy::dsl::functions"],[2287,"polars_lazy::dsl::python_udf"],[2349,"polars_lazy::dsl::string"],[2410,"polars_lazy::dsl::udf"],[2416,"polars_lazy::frame"],[2894,"polars_lazy::frame::pivot"],[2896,"polars_lazy::prelude"],[3516,"polars_lazy::prelude::DslPlan"],[3571,"polars_lazy::prelude::LiteralValue"],[3574,"dyn_clone::sealed"],[3575,"polars_plan::dsl::meta"],[3576,"polars_plan::dsl::expr"],[3577,"polars_plan::dsl::struct_"],[3578,"polars_utils::pl_str"],[3579,"alloc::sync"],[3580,"polars_error"],[3581,"core::result"],[3582,"polars_plan::dsl::selector"],[3583,"core::convert"],[3584,"polars_plan::dsl::array"],[3585,"polars_plan::dsl::list"],[3586,"polars_plan::dsl::expr_dyn_fn"],[3587,"polars_core::series"],[3588,"core::option"],[3589,"core::ops::function"],[3590,"core::marker"],[3591,"polars_plan::plans::visitor"],[3592,"polars_plan::dsl::function_expr"],[3593,"polars_core::datatypes::dtype"],[3594,"polars_core::chunked_array::ops::sort::options"],[3595,"polars_plan::dsl::function_expr::schema"],[3596,"polars_core::datatypes::field"],[3597,"core::any"],[3598,"alloc::vec"],[3599,"polars_plan::dsl::binary"],[3600,"core::clone"],[3601,"polars_plan::dsl::udf"],[3602,"polars_core::chunked_array::cast"],[3603,"polars_plan::dsl::cat"],[3604,"polars_plan::dsl::arity"],[3605,"polars_plan::dsl::function_expr::boolean"],[3606,"polars_plan::dsl::function_expr::cat"],[3607,"polars_plan::dsl::function_expr::datetime"],[3608,"polars_plan::dsl::function_expr::pow"],[3609,"polars_plan::dsl::function_expr::strings"],[3610,"polars_plan::dsl::function_expr::struct_"],[3611,"polars_plan::dsl::functions::temporal"],[3612,"polars_plan::dsl::options"],[3613,"core::iter::traits::collect"],[3614,"polars_lazy::dsl::eval"],[3615,"polars_core::utils"],[3616,"polars_time::windows::duration"],[3617,"polars_time::windows::group_by"],[3618,"polars_core::datatypes::time_unit"],[3619,"serde::de"],[3620,"polars_plan::plans"],[3621,"polars_core::series::ops"],[3622,"polars_plan::dsl::dt"],[3623,"polars_lazy::dsl::list"],[3624,"polars_arrow::legacy::kernels::ewm"],[3625,"polars_core::chunked_array::ops"],[3626,"core::fmt"],[3627,"polars_plan::plans::apply"],[3628,"polars_plan::dsl::function_expr::range"],[3629,"polars_plan::dsl::function_expr::array"],[3630,"polars_plan::dsl::function_expr::business"],[3631,"polars_plan::dsl::function_expr::list"],[3632,"polars_plan::dsl::function_expr::binary"],[3633,"alloc::string"],[3634,"polars_plan::plans::options"],[3635,"polars_core::schema"],[3636,"core::hash"],[3637,"polars_ops::series::ops::interpolation::interpolate"],[3638,"polars_ops::series::ops::is_between"],[3639,"polars_plan::dsl::name"],[3640,"polars_plan::plans::lit"],[3641,"polars_core::utils::supertype"],[3642,"polars_plan::dsl::python_udf"],[3643,"polars_utils::idx_vec"],[3644,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3645,"polars_ops::series::ops::rank"],[3646,"polars_time::group_by::dynamic"],[3647,"polars_core::chunked_array::ops::rolling_window"],[3648,"polars_core::datatypes"],[3649,"polars_core::chunked_array"],[3650,"polars_time::chunkedarray::rolling_window"],[3651,"polars_core::chunked_array::ops::search_sorted"],[3652,"serde::ser"],[3653,"polars_core::series::series_trait"],[3654,"polars_plan::dsl::string"],[3655,"polars_ops::chunked_array::list::to_struct"],[3656,"compact_str"],[3657,"polars_ops::series::ops::business"],[3658,"polars_arrow::legacy::kernels::time"],[3659,"polars_plan::dsl::function_expr::rolling"],[3660,"polars_plan::dsl::function_expr::rolling_by"],[3661,"polars_plan::dsl::function_expr::trigonometry"],[3662,"polars_core::frame"],[3663,"rayon::iter"],[3664,"pyo3::types::any"],[3665,"pyo3::instance"],[3666,"polars_utils::arena"],[3667,"polars_plan::plans::ir"],[3668,"polars_plan::plans::aexpr"],[3669,"polars_plan::frame::opt_state"],[3670,"polars_plan::plans::anonymous_scan"],[3671,"polars_lazy::scan::anonymous_scan"],[3672,"polars_utils::index"],[3673,"polars_lazy::frame::exitable"],[3674,"polars_utils::aliases"],[3675,"polars_lazy::scan::csv"],[3676,"polars_lazy::scan::ipc"],[3677,"polars_lazy::scan::ndjson"],[3678,"polars_lazy::scan::parquet"],[3679,"polars_lazy::scan::file_list_reader"],[3680,"polars_io::cloud::options"],[3681,"polars_ops::frame::join::args"],[3682,"bitflags::iter"],[3683,"std::path"],[3684,"polars_io::options"],[3685,"polars_io::csv::write::options"],[3686,"polars_io::ipc::write"],[3687,"polars_io::json"],[3688,"polars_io::parquet::write::options"],[3689,"core::num::nonzero"],[3690,"polars_io::csv::read::options"],[3691,"chrono_tz::timezones"],[3692,"core::cmp"],[3693,"polars_core::frame::group_by::proxy"],[3694,"polars_core::datatypes::any_value"],[3695,"std::io"],[3696,"polars_io::parquet::write::writer"],[3697,"chrono::naive::datetime"],[3698,"polars_plan::dsl::functions::selectors"],[3699,"polars_plan::dsl::functions::horizontal"],[3700,"polars_plan::dsl::functions::arity"],[3701,"polars_plan::dsl"],[3702,"polars_plan::dsl::functions::range"],[3703,"polars_plan::dsl::functions::index"],[3704,"polars_plan::dsl::functions::coerce"],[3705,"polars_plan::dsl::functions::syntactic_sugar"],[3706,"polars_plan::dsl::functions::business"],[3707,"polars_plan::dsl::functions::concat"],[3708,"polars_plan::dsl::functions::correlation"],[3709,"polars_plan::dsl::functions::repeat"],[3710,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``9977192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;667=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<``>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nb8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNblFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNblFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNblFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNblFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00K`0j000800000l001111`An22Bf33DhFbEnKj77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNblFhFjFlFnDl<<<<<<<<<<<<<<G`EfBf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKj88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNblFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNblFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jMlAnhEf41144444444`4`4114Al3lNb7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nb0`231`Bf4222`FhFl`GnH`186753Fj3FnDl9G`Ef9GbGdGfGhGjGlCj=<HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNb<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNblFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNblFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NblFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AIlAInAJ`2102AJbAJdAJfAJhAJjAJl0AJnAK`4AKbAKdAKfAKh3AKj528AKl1AKn11098432323570;5AL`ALbALdALfALhALjALlALnAM`AMbAMdAMf087;87;7;AMhAMj8AMlAMnAN`0?1ANbANdANfANh4AL`ANjANlANnAO`AObAOd:=;AOfAOhAOjAOlAOnB@`54B@b321B@dB@fB@h03721B@j0`Ed0000000000000000000``Jl000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJbAJdAJfAL`ALbALdALfALhALjALlALnAM`AMbAMdAMf087;87;7;AMhAMj8AMlAMnAN`0?1ANbANdANfANh4AL`ANjANlANnAO`AObAOd:=;AOfAOhAOjAOlAOnB@`54B@b321B@dB@fB@h03721B@j0`GdGh0`0AAd000`00000000000000000000000000000AAf000`0000000000000000000000000000AAh00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABdNjABj210212222102102210222222102201102102102210210210102102`A@f00000000000000000000000000000000000000000000000000000000000`F`0000`ACh00000````````0`000000```0ADdAAnACfACnADhADjADlADn86658ACj77699999999087654321908765432197731877876543219876543219876543219AE`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::8818AF`9929984399999599164753726464;9293164`9916453;9929164753999997;9999;99999999979999;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;246649999996966666664646466166449691649966164919664464646966996699`````AEh0AHbAHd0Jh3`011120``1`0011130000311111`0````3``AGh0133``2003``12``4`114211122222221`AEfOdInAEn84AFl8ObAFnAG`AGb;AHfABb<888ACl0007;:9AI`9AEh>AHn:AHb:987AHd76JhAEfOdIn8AEn8AGh8AFl8ObAFnAG`AGb;AHfABb<;:98AEh87?6543>21=<;:9087?6543>21=<;:9087?6543>21=<;:9:53=3::<;987654321=<;:AI`:19AHn9AHb9876AHd65JhAEfOdIn7AEn9AGh8AFl8ObAFnAG`AGb;AHfABb<5<<;:98AEh87?6543>21=1=<;:AI`:19AHn9AHb9876AHd65JhAEfOdInAEn9AGhAFl8ObAFnAG`AGb;AHfABb;;;:::999888AEh00888777555444333222111<<;::ACl:11998AHb8765AHd545?>=AI`==4<AHn<3;:98276Jh73AHjAEfOdInAEn;AGhAFl;ObAFnAG`AGb>AHfABb86;6;:;:9?8AEh8?7AHb7654AHd43Jh?>=AI`=4<AHn<4;:98376225??=?>AEfNdIn36?=<;6>00040AGh111AEnACl5Od8=444608`=AHjAGb33:8264>5AFl>ObAFnAG`4AHdAHfABbJh7<2<AEf9==140;?=AEh?9AHb987;6543In2AGh6:=11114?1AI`AEn52AHn?5>=<AGb<<;:98Od643852AFl8ObAFnAG`5AHdAHfABbJh>AEh>AEf:In?>2AGh>;AHb;:9>8765AEn4>3AI`163AHn?3>=<AGb<;:966323>0B@l0B@nBA`BAbBAdBAfBAhBAjBAlBAn04BB`17BBb84;3BBd:BBf39BBhBBj0>BBlB@l240;4BBn;13:62=947939=BA`0=BC`00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}00000000000000{{{b{{Bf{c}}}}}b{}}1111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{{Bf{Bh}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJj}j}{{jClJj}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJl}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}{{{b{j}}{b{j}}}B`}:{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Jn}{{{b{{Bf{Bh}}}}{b{{Bf{Bh}}}}}B`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{K`jB`}j}0{{jKb}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKd}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Fb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{En}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Kj}}{b{CdKf}}}{{Af{fKh}}}}{{{b{j}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{G`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Ef}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{{Bf{c}}}}{b{CdKf}}}{{Af{fKh}}}{}}{{{b{Gb}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gd}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gf}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gh}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gj}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gl}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Cj}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{H`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hd}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hf}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hj}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hl}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Ah}}{b{CdKf}}}{{Af{fKh}}}}{{{b{F`}}{b{CdKf}}}{{Af{fKh}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Klj}{B`j}{Ijj}{Knj}{L`j}{Lbj}6{{{b{E`}}}j}{Elj}{Clj}{Dlj}{Idj}{Ldj}{Ebj}=={Lf{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Lh{{Bf{{Ab{Dh}}}}}}{Lj{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Gf{{Bf{{Ab{Dh}}}}}}{Gb{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{cc{}}{Ln{{Bf{{Ab{Dh}}}}}}111111{LnCj}{GbCj}3{GjCj}{GdCj}55555{HjHh}6666{nAh}{M`Ah}{{{b{E`}}}Ah}{jAh}::{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Mb}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{Md}}Mf{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{Md}}Mf{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kj}}{b{Md}}}{{Af{{Ab{Md}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMh}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fMh}{{{b{G`}}{b{Cdc}}}fMh}{{{b{Ef}}{b{Cdc}}}fMh}{{{b{Gb}}{b{Cdc}}}fMh}{{{b{Gd}}{b{Cdc}}}fMh}{{{b{Gf}}{b{Cdc}}}fMh}{{{b{Gh}}{b{Cdc}}}fMh}{{{b{Gj}}{b{Cdc}}}fMh}{{{b{Gl}}{b{Cdc}}}fMh}{{{b{Cj}}{b{Cdc}}}fMh}{{{b{Hb}}{b{Cdc}}}fMh}{{{b{Hd}}{b{Cdc}}}fMh}{{{b{Hf}}{b{Cdc}}}fMh}{{{b{Hh}}{b{Cdc}}}fMh}{{{b{Hj}}{b{Cdc}}}fMh}{{{b{Hl}}{b{Cdc}}}fMh}{{{b{Hn}}{b{Cdc}}}fMh}{{{b{Ah}}{b{Cdc}}}fMh}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMj}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{MlAn}{AnAn}{h{{Af{{`{Mn}}Ad}}}}{{{b{Ef}}}B`}{{jccN`}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Nbj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNd}{{jIj}j}:;;:;;{{Nbc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nf{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nb{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nh}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNjB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNb}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Nl{{b{j}}}}}}}f}{{j{b{Cd{Nl{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Nn{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nb{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jO`}j}{{jjO`}j}9{{jOb{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}Hl}j}`{Alj}{Anj}{jj}00{{jOd}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Of}j}{{jIhc}j{{Ch{{b{Cd{Oj{Oh}}}}}{{Bj{{Bl{Ij}}}}}}C`CbOl}}{{jOf}j}{{jjOn}j}101010{{jO`IjOf}j}{{jjO`IjOn}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLd}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@`}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@b}{{{b{j}}c}AfA@b}{{{b{G`}}c}AfA@b}{{{b{Ef}}c}AfA@b}{{{b{{Bf{Bh}}}}c}AfA@b}{{{b{{Bf{{Ab{En}}}}}}c}AfA@b}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@b}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@b}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@b}{{{b{Gb}}c}AfA@b}{{{b{Gd}}c}AfA@b}{{{b{Gf}}c}AfA@b}{{{b{Gh}}c}AfA@b}{{{b{Gj}}c}AfA@b}{{{b{Gl}}c}AfA@b}{{{b{Cj}}c}AfA@b}{{{b{Hb}}c}AfA@b}{{{b{Hd}}c}AfA@b}{{{b{Hf}}c}AfA@b}{{{b{Hh}}c}AfA@b}{{{b{Hj}}c}AfA@b}{{{b{Hl}}c}AfA@b}{{{b{Hn}}c}AfA@b}{{{b{Ah}}c}AfA@b}{{Anc}j{{Aj{j}}}}0{{jA@d}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@f}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nb{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{Anj}j}{{j{Bl{Ih}}}j}44{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{Md}}Mf}{{Af{DfAd}}}}<{Nbj}{bc{}}00000000000000000000000000<{{{b{Dd}}}{{Af{DfAd}}}}{bM`}00000000{{Al{Bl{{Ab{Bn}}}}}j}{{AnA@h{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nf{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nf{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nf{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@jA@l}}}}00000000{bA@n}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bA@n}3``{{Jlj{Ej{B`}}{Dn{El}}AA`}j}{Jlj}=<{{JlJb}j}1{{JljJb}j}{{Jln}j}333=<;3:3983333333333{{Jlj}j}44{{Jl{Bl{n}}jAAb}j}15{{Jl{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAd}}}AAd}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAd}}}Jf}{Ihf}{{{b{AAd}}{b{AAd}}}B`}{{{b{AAd}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAd}}{b{Cdc}}}fMh}{{}Ih}{{}c{}}{{{b{AAd}}c}AfA@b}{bc{}}{bM`}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@jA@l}}}}{bA@n}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAf}}}AAf}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAf}}}Jf}{Ihf}{{{b{AAf}}{b{AAf}}}B`}{{{b{AAf}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAf}}{b{Cdc}}}fMh}{{}Ih}{{}c{}}{{{b{AAf}}c}AfA@b}{bc{}}{bM`}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@jA@l}}}}{bA@n}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{b{b{c}}}B`{}}00{{{b{AAh}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMh}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@b}{bc{}}{bM`}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@jA@l}}}}{bA@n}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AAl{{Dn{AAj}}}}}{{AB`{}{{I`{AAn}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABb}{{AAl{AAn}}}{{Bb{{A`{AAn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jO`}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nj}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABd}}AAj}{{Af{AAjAd}}}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABd}}}Jf}{Ihf}00{{{b{ABd}}{b{ABd}}}B`}{{b{b{c}}}B`{}}00{{{b{ABd}}{b{CdKf}}}{{Af{fKh}}}}{cc{}}0{{{ABh{ABf}}}ABd}1{{{b{ABj}}{b{Md}}Mf{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nj}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABh{ABf}}{Bl{Cn}}B`B`}Nj}{{{Bl{Cn}}}ABj}{{{b{ABd}}c}AfA@b}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nj}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABj}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bA@n}00999`{{A@fB`}j}{A@fj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@fjB`}j}{{A@fj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@fjIh}j}4{{A@f{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@f{b{E`}}B`}j}{{A@f{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@fIhABl}j}0{{A@fjjB`}j}0{{A@fjjB`Cl}j}{A@fj}{{A@fjj}j}?;;?;??????{{A@fCnHdj}j}{{A@fj}j}{{A@fHd}j}{{A@f{Bl{Jb}}{Bl{n}}Hdj}j}{{A@fIh}j}{{A@fjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bA@n}{{}c{}}8`````````````````````````````````{{bd}f}00000000{{AAnc}{{AAl{AAj}}}{{Bn{ABn{b{Cd{ACb{AC`}}}}{b{Cd{ACb{ACd}}}}}{{Bj{{AAl{f}}}}}}}}{{AAnB`}AAn}{{ACfc}AAn{{Bb{{A`{j}}}}}}{{}ACh}{{ACjB`}ACj}{{{Ab{ACl}}ACn}{{AAl{AAn}}}}{{AAnAAncc}AAn{{Aj{j}}}}{{ACfcAD`}AAn{{Bn{AAj}{{Bj{{AAl{AAj}}}}}}C`Cb}}{{AChACh}ACh}{{{b{CdACh}}ACh}f}10{{{b{ACh}}}Ld}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{AAnADbcDb}AAn{{Bb{{A`{j}}}}}}{AAnAAn}``{{{b{ADd}}}f}{{AAn{ADf{{b{E`}}Cn}}B`}AAn}{{AAnCnB`}AAn}{{{b{ADd}}}ADd}{{{b{AAn}}}AAn}{{{b{ACf}}}ACf}{{{b{ACn}}}ACn}{{{b{ADh}}}ADh}{{{b{ADj}}}ADj}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{ACh}}}ACh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AE`}}}{{Bl{{b{AEb}}}}}}0{{{b{ADh}}}{{Bl{{b{AEb}}}}}}{{{b{ADl}}}{{Bl{{b{AEb}}}}}}``{{ACjAEd}ACj}{AAn{{AAl{AAj}}}}{AAn{{AAl{ADd}}}}{{{b{CdAAn}}}{{AAl{AD`}}}}{AChACh}{{{b{AE`}}{Dn{AAn}}}{{AAl{AAn}}}}0{{{b{ADh}}{Dn{AAn}}}{{AAl{AAn}}}}{{{b{ACh}}ACh}B`}{AAnAAn}{{AAnAAn{Bl{n}}}AAn}{{}AAn}{{}ACn}{{}ADj}{{}ADn}{{}ACh}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{AAn}}}{{AAl{M`}}}}000{{AChACh}ACh}{Ihf}0{{{b{CdADd}}}f}{{AAne}AAn{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}222222220{{AAn{Bl{{Dn{j}}}}}AAn}8{{{b{AAn}}B`}{{AAl{M`}}}}{{AAne}AAn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACh}}c}f{{Ib{}{{I`{ACh}}}}}}{{{b{ADd}}}{{Bl{{AAl{AAj}}}}}}{{AAnIh}{{AAl{AAj}}}}{{{b{ADd}}}{{AAl{AAj}}}}{{AAnc}AAn{{Aj{j}}}}0{{AAnj}AAn}{ACjAAn}{AE`{{AAl{AAn}}}}0{ADh{{AAl{AAn}}}}{ADl{{AAl{AAn}}}}210{AAnAAn}{{{b{ACh}}{b{CdKf}}}{{Af{fKh}}}}0000{{ACjB`}ACj}{cc{}}0{ACfAAn}{JhAAn}22222222{Ld{{Bl{ACh}}}}{LdACh}00{cACh{{Ib{}{{I`{ACh}}}}}}{{{b{E`}}}{{Bl{ACh}}}}{{AAnAAncc}AAn{{Aj{j}}}}{{{b{AAn}}}ACh}{{{b{AE`}}}B`}0{{{b{ADh}}}B`}`{{AAne}ACf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{AAnjcAEf}ACf{{Bb{{A`{j}}}}}}1{{ACf{Bl{Ih}}}AAn}``{{ACjAEh}ACj}```{{}Ih}0000000008{{{b{CdACh}}ACh}f}{{AChACh}ACh}{{{b{ACh}}ACh}B`}{{}c{}}000000000{ACh}{{{b{ACh}}}B`}0{{{b{ACh}}}{{AEj{ACh}}}}{{{b{ACh}}}{{AEl{ACh}}}}{{AAnAAnccAEn}AAn{{Bb{{A`{j}}}}}}{AAnACj}{{ACjB`}ACj}{AAnAAn}{AF`AAn}1{{AAnAAncc}AAn{{Aj{j}}}}{{ACjc}ACj{{Bb{{A`{j}}}}}}{{AAnADb}AAn}``{{ADlB`}ADl}`{{AAncAFb{Bl{{Ab{Kj}}}}{Bl{{b{E`}}}}}AAn{{Bn{AAj}{{Bj{{AAl{AAj}}}}}}C`Cb}}{{AAnABdAFb{Bl{AD`}}B`}AAn}777`{{AAnAAnc}{{AAl{AAn}}}{{Aj{n}}}}8{{{b{AE`}}}{{Bl{Ih}}}}{{{b{ADh}}}{{Bl{Ih}}}}{{{b{ADl}}}{{Bl{Ih}}}}````={cADh{{Bb{AFd}}}}{cADl{{Bb{AFd}}}}{{{Ab{{Dn{AFf}}}}}ADh}{{{Ab{{Dn{AFf}}}}}ADl}{AChACh}{AAnAAn}>{{AAn{b{Cd{ACb{AC`}}}}{b{Cd{ACb{ACd}}}}}{{AAl{ABn}}}}`{{{b{AE`}}}{{b{{A`{AFf}}}}}}{{{b{ADh}}}{{b{{A`{AFf}}}}}}{{{b{ADl}}}{{b{{A`{AFf}}}}}}`{AAn{{AAl{{Nn{AAjAAj}}}}}}{{AAnjO`}AAn}{{{b{AE`}}}B`}{{{b{ADh}}}B`}{{{b{ADl}}}B`}``{{{b{CdACh}}ACh}f}{{AAnei}AAn{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}};{{ACjc}ACj{{Bb{{A`{j}}}}}}{{AAnjcOd}ACf{{Bb{{A`{j}}}}}}{{{b{AE`}}}{{Bl{{b{AFh}}}}}}{{{b{ADh}}}{{Bl{{b{AFh}}}}}}{{{b{ADl}}}{{Bl{{b{AFh}}}}}}```{{MdAFjB`}AAn}{{cADj}{{AAl{AAn}}}{{Bb{AFd}}}}{{{Ab{{Dn{AFf}}}}ADj}{{AAl{AAn}}}}{{cADn}{{AAl{AAn}}}{{Bb{AFd}}}}{{{Ab{{Dn{AFf}}}}ADn}{{AAl{AAn}}}}`{{}ACh}{{{b{CdAAn}}{b{Cd{ACb{AC`}}}}{b{Cd{ACb{ACd}}}}}{{AAl{AD`}}}}{{AAnc}AAn{{Bb{{A`{j}}}}}}0{{AAnAAncc}AAn{{Aj{j}}}}{{{b{CdACh}}AChB`}f}{{{b{AAn}}{ACb{AC`}}{ACb{ACd}}}f}{{AAnc}AAn{{Aj{j}}}}{{AAnce}AAn{{Aj{j}}}{{Aj{j}}}}{{AAncAFl}{{AAl{f}}}{{Bb{AFd}}}}{{AAncAFn}{{AAl{f}}}{{Bb{AFd}}}}{{AAnM`{Bl{AEb}}AFn}{{AAl{f}}}}{{AAncAG`}{{AAl{f}}}{{Bb{AFd}}}}{{AAncAGb}{{AAl{f}}}{{Bb{AFd}}}}{{AAnM`{Bl{AEb}}AGb}{{AAl{f}}}}`{{AAnClADb}AAn}{{AAncDb}AAn{{Il{n}}}}{{AAncDb}AAn{{Bb{{A`{j}}}}}}{{AAnId}AAn}{{AChACh}ACh}{{{b{CdACh}}ACh}f}{{ACjc}ACj{{Aj{n}}}}{AAnAAn}3{{AAnADb}AAn}{{ACf{Bl{Ih}}}AAn}{AAn{{AAl{AGd}}}}0{{{b{AAn}}B`}{{AAl{M`}}}}{bc{}}000000007{{AAnADbcDb}AAn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bA@n}000000000<{{AAn{Bl{{Dn{M`}}}}AGf}AAn}{{AAn{Bl{e}}AGf}AAn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{AAn{Bl{{Dn{n}}}}AGf}AAn}1{{AAne}AAn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{AAnHn}AAn}`{{ACjAGh}ACj}{{AAnId}AAn}{{}c{}}000000000{{ACjAAn}ACj}{{ADl{Bl{AGj}}}ADl}{{ADhB`}ADh}{{ADh{Bl{AEb}}}ADh}{{ADl{Bl{AEb}}}ADl}{{AAnB`}AAn}{{AAnj}AAn}{{AAnc}AAn{{Bb{{A`{j}}}}}}022{{ADh{Bl{n}}}ADh}{{AAnc}AAn{{Bb{{A`{AAn}}}}}}7{{ADh{Bl{AD`}}}ADh}{{ADhAGl}ADh}{{ADhId}ADh}:::{{ADlB`}ADl}5{{ADl{Bl{n}}}ADl}{{ADh{Bl{Ih}}}ADh}>=={{AE`c}AE`{{Aj{{Bl{Ih}}}}}}{{ADhc}ADh{{Aj{{Bl{Ih}}}}}}2{{ADl{Bl{Ih}}}ADl}{{ADlc}ADl{{Aj{{Bl{Ih}}}}}}>{{ADh{Bl{AGn}}}ADh}{{AAnACh}AAn}{{AE`{Ab{{Dn{AFf}}}}}AE`}{{ADh{Ab{{Dn{AFf}}}}}ADh}{{ADl{Ab{{Dn{AFf}}}}}ADl}{{AAnB`}AAn}0{{ADh{Bl{Id}}}ADh}{{ADhB`}ADh}{{AE`B`}AE`}1?3{{AE`c}AE`{{Aj{{Bl{AFh}}}}}}{{AAnc{Bl{ADb}}}AAn{{Aj{n}}}}{{ADhc}ADh{{Aj{{Bl{AFh}}}}}}{{ADh{Bl{AFh}}}ADh}{{ADlc}ADl{{Aj{{Bl{AFh}}}}}}{{ADl{Bl{AFh}}}ADl}{{ADh{Bl{AD`}}}ADh}{{ADl{Bl{AD`}}}ADl}{{ADhc}{{AAl{ADh}}}{{Bn{Md}{{Bj{{AAl{Md}}}}}}}}1{{ADhId}ADh}={{ADhIh}ADh}0>><<>{AAnAAn}{{{b{AAj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AAl{AAj}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AH`}}}}}{{Af{ClAd}}}}00{{{b{ACl}}}B`}00{{{b{ACl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEf}}}AEf}{{{b{Od}}}Od}{{{b{In}}}In}{{{b{AEn}}}AEn}{{{b{AEh}}}AEh}{{{b{AGh}}}AGh}{{{b{AFl}}}AFl}{{{b{AHb}}}AHb}{{{b{Ob}}}Ob}{{{b{AFn}}}AFn}{{{b{AG`}}}AG`}{{{b{AGb}}}AGb}{{{b{AHd}}}AHd}{{{b{AHf}}}AHf}{{{b{ABb}}}ABb}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AHh}`{{b{b{c}}}AHh{}}``{{{b{Jh}}}{{Af{{Ab{Md}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEf}{{}Od}{{}AEn}{{}AGh}{{}AFl}{{}Ob}{{}AFn}{{}AG`}{{}AGb}{{}AHf}{{}ABb}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{M`Ad}}}}0{c{{Af{AEf}}}Jf}{c{{Af{Od}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AEn}}}Jf}{c{{Af{AEh}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AFl}}}Jf}{c{{Af{AHb}}}Jf}{c{{Af{Ob}}}Jf}{c{{Af{AFn}}}Jf}{c{{Af{AG`}}}Jf}{c{{Af{AGb}}}Jf}{c{{Af{AHd}}}Jf}{c{{Af{AHf}}}Jf}{c{{Af{ABb}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{Mn}}Ad}}}}{Ihf}00000000000000000{{{b{AEf}}{b{AEf}}}B`}{{{b{Od}}{b{Od}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AEn}}{b{AEn}}}B`}{{{b{AEh}}{b{AEh}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AFl}}{b{AFl}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{Ob}}{b{Ob}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AG`}}{b{AG`}}}B`}{{{b{AGb}}{b{AGb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{ABb}}{b{ABb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEf}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Od}}{b{CdKf}}}{{Af{fKh}}}}{{{b{In}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{ACl}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AEn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AEh}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{AGh}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{AFl}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Ob}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AFn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AG`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AGb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHd}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHf}}{b{CdKf}}}{{Af{fKh}}}}{{{b{ABb}}{b{CdKf}}}{{Af{fKh}}}}`{cc{}}0000{AEhAEn}1111111111111`{{{b{AHd}}}Cn}{{{b{AHj}}{Dn{Bh}}{b{AEf}}}{{Af{{Nn{Bh{Dn{Bh}}AHl}}Ad}}}}{{{b{AEf}}{b{Cdc}}}fMh}{{{b{Od}}{b{Cdc}}}fMh}{{{b{In}}{b{Cdc}}}fMh}{{{b{AEn}}{b{Cdc}}}fMh}{{{b{AEh}}{b{Cdc}}}fMh}{{{b{AGh}}{b{Cdc}}}fMh}{{{b{AFl}}{b{Cdc}}}fMh}{{{b{AHb}}{b{Cdc}}}fMh}{{{b{Ob}}{b{Cdc}}}fMh}{{{b{AFn}}{b{Cdc}}}fMh}{{{b{AG`}}{b{Cdc}}}fMh}{{{b{AGb}}{b{Cdc}}}fMh}{{{b{AHd}}{b{Cdc}}}fMh}{{{b{AHf}}{b{Cdc}}}fMh}{{{b{ABb}}{b{Cdc}}}fMh}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEh}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}{{{b{AGh}}{b{AEh}}}{{Af{fAd}}}}1``{Ndj}{Inj}{AHnj}{AHdj}````{AHdAHd}`{{{b{In}}}Cl}7{{InCl}In}`1{{{b{AGh}}}B`}{In}:{ClIn}{AEhAEn}{{{b{ACl}}AI`}{{Af{{Bl{AAj}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AHh}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AHj}}{Dn{Bh}}{b{Od}}}{{Af{{Nn{Bh{Dn{Bh}}AHl}}Ad}}}}`{{{b{ACl}}AI`}{{Af{AAjAd}}}}{{{b{ACl}}{Bl{Ih}}}{{Af{{Ab{Md}}Ad}}}}`{{{b{AEf}}c}AfA@b}{{{b{Od}}c}AfA@b}{{{b{In}}c}AfA@b}{{{b{AEn}}c}AfA@b}{{{b{AEh}}c}AfA@b}{{{b{AGh}}c}AfA@b}{{{b{AFl}}c}AfA@b}{{{b{AHb}}c}AfA@b}{{{b{Ob}}c}AfA@b}{{{b{AFn}}c}AfA@b}{{{b{AG`}}c}AfA@b}{{{b{AGb}}c}AfA@b}{{{b{AHd}}c}AfA@b}{{{b{AHf}}c}AfA@b}{{{b{ABb}}c}AfA@b}{{{b{Jh}}c}AfA@b}`{{{b{AEn}}}B`}````{{{b{AEn}}}{{b{n}}}}`{Jh{{Af{AGdAd}}}}{{{b{AHd}}}{{Bl{AIb}}}}{bc{}}000000000000000{bM`}00`{{{b{AFn}}c}{{AId{c}}}AIf}{{{b{AGb}}c}{{AIh{c}}}AIf}{{{b{In}}Cl{Bl{{b{AH`}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AIj}}}}}{{Bn{AIj}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AH`}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}0000000000000{AIb{{Af{AHdAd}}}}1111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@jA@l}}}}00{bA@n}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AEnAEd}AEn}`{{AEn{Bl{n}}}AEn}{{{b{AFn}}AAjc}{{Af{fAd}}}AIf}{{{b{AGb}}AAjc}{{Af{fAd}}}AIf}``````````````````````````````````````````````````````````","D":"GIh","p":[[1,"reference"],[5,"Private",3574],[1,"unit"],[5,"MetaNameSpace",5,3575],[6,"Expr",5,3576],[5,"StructNameSpace",5,3577],[5,"PlSmallStr",3578],[1,"slice"],[5,"Arc",3579],[6,"PolarsError",3580],[6,"Result",3581],[6,"Selector",5,3582],[10,"Into",3583],[5,"ArrayNameSpace",5,3584],[5,"ListNameSpace",5,3585],[1,"bool"],[10,"AsRef",3583],[10,"FunctionOutputField",5,3586],[5,"SpecialEq",5,3586],[5,"Series",3587],[17,"Output"],[6,"Option",3588],[10,"Fn",3589],[10,"Send",3590],[10,"Sync",3590],[0,"mut"],[6,"VisitRecursion",3591],[10,"FnMut",3589],[6,"FunctionExpr",5,3592],[1,"i64"],[6,"DataType",3593],[5,"SortOptions",3594],[5,"SortMultipleOptions",3594],[5,"FieldsMapper",5,3595],[5,"Field",3596],[10,"SeriesUdf",5,3586],[10,"Any",3597],[6,"AggExpr",5,3576],[5,"Vec",3598],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1730,3599],[6,"Operator",5,3576],[10,"Clone",3600],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3586],[5,"UserDefinedFunction",5,3601],[10,"SeriesBinaryUdf",5,3586],[6,"CastOptions",3602],[5,"CategoricalNameSpace",5,3603],[5,"When",5,3604],[5,"Then",5,3604],[5,"ChainedWhen",5,3604],[5,"ChainedThen",5,3604],[6,"Excluded",5,3576],[6,"BooleanFunction",5,3605],[6,"CategoricalFunction",5,3606],[6,"TemporalFunction",5,3607],[6,"PowFunction",5,3608],[6,"StringFunction",5,3609],[6,"StructFunction",5,3610],[5,"DatetimeArgs",5,3611],[5,"DurationArgs",5,3611],[5,"RollingCovOptions",5,3612],[5,"StrptimeOptions",5,3612],[5,"JoinOptions",5,3612],[6,"WindowType",5,3612],[6,"WindowMapping",5,3612],[6,"NestedType",5,3612],[5,"UnpivotArgsDSL",5,3612],[17,"Item"],[10,"IntoIterator",3613],[1,"u8"],[10,"ExprEvalExtension",5,3614],[1,"usize"],[1,"f64"],[10,"IntoVec",3615],[5,"Duration",2896,3616],[6,"ClosedWindow",3617],[6,"TimeUnit",3618],[10,"BinaryUdfOutputField",5,3586],[10,"Deserializer",3619],[6,"DslPlan",2896,3620],[6,"NullBehavior",3621],[5,"DateLikeNameSpace",1752,3622],[10,"Sized",3590],[10,"ListNameSpaceExtension",5,3623],[5,"EWMOptions",3624],[6,"FillNullStrategy",3625],[5,"Formatter",3626],[5,"Error",3626],[10,"UdfSchema",5,3627],[1,"u16"],[1,"f32"],[1,"i8"],[1,"i16"],[1,"u32"],[6,"RangeFunction",3628],[6,"ArrayFunction",3629],[6,"BusinessFunction",3630],[6,"ListFunction",3631],[6,"BinaryFunction",3632],[5,"String",3633],[5,"FunctionOptions",3634],[5,"Schema",3635],[6,"Context",3620],[10,"Hasher",3636],[6,"InterpolationMethod",3637],[10,"IntoListNameSpace",5,3623],[10,"Display",3626],[6,"ClosedInterval",3638],[5,"ExprNameNameSpace",5,3639],[10,"Literal",2896,3640],[10,"FnOnce",3589],[5,"SuperTypeOptions",3641],[5,"PythonUdfExpression",2287,3642],[5,"UnitVec",3643],[1,"tuple"],[6,"QuantileInterpolOptions",3644],[5,"RankOptions",2896,3645],[5,"RollingGroupOptions",2896,3646],[5,"RollingOptionsFixedWindow",3647],[5,"Float64Type",3648],[5,"ChunkedArray",3649],[10,"Copy",3590],[5,"RollingOptionsDynamicWindow",3650],[6,"SearchSortedSide",3651],[10,"Serializer",3652],[6,"IsSorted",3653],[5,"StringNameSpace",2349,3654],[6,"ListToStructWidthStrategy",3655],[5,"CompactString",3656],[6,"ToCompactStringError",3656],[5,"TypeId",3597],[6,"Roll",3657],[6,"NonExistent",3658],[6,"RollingFunction",2101,3659],[6,"RollingFunctionBy",2135,3660],[6,"TrigonometricFunction",2168,3661],[5,"DataFrame",3662],[8,"PolarsResult",3580],[5,"LazyFrame",2416],[10,"IntoParallelIterator",3663],[5,"UnionArgs",2896,3634],[5,"PythonFunction",2287,3642],[5,"PyAny",3664],[5,"Py",3665],[5,"PythonGetOutput",2287,3642],[1,"char"],[5,"Node",3666],[6,"IR",3667],[5,"Arena",3666],[6,"AExpr",3668],[5,"LazyGroupBy",2416],[5,"OptFlags",2416,3669],[5,"JoinBuilder",2416],[10,"AnonymousScan",2896,3670],[5,"ScanArgsAnonymous",2416,3671],[8,"SchemaRef",3635],[8,"IdxSize",3672],[5,"InProcessQuery",2416,3673],[8,"PlHashMap",3674],[5,"LazyCsvReader",2416,3675],[5,"ScanArgsIpc",2416,3676],[5,"LazyJsonLineReader",2416,3677],[5,"ScanArgsParquet",2416,3678],[10,"LazyFileListReader",2416,3679],[5,"CloudOptions",3680],[6,"JoinCoalesce",3681],[5,"DynamicGroupOptions",2896,3646],[6,"JoinType",2896,3681],[5,"Iter",3682],[5,"IterNames",3682],[5,"JoinArgs",2896,3681],[10,"IntoLazy",2416],[8,"AllowedOptimizations",2416,3669],[5,"Path",3683],[5,"PathBuf",3683],[5,"RowIndex",3684],[8,"PyObject",3665],[5,"CsvWriterOptions",2896,3685],[5,"IpcWriterOptions",2896,3686],[5,"JsonWriterOptions",2896,3687],[5,"ParquetWriteOptions",2896,3688],[5,"IRPlan",3667],[6,"UniqueKeepStrategy",3662],[6,"JoinValidation",2896,3681],[8,"NonZeroUsize",3689],[6,"CsvEncoding",3690],[6,"NullValues",3690],[6,"Tz",3691],[6,"RankMethod",2896,3645],[6,"LiteralValue",2896,3640],[5,"AnonymousScanOptions",2896,3634],[6,"Ordering",3692],[10,"PolarsTemporalGroupby",2896,3646],[6,"GroupsProxy",3693],[5,"Null",2896,3640],[5,"AnonymousScanArgs",2896,3670],[6,"AnyValue",3694],[5,"IpcWriter",3686],[10,"Write",3695],[5,"ParquetWriter",3696],[5,"NaiveDateTime",3697],[15,"Quantile",1618],[15,"Min",1618],[15,"Max",1618],[15,"IsBetween",2025],[15,"Any",2025],[15,"All",2025],[15,"SortBy",1628],[15,"Filter",1628],[15,"Cast",1628],[15,"Sort",1628],[15,"Gather",1628],[15,"RenameAlias",1628],[15,"Ternary",1628],[15,"Function",1628],[15,"Window",1628],[15,"AnonymousFunction",1628],[15,"Slice",1628],[15,"BinaryExpr",1628],[15,"QCut",2028],[15,"Entropy",2028],[15,"Log",2028],[15,"Hist",2028],[15,"Cut",2028],[15,"Correlation",2028],[15,"Round",2028],[15,"TopK",2028],[15,"TopKBy",2028],[15,"RoundSF",2028],[15,"EwmMeanBy",2028],[15,"Clip",2028],[15,"BackwardFill",2028],[15,"ForwardFill",2028],[15,"Random",2028],[15,"GatherEvery",2028],[15,"ValueCounts",2028],[15,"Rank",2028],[15,"EwmMean",2028],[15,"EwmStd",2028],[15,"EwmVar",2028],[15,"ReplaceStrict",2028],[15,"CumCount",2028],[15,"CumSum",2028],[15,"CumProd",2028],[15,"CumMin",2028],[15,"CumMax",2028],[15,"ConcatHorizontal",2073],[15,"ConcatVertical",2073],[15,"ExtractGroups",2073],[15,"JsonDecode",2073],[15,"PadStart",2073],[15,"PadEnd",2073],[15,"SplitExact",2073],[15,"Contains",2073],[15,"Find",2073],[15,"Replace",2073],[15,"DatetimeFunction",2093],[15,"GroupBy",3516],[15,"Union",3516],[15,"Sort",3516],[15,"Cache",3516],[15,"ExtContext",3516],[15,"DataFrameScan",3516],[15,"IR",3516],[15,"Select",3516],[15,"HStack",3516],[15,"Scan",3516],[15,"MapFunction",3516],[15,"Filter",3516],[15,"Distinct",3516],[15,"Slice",3516],[15,"Sink",3516],[15,"Join",3516],[15,"HConcat",3516],[15,"PythonScan",3516],[15,"Range",3571]],"r":[[8,3576],[22,3584],[31,3586],[33,3605],[38,3606],[39,3603],[43,3604],[44,3604],[67,3611],[77,3611],[87,3576],[92,3576],[93,3614],[94,3639],[102,3595],[103,3639],[113,3592],[114,3586],[120,3586],[135,3623],[151,3612],[163,3585],[164,3623],[179,3575],[198,3612],[205,3576],[216,3608],[228,3586],[239,3612],[248,3582],[250,3586],[251,3586],[262,3586],[270,3609],[277,3612],[279,3610],[280,3577],[288,3607],[290,3604],[310,3627],[313,3612],[316,3601],[321,3604],[324,3612],[325,3612],[369,3698],[373,3699],[380,3699],[383,3700],[387,3701],[389,3702],[404,3703],[406,3703],[412,3704],[413,3705],[415,3701],[417,3604],[490,3706],[497,3705],[500,3701],[588,3699],[589,3698],[590,3698],[591,3707],[592,3707],[593,3707],[602,3708],[604,3699],[608,3699],[613,3702],[614,3611],[615,3702],[616,3702],[766,3701],[768,3698],[769,3698],[770,3611],[865,3701],[907,3699],[910,3707],[981,3701],[1027,3698],[1063,3702],[1064,3702],[1117,3705],[1119,3705],[1129,3701],[1132,3701],[1136,3640],[1146,3700],[1157,3701],[1160,3701],[1167,3705],[1171,3699],[1172,3705],[1175,3699],[1176,3705],[1184,3705],[1188,3699],[1215,3705],[1217,3701],[1230,3708],[1237,3701],[1240,3705],[1244,3699],[1248,3709],[1261,3708],[1262,3708],[1339,3708],[1347,3701],[1353,3705],[1357,3699],[1363,3604],[1366,3702],[1535,3701],[1587,3604],[1730,3599],[1751,3603],[1752,3622],[1825,3605],[1829,3606],[1876,3592],[1938,3608],[1977,3609],[1985,3610],[1990,3607],[2020,3592],[2021,3592],[2022,3592],[2023,3592],[2024,3592],[2095,3606],[2099,3608],[2105,3659],[2139,3660],[2183,3661],[2212,3611],[2213,3611],[2214,3698],[2215,3699],[2217,3699],[2218,3700],[2219,3702],[2220,3703],[2221,3703],[2222,3704],[2223,3705],[2224,3705],[2225,3699],[2226,3698],[2228,3698],[2230,3707],[2233,3707],[2234,3707],[2235,3708],[2236,3699],[2237,3699],[2238,3702],[2239,3702],[2240,3611],[2241,3702],[2242,3702],[2245,3698],[2246,3698],[2247,3611],[2248,3699],[2249,3707],[2252,3698],[2253,3702],[2254,3702],[2255,3705],[2256,3705],[2257,3700],[2258,3705],[2259,3705],[2260,3705],[2264,3705],[2269,3705],[2270,3708],[2271,3705],[2272,3699],[2273,3709],[2274,3708],[2275,3708],[2278,3708],[2279,3705],[2280,3702],[2281,3702],[2287,3642],[2288,3642],[2289,3642],[2290,3642],[2291,3642],[2349,3654],[2410,3601],[2416,3669],[2423,3673],[2426,3675],[2427,3679],[2430,3677],[2432,3669],[2439,3671],[2440,3676],[2441,3678],[2896,3670],[2897,3670],[2898,3634],[2906,3685],[2913,3620],[2914,3616],[2916,3646],[2933,3686],[2935,3681],[2936,3681],[2937,3681],[2938,3687],[2940,3640],[2941,3640],[2947,3640],[2948,3640],[2953,3688],[2954,3646],[2957,3645],[2958,3645],[2960,3646],[2976,3634],[3373,3710]],"b":[[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[623,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[773,"impl-PartialEq-for-Expr"],[774,"impl-Expr"],[777,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[778,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[876,"impl-Display-for-Expr"],[877,"impl-Debug-for-Expr"],[879,"impl-Display-for-Operator"],[880,"impl-Debug-for-Operator"],[882,"impl-Debug-for-BooleanFunction"],[883,"impl-Display-for-BooleanFunction"],[884,"impl-Debug-for-CategoricalFunction"],[885,"impl-Display-for-CategoricalFunction"],[886,"impl-Display-for-TemporalFunction"],[887,"impl-Debug-for-TemporalFunction"],[888,"impl-Display-for-PowFunction"],[889,"impl-Debug-for-PowFunction"],[890,"impl-Debug-for-StringFunction"],[891,"impl-Display-for-StringFunction"],[892,"impl-Debug-for-StructFunction"],[893,"impl-Display-for-StructFunction"],[894,"impl-Debug-for-FunctionExpr"],[895,"impl-Display-for-FunctionExpr"],[924,"impl-From%3Cu16%3E-for-Expr"],[925,"impl-From%3Cbool%3E-for-Expr"],[926,"impl-From%3Cf64%3E-for-Expr"],[927,"impl-From%3Cf32%3E-for-Expr"],[928,"impl-From%3Ci8%3E-for-Expr"],[929,"impl-From%3Ci16%3E-for-Expr"],[931,"impl-From%3C%26str%3E-for-Expr"],[932,"impl-From%3Ci32%3E-for-Expr"],[933,"impl-From%3Ci64%3E-for-Expr"],[934,"impl-From%3CAggExpr%3E-for-Expr"],[935,"impl-From%3Cu8%3E-for-Expr"],[936,"impl-From%3Cu32%3E-for-Expr"],[937,"impl-From%3Cu64%3E-for-Expr"],[940,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[941,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[942,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[943,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[944,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[945,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[946,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[947,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[948,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[949,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[951,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[958,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[959,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[961,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[962,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[973,"impl-From%3CPlSmallStr%3E-for-Selector"],[974,"impl-From%3CString%3E-for-Selector"],[975,"impl-From%3C%26str%3E-for-Selector"],[976,"impl-From%3CExpr%3E-for-Selector"],[1001,"impl-Expr"],[1002,"impl-Hash-for-Expr"],[1299,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1300,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1303,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[2121,"impl-Display-for-RollingFunction"],[2122,"impl-Debug-for-RollingFunction"],[2154,"impl-Display-for-RollingFunctionBy"],[2155,"impl-Debug-for-RollingFunctionBy"],[2198,"impl-Display-for-TrigonometricFunction"],[2199,"impl-Debug-for-TrigonometricFunction"],[2464,"impl-OptFlags"],[2465,"impl-Flags-for-OptFlags"],[2602,"impl-Debug-for-OptFlags"],[2603,"impl-Octal-for-OptFlags"],[2604,"impl-LowerHex-for-OptFlags"],[2605,"impl-UpperHex-for-OptFlags"],[2606,"impl-Binary-for-OptFlags"],[2610,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2611,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2621,"impl-Flags-for-OptFlags"],[2622,"impl-OptFlags"],[2856,"impl-LazyFileListReader-for-LazyCsvReader"],[2857,"impl-LazyCsvReader"],[2858,"impl-LazyJsonLineReader"],[2859,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2876,"impl-LazyFileListReader-for-LazyCsvReader"],[2877,"impl-LazyCsvReader"],[2878,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2879,"impl-LazyJsonLineReader"],[3237,"impl-Display-for-Duration"],[3238,"impl-Debug-for-Duration"],[3241,"impl-Debug-for-JoinType"],[3242,"impl-Display-for-JoinType"],[3243,"impl-Debug-for-JoinValidation"],[3244,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACoKAgEEABIAGAAPACkAAgAuABUARQAIAE8ABwBYAAMAXgAAAGAAGQB7ABsAmAADAJ0ABgClAA4AtQAVAMwABADSACcA/QAJAAgBEAAaAQcAJAEYAD4BAwBDAQAARQEnAG4BAQB0AQAAdwEBAHsBAACBAQAAgwEAAI4BAACRAQAAmAEBAJsBAQCgAQAAowFFAOsBAADtAQAA7wEBAPUBAAD8AVAAUAIAAGoCDQB5AlwA2AIAANoCIQD9AgAA/wIAAAUDAQAIAxIAHAMyAFcDAABaAwEAYAMAAGYDAABpAyIAjQMAAJ0DBQCkAwYArQMJALgDAAC/AwEAwgMBAMkDAADOAwMA1AMAANYDAADbAwEA4AMFAOkDAADrAxEAAAQBAAMEAAAFBCEATgQCAFIEAQBnBAAAbwQAAHwEAAB/BAUAiAQAAIsEAACbBAAAngQCAKYEAgCqBAMAswQBALcEAgC8BAAAvgQBAMQEAADLBAAAzQQBANQEAADWBAAA3gQBAOQEAADmBAAA6AQAAO0EAgAHBQUADgUZADEFAAA4BQAAPwUAAEQFAABGBQEASQUAAE8FAABUBQAAVgUAAFgFAgBfBRsAfAUJAIoFQwDQBQAA0gUuAAwGAAAOBgAAEAYjADcGAQA8BgAASQYAAE0GAQBSBhMAaAYAAGoGAABsBgEAbwYBAHIGBgB6BkgAxAYDAMkGAgDOBgIA1AYDANwGAQDlBgIA6wYAAO0GAAD6BgAACQcDABEHOgFNCAEAUAgcAG4IAQBxCCcAmggBAJ0IBwCpCAAAtwgAAMQIAQDLCAEA1ggCANoIAwDjCAMA6wgHAPQIGwASCQAAFAkEABwJEQAvCQMANgkCADwJAABBCQIARgkBAGYJAwB4CQMAfwkBAIgJAgCMCQkAmgkAAKIJAAClCRQAuwkBAMAJGgDfCQEA4wkAAOgJAADsCRgACgoCAA4KBwAmCgAAKAoBACsKBAAzCgEAPgoAAEUKAgBNCgEAUAoMAGsKAAB0CgEAeQoBAHwKAAB+CgAAggoBAIgKAwCNCgMAlAoEAJ0KAwCpCgMArgoAALEKAgC1CgAAuAoAAMEKAADNCgEA0AoIANoKHgD7CgAA/QoAAAALAQADCwkADgsAABALAQAZCwEAIgsBACkLAAAsCwEAMQsBAD0LAAA/CwAATwsHAFoLAABdCwEAYAsAAGILAwBoCwAAawsAAG8LAgB2CwAAeAsGAIILAgCGCwAAiQsJAJQLAgCZCwAAmwsAAKELEwC4C1oAFwyLAKQMEwC9DAAAywwAAM0MEQDgDAAA4wwRAAcNAgALDQAADQ0AABANAwAXDQUAHg0BACINAAAlDQIAKQ0BAC0NAAAvDQEANA0VAEsNqwA="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::chunked_array::ops::sort::options"],[305,"polars_core::frame"],[306,"dyn_clone::sealed"],[307,"polars_utils::pl_str"],[308,"polars_ops::frame::join::hash_join"],[309,"polars_ops::frame::join::args"],[310,"polars_ops::frame::join::cross_join"],[311,"core::fmt"],[312,"core::convert"],[313,"core::hash"],[314,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[315,"polars_arrow::array::primitive"],[316,"alloc::string"],[317,"core::result"],[318,"compact_str"],[319,"core::any"],[320,"polars_ops::series::ops::arg_min_max"],[321,"polars_ops::series::ops"],[322,"polars_core::chunked_array::ops::search_sorted"],[323,"polars_ops::series::ops::various"],[324,"polars_ops::frame::join::general"],[325,"polars_ops::series::ops::clip"],[326,"polars_ops::series::ops::horizontal"],[327,"polars_ops::series::ops::index"],[328,"polars_ops::series::ops::negate"],[329,"polars_ops::series::ops::not"],[330,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Cf```Ch``DhDj``00````1``10`Dl0001`Dd321`Db0`00`1432143214321432143241Dn000253`254325432543254322255544433325443322543Eh3654En00044765147656514154`444447656547654765654765444``Gd`00```0G`0Gb22```222``2222Gf0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{Ad}}}}}{{Af{Bd}}}}0{{{d{Bf}}C`Bj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{Ad}}}{{Af{Bd}}}}0{{{d{Bf}}C`Cb}Bd}0{{{d{Bf}}Cd}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Cf}}}{{d{Bl}}}}```{{{d{Ch}}}{{d{Cj}}}}````````````````````````{{dCl}Cn}000{{Cj{d{{l{D`}}}}{d{{l{D`}}}}{Al{D`}}{d{Cj}}}Cj}{{{d{Db}}{d{{l{Ab}}}}BjBj}Cj}0`{{{d{Db}}{d{Cj}}{d{Ad}}{d{Ad}}Dd}{{Af{Cj}}}}0{{{d{Bh}}{d{Bh}}}D`}{d{{d{c}}}{}}000{{{d{Df}}}{{d{Dfc}}}{}}000{{{d{Dd}}}Dd}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{d{d{Dfc}}}Cn{}}000{dCn}000{{{d{Dh}}{d{Dj}}}Bj}`{{{d{Dn}}{d{Cj}}{Al{D`}}{Al{{E`{C`Cb}}}}}{{Af{Cj}}}}0{{{d{Dn}}{d{Cj}}{Al{{E`{C`Cb}}}}Bj}{{Af{{E`{CjCj}}}}}}0{{}Dd}{{}Dh}{{}Dl}{{}Eb}{Cb{{d{c}}}{}}000{Cb{{d{Dfc}}}{}}000{CbCn}000{{{d{Dd}}{d{Dd}}}Bj}{{{d{Dh}}{d{Dh}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Dd}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDd}111{{{d{Eh}}{d{Cj}}ei}{{Af{Cj}}}{{Ej{D`}}}{{An{}{{Aj{c}}}}}{{Ej{D`}}}{{An{}{{Aj{g}}}}}}{{{d{Dd}}{d{Dfc}}}CnEl}{{{d{Dh}}{d{Dfc}}}CnEl}{{{d{Dj}}{d{Dfc}}}CnEl}{{{d{Dl}}{d{Dfc}}}CnEl}{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{F`Bj}}}}}}0{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}Cb}0007{{}c{}}000{{{d{Dj}}}Bj}{{{d{Dl}}{d{Dj}}}{{Af{Cn}}}}{{{d{Eh}}{d{Cj}}eiDd}{{Af{Cj}}}{{Ej{D`}}}{{An{}{{Aj{c}}}}}{{Ej{D`}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dl}}}Bj}={{{d{Cj}}{d{Cj}}Bj}{{Af{Fd}}}}{{{d{Dd}}}Bj}`{{{d{Dd}}}{{d{D`}}}}`{dc{}}000{dFf}0{c{{Fh{e}}}{}{}}000{{}{{Fh{c}}}{}}000{d{{Fh{FjFl}}}}0{dFn}000`{{DdDh}Dd}{{Dd{Al{D`}}}Dd}`````````{{dCl}Cn}{{{d{G`}}}{{Al{Cb}}}}0{{{d{Gb}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Df}}}{{d{Dfc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gd}}}Gd}{{d{d{Dfc}}}Cn{}}{dCn}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}Cb}{{Af{Bn}}}}{{}Gd}{Cb{{d{c}}}{}}{Cb{{d{Dfc}}}{}}{CbCn}{{{d{Gf}}{d{Bh}}}{{Af{Cn}}}}0{{{d{Gd}}{d{Gd}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gd}}{d{DfEd}}}{{Fh{CnGh}}}}{cc{}}{{{d{Gd}}{d{Dfc}}}CnEl}{{}Cb}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gf}}Cd}{{Af{Bj}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{C`D`}{{Af{Ad}}}}2{dc{}}{c{{Fh{e}}}{}{}}{{}{{Fh{c}}}{}}{dFn}{{{d{Gf}}BjBjD`Bj}{{Af{Cj}}}}0","D":"El","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[8,"UInt32Chunked",293],[10,"AsList",25],[8,"ListChunked",293],[10,"ListNameSpaceImpl",25,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[1,"i64"],[1,"usize"],[5,"SortOptions",304],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",305],[5,"Private",306],[1,"unit"],[5,"PlSmallStr",307],[10,"JoinDispatch",80,308],[5,"JoinArgs",80,309],[0,"mut"],[6,"JoinCoalesce",80,309],[6,"JoinType",80,309],[6,"JoinValidation",80,309],[10,"CrossJoin",80,310],[1,"tuple"],[8,"ChunkJoinOptIds",80,309],[5,"Formatter",311],[8,"Result",311],[10,"DataFrameJoinOps",80],[10,"Into",312],[10,"Hasher",313],[10,"SeriesJoin",80,314],[8,"InnerJoinIds",80,309],[5,"PrimitiveArray",315],[8,"LeftJoinIds",80,309],[5,"String",316],[6,"Result",317],[5,"CompactString",318],[6,"ToCompactStringError",318],[5,"TypeId",319],[10,"ArgAgg",240,320],[10,"SeriesSealed",240,321],[6,"SearchSortedSide",240,322],[10,"SeriesMethods",240,323],[5,"Error",311]],"r":[[4,292],[5,294],[6,295],[26,302],[80,309],[81,309],[84,310],[88,309],[89,309],[90,309],[91,308],[93,309],[94,309],[97,309],[103,314],[108,324],[111,324],[114,324],[144,308],[238,80],[239,76],[241,320],[244,322],[245,323],[246,321],[253,325],[254,325],[255,325],[259,326],[260,327],[276,327],[279,326],[280,326],[281,326],[282,328],[283,329],[284,330],[285,326]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAABAM8AAADRACAA8wAFAPsAAgABAQ8AEgEBABgBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMFNNNNNNNNNNNNNNNNNHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","foreign_vec","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","ForeignVec","borrow","borrow_mut","deref","","deref_mut","drop","","fmt","from","","from_foreign","get_vec","init","into","try_from","try_into","type_id","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","MemReader","MemSlice","Mmap","advise","advise_range","as_ref","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","drop","","","fmt","","","from","","","","from_bytes","","from_mmap","","from_reader","from_slice","","from_vec","","init","","","into","","","lock","make_mut","map","new","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","try_into","","","type_id","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[47,"polars_utils::abs_diff"],[51,"polars_utils::aliases"],[69,"polars_utils::arena"],[136,"polars_utils::atomic"],[157,"polars_utils::binary_search"],[159,"polars_utils::cache"],[196,"polars_utils::cell"],[216,"polars_utils::clmul"],[220,"polars_utils::contention_pool"],[235,"polars_utils::cpuid"],[237,"polars_utils::fixedringbuffer"],[260,"polars_utils::float"],[266,"polars_utils::floor_divmod"],[268,"polars_utils::foreign_vec"],[286,"polars_utils::functions"],[290,"polars_utils::hashing"],[323,"polars_utils::idx_vec"],[367,"polars_utils::index"],[431,"polars_utils::io"],[434,"polars_utils::itertools"],[442,"polars_utils::itertools::enumerate_idx"],[468,"polars_utils::mem"],[473,"polars_utils::min_max"],[480,"polars_utils::mmap"],[558,"polars_utils::nulls"],[563,"polars_utils::ord"],[565,"polars_utils::partitioned"],[584,"polars_utils::pl_str"],[643,"polars_utils::priority"],[667,"polars_utils::slice"],[681,"polars_utils::sort"],[683,"polars_utils::sync"],[707,"polars_utils::sys"],[721,"polars_utils::total_ord"],[772,"polars_utils::unwrap"],[774,"polars_utils::vec"],[788,"num_traits"],[789,"core::cmp"],[790,"core::marker"],[791,"core::fmt"],[792,"core::clone"],[793,"core::result"],[794,"serde::de"],[795,"core::option"],[796,"core::hash"],[797,"core::default"],[798,"core::ops::function"],[799,"serde::ser"],[800,"core::any"],[801,"core::borrow"],[802,"alloc::vec"],[803,"alloc::sync"],[804,"core::convert"],[805,"core::ops::range"],[806,"core::iter::traits::collect"],[807,"core::slice::iter"],[808,"polars_error"],[809,"std::path"],[810,"std::io::error"],[811,"std::fs"],[812,"core::iter::traits::iterator"],[813,"core::ops::arith"],[814,"num_traits::cast"],[815,"num_traits::identities"],[816,"core::iter::traits::exact_size"],[817,"core::iter::traits::double_ended"],[818,"memmap2"],[819,"memmap2::advice"],[820,"polars_utils::mmap::private"],[821,"bytes::bytes"],[822,"std::io"],[823,"hashbrown::map"],[824,"std::ffi::os_str"],[825,"compact_str"],[826,"alloc::string"],[827,"alloc::borrow"],[828,"alloc::boxed"],[829,"core::mem::maybe_uninit"],[830,"core::slice::index"],[831,"rayon_core::thread_pool"]],"i":"```````````````````````````````````````````````d`00ABb```````0AdAfABdABf43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000````EdDn100000101010110000100101001001010`Ej000000000000000000`````F`0000000000000```Fb000000000000000000000`Ff0000`Fh`Fj0000000000000000``````Gd000000Gf111111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`0000`Jb000000000000000000000000``````Kd00000```Kf000KjKl210101010122110210210210210010100101021021022200100020110102102102102I`0`00```M`00000000000000000Mh0`00000000000000000000000000000000000000000000000000000000`Nl0000000000000000000000`````NnOb0Of`Oh0Oj0```A@`0000000000000000000000``A@b00000000000AAb````0`A@h0``000000000000000000000000101OlA@j11A@l02213333`AAd```AAh``00AAj`AAlAAn1AB`","f":"`````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{{{Al{Dh}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dj{c}}}}c}AbDl}0``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dn{ce}}}}}{{Dn{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Dn{ce}}}{E`Eb}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ed{ceg}}}}cBl}e{E`EbBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{Dn{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{E`EbEf}{{Eh{c}}E`Eb}{}}{{{Al{Ah{Dn{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{E`EbEf}{{Eh{c}}E`Eb}{}}{{{Al{Ah{Dn{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Eh{c}}E`Eb}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{Dn{ce}}}}ce}{{Al{Ahe}}}{E`Eb}{}}{{}c{}}0{{gAb}{{Ed{ceg}}}{E`EbBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{Dn{ce}}}{E`Eb}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{Dn{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Eh{c}}E`Eb}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{Ej{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{Elc{}}{c{{Ej{c}}}{}}{{{Al{{Ej{c}}}}}{}Ef}{{{Al{Ah{Ej{c}}}}}{{Al{Ahc}}}Ef}{{}Ab}{{}c{}}{{{Ej{c}}}c{}}5{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{EnEn}En}0{EnEn}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{F`{c}}}}}cCh}?>{Ab{{F`{c}}}Ch}{{{Al{{F`{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fb{c}}}}}{{Fd{{Al{{Dj{c}}}}{Al{{Dj{c}}}}}}}{}}:9{{{Al{{Fb{c}}}}}Ab{}}987{{{Al{Ah{Fb{c}}}}}B`{}}{{{Al{Ah{Fb{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fb{c}}}}}Bl{}}05{Ab{{Fb{c}}}{}}{{{Al{Ah{Fb{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fb{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Ff}}}Bl}>0`{{FhFh}{{Fd{FhFh}}}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Fj{ce}}}}}{{Al{{Dj{e}}}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Fj{ce}}}}}B`{}{}}{{{Al{{Fj{ce}}}}{Al{AhBn}}}C`{}l}{cc{}}{{{Fl{c}}}{{Fj{ec}}}{}{}}{{Abc}{{Fj{ce}}}{}{}}{{{Al{Ah{Fj{ce}}}}}{{Cd{{Al{Ah{Fl{e}}}}}}}{}{}}{{}Ab}{{}c{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Fn{c}}e}{{Fn{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dj{e}}}}{Cd{Ab}}}{{Fl{c}}}Bb{{G`{{Dj{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fn{c}}g}{{Bf{{Fn{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}En}{{{Al{Gd}}}En}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{EnAb}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dj{Gh}}}}}}En}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dj{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dj{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Gj{c}}}}}B`{}}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{{{Al{{Dj{c}}}}}{{Gj{c}}}Bb}{cc{}}{{{Fl{c}}}{{Gj{c}}}{}}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dj{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Fd{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{HfHj}{cc{}}0{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhEn}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfEn}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fl{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fl{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Fd{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Fd{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Fd{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dj{Gh}}}}}B`}000{{{Al{{Dj{c}}}}}{{Al{Ah{Dj{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0```{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kf}}}{{Al{{Dj{Gh}}}}}}{Al{{Al{c}}}{}}00{{{Al{Ah}}}{{Al{Ahc}}}{}}00{{{Al{Kj}}}Kj}{{{Al{Kl}}}Kl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kj}7{Ab{{Al{c}}}{}}{{{Al{Kj}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}00{AbB`}00{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`Kn}}}}{{{Al{Kj}}{Al{AhBn}}}C`}{{{Al{Kl}}{Al{AhBn}}}C`}{cc{}}0{KjKl}1{L`Kj}{L`Kl}{{{Fn{Kf}}}Kj}{{{Fn{Kf}}}Kl}{c{{Lb{Kl}}}Ld}{{{Al{{Dj{Gh}}}}}Kj}{{{Al{{Dj{Gh}}}}}Kl}{{{Fl{Gh}}}Kj}{{{Fl{Gh}}}Kl}{{}Ab}00{{}c{}}00{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LfIj}}}}{c{{Bf{KfIj}}}Lh}>{{{Al{Kl}}}Ab}{{{Al{Kj}}}B`}{{{Al{AhKl}}{Al{Ah{Dj{Gh}}}}}{{Lb{Ab}}}}{{{Al{AhKl}}Ab}Kj}3{{{Al{AhKf}}AbLj}{{Bf{B`Ij}}}}{{{Al{AhKl}}Ll}{{Lb{En}}}}{{{Al{Kj}}{Gb{Ab}}}Kj}{Alc{}}0{Kj{{Fl{Gh}}}}8{c{{Bf{e}}}{}{}}00{{}{{Bf{c}}}{}}00{AlDd}00>```{{{Al{{I`{}{{Ln{c}}}}}}}Bl{}}{{{I`{}{{Ln{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFf}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{M`{ceg}}}}}{{Al{{Dj{{Mb{ceg}}}}}}}{}{}{}}{{{Al{Ah{M`{ceg}}}}}{{Al{Ah{Fl{{Mb{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fl{{Mb{ceg}}}}}{{M`{ceg}}}{}{}{}}{{{Al{{M`{ceg}}}}En}{{Md{ceg}}}{}{}{}}{{{Al{{M`{ceg}}}}En}{{Fd{{Md{ceg}}Ab}}}{}{}{}}{{{Al{Ah{M`{ceg}}}}En}{{Fd{{Mf{ceg}}Ab}}}{}{}{}}{{{Al{Ah{M`{ceg}}}}En}{{Mf{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Mh}}}{{Al{Mj}}}}{{{Al{Mh}}}{{Al{Ml}}}}{{{Al{Mh}}}{{Al{{Dj{Gh}}}}}}{{{Al{Mh}}}{{Al{Ih}}}}22{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Mh}}}Mh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Mh}}{Al{Mh}}}Bd}{{Al{Al{c}}}Bd{}}{{}Mh}{{{Al{Mh}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Mh}}}Bh}{AbB`}{{{Al{Mh}}{Al{c}}}Bl{{G`{Ml}}Ef}}{{Al{Al{c}}}Bl{}}00{{{Al{Mh}}{Al{AhBn}}}C`}0{MnMh}{cc{}}{{{Al{Ml}}}Mh}{N`Mh}{{{Al{N`}}}Mh}{cMh{{H`{}{{Gn{{Al{Nb}}}}}}}}{cMh{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMh{{H`{}{{Gn{N`}}}}}}{cMh{{H`{}{{Gn{{Nd{Ml}}}}}}}}{cMh{{H`{}{{Gn{{Nf{Ml}}}}}}}}{cMh{{H`{}{{Gn{Mh}}}}}}{cMh{{H`{}{{Gn{{Al{Mh}}}}}}}}{cMh{{H`{}{{Gn{Nb}}}}}}::9{{{Al{Mh}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MhN`}{{{Al{Mh}}{Al{Mh}}}{{Cd{Bd}}}}{{{Al{Mh}}c}BfCn}{Alc{}}{AlN`}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{MnNh}}}}{AlDd}{{{Al{AhMh}}Nb}C`}{{{Al{AhMh}}Nj}C`}{{{Al{AhMh}}{Al{Ml}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Nl{ce}}}}}{{Nl{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{Nl{ce}}}}{Al{{Nl{ce}}}}}Bd{DlEb}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Nl{ce}}}}{Al{{Nl{ce}}}}}BlEb{}}{{Al{Al{c}}}Bl{}}00{{{Al{{Nl{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{Nl{ce}}}}{Al{{Nl{ce}}}}}{{Cd{Bd}}}{DlEb}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Nn}}}{{Al{{Dj{{O`{c}}}}}}}{}}{{{Al{Ob}}e}Al{}{{Od{{Dj{c}}}}}}{{{Al{AhOb}}e}{{Al{Ah}}}{}{{Od{{Dj{c}}}}}}{{{Al{Of}}}Bl}{{{Al{{Dj{Gh}}}}}En}{{{Al{Oh}}}{{Cd{{Al{c}}}}}{}}0{{{Al{Oj}}{Gb{Ab}}}Oj}0{{e{Al{Ah{Fl{Gh}}}}Ab}{{Al{Ah{Dj{g}}}}}{Olj}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{On}}{Al{{Dj{{Fd{HfHf}}}}}}{Al{Ah{Fl{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@`{c}}}}}{{A@`{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@`{c}}}}{Al{AhBn}}}C`l}{{}{{A@`{c}}}{}}{cc{}}1{{{Al{{A@`{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@`{c}}}}}Bl{}}55{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}?{{{Al{A@b}}}En}=;:765```````43{A@dA@d}{A@fA@f}{{{Al{{A@h{c}}}}}{{A@h{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@h{c}}}}{Al{{A@h{c}}}}}BdOl}{{Al{Al{c}}}Bd{}}98{{{Al{{A@h{c}}}}}EnGf}{AbB`}{{{Al{{A@h{c}}}}{Al{{A@h{c}}}}}BlA@j}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@h{c}}}}{Al{{A@h{c}}}}}BlOl}0{{{Al{{A@h{c}}}}{Al{Ahe}}}B`A@lCf}{{}Ab}{{}c{}}{{{Al{{A@h{c}}}}}BlI`}447{{{Al{{A@h{c}}}}{Al{{A@h{c}}}}}{{Cd{Bd}}}Ol}{ce{}{}}{Alc{}}{{{Al{{AAb{}{{A@n{c}}{AA`{e}}}}}}}c{}{}}{{{Al{Ol}}{Al{Ol}}}Bd}{{{Al{A@j}}{Al{A@j}}}Bl}{{{Al{Ol}}{Al{Ol}}}Bl}0{{{Al{A@l}}{Al{Ahc}}}B`Cf}{{{Al{{Dj{A@l}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@h{c}}}eI`{}}`{AAdc{}}``````{{{Al{{AAh{}{{AAf{c}}}}}}g}{{Fl{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAh{}{{AAf{c}}}}g}{{Fl{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAj}}Abc}B`j}{{{Al{Ah{Fl{c}}}}{Al{Ah{Fl{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Fd{ce}}}}}}}}}}{AAl{{Fd{AbAb}}}}{{{Al{AhAAn}}c}B`{}}{{{Al{AAl}}}{{Fd{AbAb}}}}{{AbA@f}AB`}","D":"A@`","p":[[17,"Abs"],[10,"AbsDiff",47],[10,"Num",788],[10,"PartialOrd",789],[10,"Copy",790],[10,"Debug",791],[10,"Send",790],[10,"Sync",790],[1,"usize"],[8,"PlHashMap",51],[8,"PlHashSet",51],[0,"mut"],[5,"Arena",69],[1,"reference"],[5,"Node",69],[1,"unit"],[10,"Clone",792],[6,"Ordering",789],[6,"Result",793],[10,"Deserializer",794],[10,"Deserialize",794],[1,"bool"],[5,"Formatter",791],[8,"Result",791],[1,"array"],[6,"Option",795],[10,"Hasher",796],[10,"Default",797],[17,"Output"],[10,"FnOnce",798],[10,"Serializer",799],[10,"Serialize",799],[10,"FnMut",798],[5,"TypeId",800],[1,"u32"],[5,"SyncCounter",136],[1,"slice"],[10,"Ord",789],[5,"FastFixedCache",159],[10,"Hash",796],[10,"Eq",789],[5,"FastCachedFunc",159],[10,"Sized",790],[10,"Borrow",801],[5,"SyncUnsafeCell",196],[1,"never"],[1,"u64"],[5,"LowContentionPool",220],[5,"FixedRingBuffer",237],[1,"tuple"],[10,"IsFloat",260],[10,"FloorDivMod",266],[5,"ForeignVec",268],[5,"Vec",802],[5,"Arc",803],[10,"AsRef",804],[5,"Range",805],[5,"BytesHash",290],[10,"DirtyHash",290],[1,"u8"],[5,"UnitVec",323],[10,"PartialEq",789],[17,"Item"],[10,"IntoIterator",806],[5,"Iter",807],[5,"IterMut",807],[8,"IdxSize",367],[8,"PolarsResult",808],[5,"NullableIdxSize",367],[5,"ChunkId",367],[10,"Indexable",367],[10,"IsNull",558],[10,"Bounded",367],[10,"NullCount",367],[10,"ToIdx",367],[5,"Path",809],[5,"Error",810],[6,"PolarsError",808],[5,"File",811],[10,"Itertools",434],[5,"EnumerateIdx",442],[10,"Iterator",812],[10,"Add",813],[10,"FromPrimitive",814],[10,"AddAssign",813],[10,"One",815],[10,"ExactSizeIterator",816],[10,"Zero",815],[10,"DoubleEndedIterator",817],[10,"MinMax",473],[5,"Mmap",480,818],[6,"Advice",819],[5,"MemSlice",480,820],[5,"MemReader",480],[5,"Error",791],[5,"Bytes",821],[8,"Result",810],[10,"Read",822],[5,"MmapMut",818],[10,"MmapAsRawDesc",818],[5,"RemapOptions",818],[6,"SeekFrom",822],[17,"Inner"],[5,"PartitionedHashMap",565],[5,"HashMap",823],[5,"RawEntryBuilder",823],[5,"RawEntryBuilderMut",823],[5,"PlSmallStr",584],[5,"OsStr",824],[1,"str"],[5,"CompactString",825],[5,"String",826],[1,"char"],[6,"Cow",827],[5,"Box",828],[6,"ToCompactStringError",825],[5,"Arguments",791],[5,"Priority",643],[10,"Slice2Uninit",667],[20,"MaybeUninit",829],[10,"GetSaferUnchecked",667],[10,"SliceIndex",830],[10,"SortedSlice",667],[10,"Extrema",667],[10,"SliceAble",667],[10,"TotalOrd",721],[5,"ThreadPool",831],[5,"SyncPtr",683],[5,"MemInfo",707],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",721],[10,"TotalEq",721],[10,"TotalHash",721],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",721],[10,"UnwrapUncheckedRelease",772],[17,"ItemIn"],[10,"ConvertVec",774],[10,"ResizeFaster",774],[10,"IntoRawParts",774],[10,"PushUnchecked",774],[10,"CapacityByFactor",774],[10,"InitHashMaps",51],[8,"PlIndexMap",51],[8,"PlIndexSet",51]],"r":[[0,367],[1,367],[481,820],[482,818]],"b":[[347,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[349,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[587,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[588,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[589,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[590,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[610,"impl-Display-for-PlSmallStr"],[611,"impl-Debug-for-PlSmallStr"],[612,"impl-From%3CCompactString%3E-for-PlSmallStr"],[614,"impl-From%3C%26str%3E-for-PlSmallStr"],[615,"impl-From%3CString%3E-for-PlSmallStr"],[616,"impl-From%3C%26String%3E-for-PlSmallStr"],[617,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[618,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[619,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[620,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[621,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[622,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[623,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[624,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJQCUgAAAAgACgBcAGkAAABrAAEAbgACAHMAFQCKAAoAlgAAAJkABAChAA8AswAFALsACQDGAAEAyQACAM0AAADRAAAA1gAMAOQAAQDnAAYA8AAGAPkAAAD7AAMAAQEDAAYBBgAOAQcAFwEAABoBAAAcAQYAJAEPADUBAgA5AQsARgEWAF4BAgBiAQYAagEnAJQBAACWAQQAnQEVALQBAAC2AQIAvAEJAMcBAADJAQIAzQEHANoBBgDmARsABAIAAAgCAgAPAgIAGAIBABsCAgAfAgAAIQIBACQCCQAvAgQANgIFAD0CAgBBAgkATAIZAGcCDwB4AgsAhQIOAJUCAACXAgoApAIEAKoCAACtAgYAtQICALkCAgC9AgAAvwIFAMYCBADNAgAAzwIDANcCAwDdAgwA6wIDAPACFQAHAwQADQMCABEDAAATAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[383971,188765,50819,80738,9220,3376,8573,26040]}